//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_CollectionAgent_CollectionSpecimen", "CollectionSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DiversityService.CollectionSpecimen), "CollectionAgent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.CollectionAgent), true)]
[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_CollectionEvent_CollectionEventSeries", "CollectionEventSeries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DiversityService.CollectionEventSeries), "CollectionEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.CollectionEvent), true)]
[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_CollectionLocalisation_CollectionEvent", "CollectionEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DiversityService.CollectionEvent), "CollectionEventLocalisation", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.CollectionEventLocalisation), true)]
[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_CollectionSpecimen_CollectionEvent", "CollectionEvent", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DiversityService.CollectionEvent), "CollectionSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.CollectionSpecimen), true)]
[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(DiversityService.CollectionEventSeries), "CollectionEventSeries1", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.CollectionEventSeries), true)]
[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_CollectionProject_CollectionSpecimen", "CollectionSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DiversityService.CollectionSpecimen), "CollectionProject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.CollectionProject), true)]
[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_IdentificationUnit_CollectionSpecimen", "CollectionSpecimen", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DiversityService.CollectionSpecimen), "IdentificationUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.IdentificationUnit), true)]
[assembly: EdmRelationshipAttribute("DiversityCollection", "FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(DiversityService.IdentificationUnit), "IdentificationUnitAnalysis", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(DiversityService.IdentificationUnitAnalysis), true)]

#endregion

namespace DiversityService
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class DiversityCollection_BaseTestEntities : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues DiversityCollection_BaseTestEntities-Objekt mithilfe der in Abschnitt 'DiversityCollection_BaseTestEntities' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public DiversityCollection_BaseTestEntities() : base("name=DiversityCollection_BaseTestEntities", "DiversityCollection_BaseTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues DiversityCollection_BaseTestEntities-Objekt.
        /// </summary>
        public DiversityCollection_BaseTestEntities(string connectionString) : base(connectionString, "DiversityCollection_BaseTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues DiversityCollection_BaseTestEntities-Objekt.
        /// </summary>
        public DiversityCollection_BaseTestEntities(EntityConnection connection) : base(connection, "DiversityCollection_BaseTestEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<AnalysisTaxonomicGroup> AnalysisTaxonomicGroup
        {
            get
            {
                if ((_AnalysisTaxonomicGroup == null))
                {
                    _AnalysisTaxonomicGroup = base.CreateObjectSet<AnalysisTaxonomicGroup>("AnalysisTaxonomicGroup");
                }
                return _AnalysisTaxonomicGroup;
            }
        }
        private ObjectSet<AnalysisTaxonomicGroup> _AnalysisTaxonomicGroup;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CollectionAgent> CollectionAgent
        {
            get
            {
                if ((_CollectionAgent == null))
                {
                    _CollectionAgent = base.CreateObjectSet<CollectionAgent>("CollectionAgent");
                }
                return _CollectionAgent;
            }
        }
        private ObjectSet<CollectionAgent> _CollectionAgent;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CollectionEvent> CollectionEvent
        {
            get
            {
                if ((_CollectionEvent == null))
                {
                    _CollectionEvent = base.CreateObjectSet<CollectionEvent>("CollectionEvent");
                }
                return _CollectionEvent;
            }
        }
        private ObjectSet<CollectionEvent> _CollectionEvent;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CollectionEventLocalisation> CollectionEventLocalisation
        {
            get
            {
                if ((_CollectionEventLocalisation == null))
                {
                    _CollectionEventLocalisation = base.CreateObjectSet<CollectionEventLocalisation>("CollectionEventLocalisation");
                }
                return _CollectionEventLocalisation;
            }
        }
        private ObjectSet<CollectionEventLocalisation> _CollectionEventLocalisation;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CollectionEventSeries> CollectionEventSeries
        {
            get
            {
                if ((_CollectionEventSeries == null))
                {
                    _CollectionEventSeries = base.CreateObjectSet<CollectionEventSeries>("CollectionEventSeries");
                }
                return _CollectionEventSeries;
            }
        }
        private ObjectSet<CollectionEventSeries> _CollectionEventSeries;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CollectionProject> CollectionProject
        {
            get
            {
                if ((_CollectionProject == null))
                {
                    _CollectionProject = base.CreateObjectSet<CollectionProject>("CollectionProject");
                }
                return _CollectionProject;
            }
        }
        private ObjectSet<CollectionProject> _CollectionProject;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<CollectionSpecimen> CollectionSpecimen
        {
            get
            {
                if ((_CollectionSpecimen == null))
                {
                    _CollectionSpecimen = base.CreateObjectSet<CollectionSpecimen>("CollectionSpecimen");
                }
                return _CollectionSpecimen;
            }
        }
        private ObjectSet<CollectionSpecimen> _CollectionSpecimen;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<IdentificationUnit> IdentificationUnit
        {
            get
            {
                if ((_IdentificationUnit == null))
                {
                    _IdentificationUnit = base.CreateObjectSet<IdentificationUnit>("IdentificationUnit");
                }
                return _IdentificationUnit;
            }
        }
        private ObjectSet<IdentificationUnit> _IdentificationUnit;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<IdentificationUnitAnalysis> IdentificationUnitAnalysis
        {
            get
            {
                if ((_IdentificationUnitAnalysis == null))
                {
                    _IdentificationUnitAnalysis = base.CreateObjectSet<IdentificationUnitAnalysis>("IdentificationUnitAnalysis");
                }
                return _IdentificationUnitAnalysis;
            }
        }
        private ObjectSet<IdentificationUnitAnalysis> _IdentificationUnitAnalysis;

        #endregion
        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'AnalysisTaxonomicGroup'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToAnalysisTaxonomicGroup(AnalysisTaxonomicGroup analysisTaxonomicGroup)
        {
            base.AddObject("AnalysisTaxonomicGroup", analysisTaxonomicGroup);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CollectionAgent'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCollectionAgent(CollectionAgent collectionAgent)
        {
            base.AddObject("CollectionAgent", collectionAgent);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CollectionEvent'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCollectionEvent(CollectionEvent collectionEvent)
        {
            base.AddObject("CollectionEvent", collectionEvent);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CollectionEventLocalisation'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCollectionEventLocalisation(CollectionEventLocalisation collectionEventLocalisation)
        {
            base.AddObject("CollectionEventLocalisation", collectionEventLocalisation);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CollectionEventSeries'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCollectionEventSeries(CollectionEventSeries collectionEventSeries)
        {
            base.AddObject("CollectionEventSeries", collectionEventSeries);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CollectionProject'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCollectionProject(CollectionProject collectionProject)
        {
            base.AddObject("CollectionProject", collectionProject);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'CollectionSpecimen'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToCollectionSpecimen(CollectionSpecimen collectionSpecimen)
        {
            base.AddObject("CollectionSpecimen", collectionSpecimen);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'IdentificationUnit'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToIdentificationUnit(IdentificationUnit identificationUnit)
        {
            base.AddObject("IdentificationUnit", identificationUnit);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'IdentificationUnitAnalysis'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToIdentificationUnitAnalysis(IdentificationUnitAnalysis identificationUnitAnalysis)
        {
            base.AddObject("IdentificationUnitAnalysis", identificationUnitAnalysis);
        }

        #endregion
    }
    

    #endregion
    
    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="AnalysisTaxonomicGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AnalysisTaxonomicGroup : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues AnalysisTaxonomicGroup-Objekt.
        /// </summary>
        /// <param name="analysisID">Anfangswert der Eigenschaft AnalysisID.</param>
        /// <param name="taxonomicGroup">Anfangswert der Eigenschaft TaxonomicGroup.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static AnalysisTaxonomicGroup CreateAnalysisTaxonomicGroup(global::System.Int32 analysisID, global::System.String taxonomicGroup, global::System.Guid rowGUID)
        {
            AnalysisTaxonomicGroup analysisTaxonomicGroup = new AnalysisTaxonomicGroup();
            analysisTaxonomicGroup.AnalysisID = analysisID;
            analysisTaxonomicGroup.TaxonomicGroup = taxonomicGroup;
            analysisTaxonomicGroup.RowGUID = rowGUID;
            return analysisTaxonomicGroup;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnalysisID
        {
            get
            {
                return _AnalysisID;
            }
            set
            {
                if (_AnalysisID != value)
                {
                    OnAnalysisIDChanging(value);
                    ReportPropertyChanging("AnalysisID");
                    _AnalysisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AnalysisID");
                    OnAnalysisIDChanged();
                }
            }
        }
        private global::System.Int32 _AnalysisID;
        partial void OnAnalysisIDChanging(global::System.Int32 value);
        partial void OnAnalysisIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonomicGroup
        {
            get
            {
                return _TaxonomicGroup;
            }
            set
            {
                if (_TaxonomicGroup != value)
                {
                    OnTaxonomicGroupChanging(value);
                    ReportPropertyChanging("TaxonomicGroup");
                    _TaxonomicGroup = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("TaxonomicGroup");
                    OnTaxonomicGroupChanged();
                }
            }
        }
        private global::System.String _TaxonomicGroup;
        partial void OnTaxonomicGroupChanging(global::System.String value);
        partial void OnTaxonomicGroupChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();

        #endregion
    
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="CollectionAgent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionAgent : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CollectionAgent-Objekt.
        /// </summary>
        /// <param name="collectionSpecimenID">Anfangswert der Eigenschaft CollectionSpecimenID.</param>
        /// <param name="collectorsName">Anfangswert der Eigenschaft CollectorsName.</param>
        /// <param name="xx_IsAvailable">Anfangswert der Eigenschaft xx_IsAvailable.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static CollectionAgent CreateCollectionAgent(global::System.Int32 collectionSpecimenID, global::System.String collectorsName, global::System.Boolean xx_IsAvailable, global::System.Guid rowGUID)
        {
            CollectionAgent collectionAgent = new CollectionAgent();
            collectionAgent.CollectionSpecimenID = collectionSpecimenID;
            collectionAgent.CollectorsName = collectorsName;
            collectionAgent.xx_IsAvailable = xx_IsAvailable;
            collectionAgent.RowGUID = rowGUID;
            return collectionAgent;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionSpecimenID
        {
            get
            {
                return _CollectionSpecimenID;
            }
            set
            {
                if (_CollectionSpecimenID != value)
                {
                    OnCollectionSpecimenIDChanging(value);
                    ReportPropertyChanging("CollectionSpecimenID");
                    _CollectionSpecimenID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionSpecimenID");
                    OnCollectionSpecimenIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionSpecimenID;
        partial void OnCollectionSpecimenIDChanging(global::System.Int32 value);
        partial void OnCollectionSpecimenIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CollectorsName
        {
            get
            {
                return _CollectorsName;
            }
            set
            {
                if (_CollectorsName != value)
                {
                    OnCollectorsNameChanging(value);
                    ReportPropertyChanging("CollectorsName");
                    _CollectorsName = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CollectorsName");
                    OnCollectorsNameChanged();
                }
            }
        }
        private global::System.String _CollectorsName;
        partial void OnCollectorsNameChanging(global::System.String value);
        partial void OnCollectorsNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectorsAgentURI
        {
            get
            {
                return _CollectorsAgentURI;
            }
            set
            {
                OnCollectorsAgentURIChanging(value);
                ReportPropertyChanging("CollectorsAgentURI");
                _CollectorsAgentURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectorsAgentURI");
                OnCollectorsAgentURIChanged();
            }
        }
        private global::System.String _CollectorsAgentURI;
        partial void OnCollectorsAgentURIChanging(global::System.String value);
        partial void OnCollectorsAgentURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CollectorsSequence
        {
            get
            {
                return _CollectorsSequence;
            }
            set
            {
                OnCollectorsSequenceChanging(value);
                ReportPropertyChanging("CollectorsSequence");
                _CollectorsSequence = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectorsSequence");
                OnCollectorsSequenceChanged();
            }
        }
        private Nullable<global::System.DateTime> _CollectorsSequence;
        partial void OnCollectorsSequenceChanging(Nullable<global::System.DateTime> value);
        partial void OnCollectorsSequenceChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectorsNumber
        {
            get
            {
                return _CollectorsNumber;
            }
            set
            {
                OnCollectorsNumberChanging(value);
                ReportPropertyChanging("CollectorsNumber");
                _CollectorsNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectorsNumber");
                OnCollectorsNumberChanged();
            }
        }
        private global::System.String _CollectorsNumber;
        partial void OnCollectorsNumberChanging(global::System.String value);
        partial void OnCollectorsNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataWithholdingReason
        {
            get
            {
                return _DataWithholdingReason;
            }
            set
            {
                OnDataWithholdingReasonChanging(value);
                ReportPropertyChanging("DataWithholdingReason");
                _DataWithholdingReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataWithholdingReason");
                OnDataWithholdingReasonChanged();
            }
        }
        private global::System.String _DataWithholdingReason;
        partial void OnDataWithholdingReasonChanging(global::System.String value);
        partial void OnDataWithholdingReasonChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean xx_IsAvailable
        {
            get
            {
                return _xx_IsAvailable;
            }
            set
            {
                Onxx_IsAvailableChanging(value);
                ReportPropertyChanging("xx_IsAvailable");
                _xx_IsAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_IsAvailable");
                Onxx_IsAvailableChanged();
            }
        }
        private global::System.Boolean _xx_IsAvailable;
        partial void Onxx_IsAvailableChanging(global::System.Boolean value);
        partial void Onxx_IsAvailableChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionAgent_CollectionSpecimen", "CollectionSpecimen")]
        public CollectionSpecimen CollectionSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionAgent_CollectionSpecimen", "CollectionSpecimen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionAgent_CollectionSpecimen", "CollectionSpecimen").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionSpecimen> CollectionSpecimenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionAgent_CollectionSpecimen", "CollectionSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionAgent_CollectionSpecimen", "CollectionSpecimen", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="CollectionEvent")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionEvent : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CollectionEvent-Objekt.
        /// </summary>
        /// <param name="collectionEventID">Anfangswert der Eigenschaft CollectionEventID.</param>
        /// <param name="version">Anfangswert der Eigenschaft Version.</param>
        /// <param name="xx_IsAvailable">Anfangswert der Eigenschaft xx_IsAvailable.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static CollectionEvent CreateCollectionEvent(global::System.Int32 collectionEventID, global::System.Int32 version, global::System.Boolean xx_IsAvailable, global::System.Guid rowGUID)
        {
            CollectionEvent collectionEvent = new CollectionEvent();
            collectionEvent.CollectionEventID = collectionEventID;
            collectionEvent.Version = version;
            collectionEvent.xx_IsAvailable = xx_IsAvailable;
            collectionEvent.RowGUID = rowGUID;
            return collectionEvent;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionEventID
        {
            get
            {
                return _CollectionEventID;
            }
            set
            {
                if (_CollectionEventID != value)
                {
                    OnCollectionEventIDChanging(value);
                    ReportPropertyChanging("CollectionEventID");
                    _CollectionEventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionEventID");
                    OnCollectionEventIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionEventID;
        partial void OnCollectionEventIDChanging(global::System.Int32 value);
        partial void OnCollectionEventIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeriesID
        {
            get
            {
                return _SeriesID;
            }
            set
            {
                OnSeriesIDChanging(value);
                ReportPropertyChanging("SeriesID");
                _SeriesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeriesID");
                OnSeriesIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SeriesID;
        partial void OnSeriesIDChanging(Nullable<global::System.Int32> value);
        partial void OnSeriesIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectorsEventNumber
        {
            get
            {
                return _CollectorsEventNumber;
            }
            set
            {
                OnCollectorsEventNumberChanging(value);
                ReportPropertyChanging("CollectorsEventNumber");
                _CollectorsEventNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectorsEventNumber");
                OnCollectorsEventNumberChanged();
            }
        }
        private global::System.String _CollectorsEventNumber;
        partial void OnCollectorsEventNumberChanging(global::System.String value);
        partial void OnCollectorsEventNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CollectionDate
        {
            get
            {
                return _CollectionDate;
            }
            set
            {
                OnCollectionDateChanging(value);
                ReportPropertyChanging("CollectionDate");
                _CollectionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionDate");
                OnCollectionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _CollectionDate;
        partial void OnCollectionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnCollectionDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> CollectionDay
        {
            get
            {
                return _CollectionDay;
            }
            set
            {
                OnCollectionDayChanging(value);
                ReportPropertyChanging("CollectionDay");
                _CollectionDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionDay");
                OnCollectionDayChanged();
            }
        }
        private Nullable<global::System.Byte> _CollectionDay;
        partial void OnCollectionDayChanging(Nullable<global::System.Byte> value);
        partial void OnCollectionDayChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> CollectionMonth
        {
            get
            {
                return _CollectionMonth;
            }
            set
            {
                OnCollectionMonthChanging(value);
                ReportPropertyChanging("CollectionMonth");
                _CollectionMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionMonth");
                OnCollectionMonthChanged();
            }
        }
        private Nullable<global::System.Byte> _CollectionMonth;
        partial void OnCollectionMonthChanging(Nullable<global::System.Byte> value);
        partial void OnCollectionMonthChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> CollectionYear
        {
            get
            {
                return _CollectionYear;
            }
            set
            {
                OnCollectionYearChanging(value);
                ReportPropertyChanging("CollectionYear");
                _CollectionYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionYear");
                OnCollectionYearChanged();
            }
        }
        private Nullable<global::System.Int16> _CollectionYear;
        partial void OnCollectionYearChanging(Nullable<global::System.Int16> value);
        partial void OnCollectionYearChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectionDateSupplement
        {
            get
            {
                return _CollectionDateSupplement;
            }
            set
            {
                OnCollectionDateSupplementChanging(value);
                ReportPropertyChanging("CollectionDateSupplement");
                _CollectionDateSupplement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectionDateSupplement");
                OnCollectionDateSupplementChanged();
            }
        }
        private global::System.String _CollectionDateSupplement;
        partial void OnCollectionDateSupplementChanging(global::System.String value);
        partial void OnCollectionDateSupplementChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectionDateCategory
        {
            get
            {
                return _CollectionDateCategory;
            }
            set
            {
                OnCollectionDateCategoryChanging(value);
                ReportPropertyChanging("CollectionDateCategory");
                _CollectionDateCategory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectionDateCategory");
                OnCollectionDateCategoryChanged();
            }
        }
        private global::System.String _CollectionDateCategory;
        partial void OnCollectionDateCategoryChanging(global::System.String value);
        partial void OnCollectionDateCategoryChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectionTime
        {
            get
            {
                return _CollectionTime;
            }
            set
            {
                OnCollectionTimeChanging(value);
                ReportPropertyChanging("CollectionTime");
                _CollectionTime = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectionTime");
                OnCollectionTimeChanged();
            }
        }
        private global::System.String _CollectionTime;
        partial void OnCollectionTimeChanging(global::System.String value);
        partial void OnCollectionTimeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectionTimeSpan
        {
            get
            {
                return _CollectionTimeSpan;
            }
            set
            {
                OnCollectionTimeSpanChanging(value);
                ReportPropertyChanging("CollectionTimeSpan");
                _CollectionTimeSpan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectionTimeSpan");
                OnCollectionTimeSpanChanged();
            }
        }
        private global::System.String _CollectionTimeSpan;
        partial void OnCollectionTimeSpanChanging(global::System.String value);
        partial void OnCollectionTimeSpanChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocalityDescription
        {
            get
            {
                return _LocalityDescription;
            }
            set
            {
                OnLocalityDescriptionChanging(value);
                ReportPropertyChanging("LocalityDescription");
                _LocalityDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocalityDescription");
                OnLocalityDescriptionChanged();
            }
        }
        private global::System.String _LocalityDescription;
        partial void OnLocalityDescriptionChanging(global::System.String value);
        partial void OnLocalityDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String HabitatDescription
        {
            get
            {
                return _HabitatDescription;
            }
            set
            {
                OnHabitatDescriptionChanging(value);
                ReportPropertyChanging("HabitatDescription");
                _HabitatDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("HabitatDescription");
                OnHabitatDescriptionChanged();
            }
        }
        private global::System.String _HabitatDescription;
        partial void OnHabitatDescriptionChanging(global::System.String value);
        partial void OnHabitatDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceTitle
        {
            get
            {
                return _ReferenceTitle;
            }
            set
            {
                OnReferenceTitleChanging(value);
                ReportPropertyChanging("ReferenceTitle");
                _ReferenceTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceTitle");
                OnReferenceTitleChanged();
            }
        }
        private global::System.String _ReferenceTitle;
        partial void OnReferenceTitleChanging(global::System.String value);
        partial void OnReferenceTitleChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceURI
        {
            get
            {
                return _ReferenceURI;
            }
            set
            {
                OnReferenceURIChanging(value);
                ReportPropertyChanging("ReferenceURI");
                _ReferenceURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceURI");
                OnReferenceURIChanged();
            }
        }
        private global::System.String _ReferenceURI;
        partial void OnReferenceURIChanging(global::System.String value);
        partial void OnReferenceURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CollectingMethod
        {
            get
            {
                return _CollectingMethod;
            }
            set
            {
                OnCollectingMethodChanging(value);
                ReportPropertyChanging("CollectingMethod");
                _CollectingMethod = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CollectingMethod");
                OnCollectingMethodChanged();
            }
        }
        private global::System.String _CollectingMethod;
        partial void OnCollectingMethodChanging(global::System.String value);
        partial void OnCollectingMethodChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CountryCache
        {
            get
            {
                return _CountryCache;
            }
            set
            {
                OnCountryCacheChanging(value);
                ReportPropertyChanging("CountryCache");
                _CountryCache = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CountryCache");
                OnCountryCacheChanged();
            }
        }
        private global::System.String _CountryCache;
        partial void OnCountryCacheChanging(global::System.String value);
        partial void OnCountryCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataWithholdingReason
        {
            get
            {
                return _DataWithholdingReason;
            }
            set
            {
                OnDataWithholdingReasonChanging(value);
                ReportPropertyChanging("DataWithholdingReason");
                _DataWithholdingReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataWithholdingReason");
                OnDataWithholdingReasonChanged();
            }
        }
        private global::System.String _DataWithholdingReason;
        partial void OnDataWithholdingReasonChanging(global::System.String value);
        partial void OnDataWithholdingReasonChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean xx_IsAvailable
        {
            get
            {
                return _xx_IsAvailable;
            }
            set
            {
                Onxx_IsAvailableChanging(value);
                ReportPropertyChanging("xx_IsAvailable");
                _xx_IsAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_IsAvailable");
                Onxx_IsAvailableChanged();
            }
        }
        private global::System.Boolean _xx_IsAvailable;
        partial void Onxx_IsAvailableChanging(global::System.Boolean value);
        partial void Onxx_IsAvailableChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> xx_ExpeditionID
        {
            get
            {
                return _xx_ExpeditionID;
            }
            set
            {
                Onxx_ExpeditionIDChanging(value);
                ReportPropertyChanging("xx_ExpeditionID");
                _xx_ExpeditionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_ExpeditionID");
                Onxx_ExpeditionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _xx_ExpeditionID;
        partial void Onxx_ExpeditionIDChanging(Nullable<global::System.Int32> value);
        partial void Onxx_ExpeditionIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceDetails
        {
            get
            {
                return _ReferenceDetails;
            }
            set
            {
                OnReferenceDetailsChanging(value);
                ReportPropertyChanging("ReferenceDetails");
                _ReferenceDetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceDetails");
                OnReferenceDetailsChanged();
            }
        }
        private global::System.String _ReferenceDetails;
        partial void OnReferenceDetailsChanging(global::System.String value);
        partial void OnReferenceDetailsChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionEvent_CollectionEventSeries", "CollectionEventSeries")]
        public CollectionEventSeries CollectionEventSeries
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEvent_CollectionEventSeries", "CollectionEventSeries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEvent_CollectionEventSeries", "CollectionEventSeries").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionEventSeries> CollectionEventSeriesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEvent_CollectionEventSeries", "CollectionEventSeries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEvent_CollectionEventSeries", "CollectionEventSeries", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionLocalisation_CollectionEvent", "CollectionEventLocalisation")]
        public EntityCollection<CollectionEventLocalisation> CollectionEventLocalisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionEventLocalisation>("DiversityCollection.FK_CollectionLocalisation_CollectionEvent", "CollectionEventLocalisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionEventLocalisation>("DiversityCollection.FK_CollectionLocalisation_CollectionEvent", "CollectionEventLocalisation", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionSpecimen_CollectionEvent", "CollectionSpecimen")]
        public EntityCollection<CollectionSpecimen> CollectionSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionSpecimen>("DiversityCollection.FK_CollectionSpecimen_CollectionEvent", "CollectionSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionSpecimen>("DiversityCollection.FK_CollectionSpecimen_CollectionEvent", "CollectionSpecimen", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="CollectionEventLocalisation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionEventLocalisation : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CollectionEventLocalisation-Objekt.
        /// </summary>
        /// <param name="collectionEventID">Anfangswert der Eigenschaft CollectionEventID.</param>
        /// <param name="localisationSystemID">Anfangswert der Eigenschaft LocalisationSystemID.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static CollectionEventLocalisation CreateCollectionEventLocalisation(global::System.Int32 collectionEventID, global::System.Int32 localisationSystemID, global::System.Guid rowGUID)
        {
            CollectionEventLocalisation collectionEventLocalisation = new CollectionEventLocalisation();
            collectionEventLocalisation.CollectionEventID = collectionEventID;
            collectionEventLocalisation.LocalisationSystemID = localisationSystemID;
            collectionEventLocalisation.RowGUID = rowGUID;
            return collectionEventLocalisation;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionEventID
        {
            get
            {
                return _CollectionEventID;
            }
            set
            {
                if (_CollectionEventID != value)
                {
                    OnCollectionEventIDChanging(value);
                    ReportPropertyChanging("CollectionEventID");
                    _CollectionEventID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionEventID");
                    OnCollectionEventIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionEventID;
        partial void OnCollectionEventIDChanging(global::System.Int32 value);
        partial void OnCollectionEventIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LocalisationSystemID
        {
            get
            {
                return _LocalisationSystemID;
            }
            set
            {
                if (_LocalisationSystemID != value)
                {
                    OnLocalisationSystemIDChanging(value);
                    ReportPropertyChanging("LocalisationSystemID");
                    _LocalisationSystemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LocalisationSystemID");
                    OnLocalisationSystemIDChanged();
                }
            }
        }
        private global::System.Int32 _LocalisationSystemID;
        partial void OnLocalisationSystemIDChanging(global::System.Int32 value);
        partial void OnLocalisationSystemIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location1
        {
            get
            {
                return _Location1;
            }
            set
            {
                OnLocation1Changing(value);
                ReportPropertyChanging("Location1");
                _Location1 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location1");
                OnLocation1Changed();
            }
        }
        private global::System.String _Location1;
        partial void OnLocation1Changing(global::System.String value);
        partial void OnLocation1Changed();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Location2
        {
            get
            {
                return _Location2;
            }
            set
            {
                OnLocation2Changing(value);
                ReportPropertyChanging("Location2");
                _Location2 = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Location2");
                OnLocation2Changed();
            }
        }
        private global::System.String _Location2;
        partial void OnLocation2Changing(global::System.String value);
        partial void OnLocation2Changed();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationAccuracy
        {
            get
            {
                return _LocationAccuracy;
            }
            set
            {
                OnLocationAccuracyChanging(value);
                ReportPropertyChanging("LocationAccuracy");
                _LocationAccuracy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationAccuracy");
                OnLocationAccuracyChanged();
            }
        }
        private global::System.String _LocationAccuracy;
        partial void OnLocationAccuracyChanging(global::System.String value);
        partial void OnLocationAccuracyChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LocationNotes
        {
            get
            {
                return _LocationNotes;
            }
            set
            {
                OnLocationNotesChanging(value);
                ReportPropertyChanging("LocationNotes");
                _LocationNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LocationNotes");
                OnLocationNotesChanged();
            }
        }
        private global::System.String _LocationNotes;
        partial void OnLocationNotesChanging(global::System.String value);
        partial void OnLocationNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DeterminationDate
        {
            get
            {
                return _DeterminationDate;
            }
            set
            {
                OnDeterminationDateChanging(value);
                ReportPropertyChanging("DeterminationDate");
                _DeterminationDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DeterminationDate");
                OnDeterminationDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _DeterminationDate;
        partial void OnDeterminationDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDeterminationDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DistanceToLocation
        {
            get
            {
                return _DistanceToLocation;
            }
            set
            {
                OnDistanceToLocationChanging(value);
                ReportPropertyChanging("DistanceToLocation");
                _DistanceToLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DistanceToLocation");
                OnDistanceToLocationChanged();
            }
        }
        private global::System.String _DistanceToLocation;
        partial void OnDistanceToLocationChanging(global::System.String value);
        partial void OnDistanceToLocationChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DirectionToLocation
        {
            get
            {
                return _DirectionToLocation;
            }
            set
            {
                OnDirectionToLocationChanging(value);
                ReportPropertyChanging("DirectionToLocation");
                _DirectionToLocation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DirectionToLocation");
                OnDirectionToLocationChanged();
            }
        }
        private global::System.String _DirectionToLocation;
        partial void OnDirectionToLocationChanging(global::System.String value);
        partial void OnDirectionToLocationChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponsibleName
        {
            get
            {
                return _ResponsibleName;
            }
            set
            {
                OnResponsibleNameChanging(value);
                ReportPropertyChanging("ResponsibleName");
                _ResponsibleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponsibleName");
                OnResponsibleNameChanged();
            }
        }
        private global::System.String _ResponsibleName;
        partial void OnResponsibleNameChanging(global::System.String value);
        partial void OnResponsibleNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponsibleAgentURI
        {
            get
            {
                return _ResponsibleAgentURI;
            }
            set
            {
                OnResponsibleAgentURIChanging(value);
                ReportPropertyChanging("ResponsibleAgentURI");
                _ResponsibleAgentURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponsibleAgentURI");
                OnResponsibleAgentURIChanged();
            }
        }
        private global::System.String _ResponsibleAgentURI;
        partial void OnResponsibleAgentURIChanging(global::System.String value);
        partial void OnResponsibleAgentURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AverageAltitudeCache
        {
            get
            {
                return _AverageAltitudeCache;
            }
            set
            {
                OnAverageAltitudeCacheChanging(value);
                ReportPropertyChanging("AverageAltitudeCache");
                _AverageAltitudeCache = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageAltitudeCache");
                OnAverageAltitudeCacheChanged();
            }
        }
        private Nullable<global::System.Double> _AverageAltitudeCache;
        partial void OnAverageAltitudeCacheChanging(Nullable<global::System.Double> value);
        partial void OnAverageAltitudeCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AverageLatitudeCache
        {
            get
            {
                return _AverageLatitudeCache;
            }
            set
            {
                OnAverageLatitudeCacheChanging(value);
                ReportPropertyChanging("AverageLatitudeCache");
                _AverageLatitudeCache = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageLatitudeCache");
                OnAverageLatitudeCacheChanged();
            }
        }
        private Nullable<global::System.Double> _AverageLatitudeCache;
        partial void OnAverageLatitudeCacheChanging(Nullable<global::System.Double> value);
        partial void OnAverageLatitudeCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> AverageLongitudeCache
        {
            get
            {
                return _AverageLongitudeCache;
            }
            set
            {
                OnAverageLongitudeCacheChanging(value);
                ReportPropertyChanging("AverageLongitudeCache");
                _AverageLongitudeCache = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AverageLongitudeCache");
                OnAverageLongitudeCacheChanged();
            }
        }
        private Nullable<global::System.Double> _AverageLongitudeCache;
        partial void OnAverageLongitudeCacheChanging(Nullable<global::System.Double> value);
        partial void OnAverageLongitudeCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionLocalisation_CollectionEvent", "CollectionEvent")]
        public CollectionEvent CollectionEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionLocalisation_CollectionEvent", "CollectionEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionLocalisation_CollectionEvent", "CollectionEvent").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionEvent> CollectionEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionLocalisation_CollectionEvent", "CollectionEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionLocalisation_CollectionEvent", "CollectionEvent", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="CollectionEventSeries")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionEventSeries : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CollectionEventSeries-Objekt.
        /// </summary>
        /// <param name="seriesID">Anfangswert der Eigenschaft SeriesID.</param>
        /// <param name="description">Anfangswert der Eigenschaft Description.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static CollectionEventSeries CreateCollectionEventSeries(global::System.Int32 seriesID, global::System.String description, global::System.Guid rowGUID)
        {
            CollectionEventSeries collectionEventSeries = new CollectionEventSeries();
            collectionEventSeries.SeriesID = seriesID;
            collectionEventSeries.Description = description;
            collectionEventSeries.RowGUID = rowGUID;
            return collectionEventSeries;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 SeriesID
        {
            get
            {
                return _SeriesID;
            }
            set
            {
                if (_SeriesID != value)
                {
                    OnSeriesIDChanging(value);
                    ReportPropertyChanging("SeriesID");
                    _SeriesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("SeriesID");
                    OnSeriesIDChanged();
                }
            }
        }
        private global::System.Int32 _SeriesID;
        partial void OnSeriesIDChanging(global::System.Int32 value);
        partial void OnSeriesIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SeriesParentID
        {
            get
            {
                return _SeriesParentID;
            }
            set
            {
                OnSeriesParentIDChanging(value);
                ReportPropertyChanging("SeriesParentID");
                _SeriesParentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SeriesParentID");
                OnSeriesParentIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SeriesParentID;
        partial void OnSeriesParentIDChanging(Nullable<global::System.Int32> value);
        partial void OnSeriesParentIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SeriesCode
        {
            get
            {
                return _SeriesCode;
            }
            set
            {
                OnSeriesCodeChanging(value);
                ReportPropertyChanging("SeriesCode");
                _SeriesCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SeriesCode");
                OnSeriesCodeChanged();
            }
        }
        private global::System.String _SeriesCode;
        partial void OnSeriesCodeChanging(global::System.String value);
        partial void OnSeriesCodeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateCache
        {
            get
            {
                return _DateCache;
            }
            set
            {
                OnDateCacheChanging(value);
                ReportPropertyChanging("DateCache");
                _DateCache = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCache");
                OnDateCacheChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateCache;
        partial void OnDateCacheChanging(Nullable<global::System.DateTime> value);
        partial void OnDateCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateStart
        {
            get
            {
                return _DateStart;
            }
            set
            {
                OnDateStartChanging(value);
                ReportPropertyChanging("DateStart");
                _DateStart = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateStart");
                OnDateStartChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateStart;
        partial void OnDateStartChanging(Nullable<global::System.DateTime> value);
        partial void OnDateStartChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionEvent_CollectionEventSeries", "CollectionEvent")]
        public EntityCollection<CollectionEvent> CollectionEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionEvent>("DiversityCollection.FK_CollectionEvent_CollectionEventSeries", "CollectionEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionEvent>("DiversityCollection.FK_CollectionEvent_CollectionEventSeries", "CollectionEvent", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries1")]
        public EntityCollection<CollectionEventSeries> CollectionEventSeries1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionEventSeries>("DiversityCollection.FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries1");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionEventSeries>("DiversityCollection.FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries1", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries")]
        public CollectionEventSeries CollectionEventSeries2
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionEventSeries> CollectionEventSeries2Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionEventSeries>("DiversityCollection.FK_CollectionEventSeries_CollectionEventSeries", "CollectionEventSeries", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="CollectionProject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionProject : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CollectionProject-Objekt.
        /// </summary>
        /// <param name="collectionSpecimenID">Anfangswert der Eigenschaft CollectionSpecimenID.</param>
        /// <param name="projectID">Anfangswert der Eigenschaft ProjectID.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static CollectionProject CreateCollectionProject(global::System.Int32 collectionSpecimenID, global::System.Int32 projectID, global::System.Guid rowGUID)
        {
            CollectionProject collectionProject = new CollectionProject();
            collectionProject.CollectionSpecimenID = collectionSpecimenID;
            collectionProject.ProjectID = projectID;
            collectionProject.RowGUID = rowGUID;
            return collectionProject;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionSpecimenID
        {
            get
            {
                return _CollectionSpecimenID;
            }
            set
            {
                if (_CollectionSpecimenID != value)
                {
                    OnCollectionSpecimenIDChanging(value);
                    ReportPropertyChanging("CollectionSpecimenID");
                    _CollectionSpecimenID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionSpecimenID");
                    OnCollectionSpecimenIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionSpecimenID;
        partial void OnCollectionSpecimenIDChanging(global::System.Int32 value);
        partial void OnCollectionSpecimenIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ProjectID
        {
            get
            {
                return _ProjectID;
            }
            set
            {
                if (_ProjectID != value)
                {
                    OnProjectIDChanging(value);
                    ReportPropertyChanging("ProjectID");
                    _ProjectID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProjectID");
                    OnProjectIDChanged();
                }
            }
        }
        private global::System.Int32 _ProjectID;
        partial void OnProjectIDChanging(global::System.Int32 value);
        partial void OnProjectIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionProject_CollectionSpecimen", "CollectionSpecimen")]
        public CollectionSpecimen CollectionSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionProject_CollectionSpecimen", "CollectionSpecimen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionProject_CollectionSpecimen", "CollectionSpecimen").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionSpecimen> CollectionSpecimenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionProject_CollectionSpecimen", "CollectionSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionSpecimen>("DiversityCollection.FK_CollectionProject_CollectionSpecimen", "CollectionSpecimen", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="CollectionSpecimen")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CollectionSpecimen : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues CollectionSpecimen-Objekt.
        /// </summary>
        /// <param name="collectionSpecimenID">Anfangswert der Eigenschaft CollectionSpecimenID.</param>
        /// <param name="version">Anfangswert der Eigenschaft Version.</param>
        /// <param name="xx_IsAvailable">Anfangswert der Eigenschaft xx_IsAvailable.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static CollectionSpecimen CreateCollectionSpecimen(global::System.Int32 collectionSpecimenID, global::System.Int32 version, global::System.Boolean xx_IsAvailable, global::System.Guid rowGUID)
        {
            CollectionSpecimen collectionSpecimen = new CollectionSpecimen();
            collectionSpecimen.CollectionSpecimenID = collectionSpecimenID;
            collectionSpecimen.Version = version;
            collectionSpecimen.xx_IsAvailable = xx_IsAvailable;
            collectionSpecimen.RowGUID = rowGUID;
            return collectionSpecimen;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionSpecimenID
        {
            get
            {
                return _CollectionSpecimenID;
            }
            set
            {
                if (_CollectionSpecimenID != value)
                {
                    OnCollectionSpecimenIDChanging(value);
                    ReportPropertyChanging("CollectionSpecimenID");
                    _CollectionSpecimenID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionSpecimenID");
                    OnCollectionSpecimenIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionSpecimenID;
        partial void OnCollectionSpecimenIDChanging(global::System.Int32 value);
        partial void OnCollectionSpecimenIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Version
        {
            get
            {
                return _Version;
            }
            set
            {
                OnVersionChanging(value);
                ReportPropertyChanging("Version");
                _Version = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Version");
                OnVersionChanged();
            }
        }
        private global::System.Int32 _Version;
        partial void OnVersionChanging(global::System.Int32 value);
        partial void OnVersionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CollectionEventID
        {
            get
            {
                return _CollectionEventID;
            }
            set
            {
                OnCollectionEventIDChanging(value);
                ReportPropertyChanging("CollectionEventID");
                _CollectionEventID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionEventID");
                OnCollectionEventIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CollectionEventID;
        partial void OnCollectionEventIDChanging(Nullable<global::System.Int32> value);
        partial void OnCollectionEventIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CollectionID
        {
            get
            {
                return _CollectionID;
            }
            set
            {
                OnCollectionIDChanging(value);
                ReportPropertyChanging("CollectionID");
                _CollectionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CollectionID");
                OnCollectionIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CollectionID;
        partial void OnCollectionIDChanging(Nullable<global::System.Int32> value);
        partial void OnCollectionIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccessionNumber
        {
            get
            {
                return _AccessionNumber;
            }
            set
            {
                OnAccessionNumberChanging(value);
                ReportPropertyChanging("AccessionNumber");
                _AccessionNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccessionNumber");
                OnAccessionNumberChanged();
            }
        }
        private global::System.String _AccessionNumber;
        partial void OnAccessionNumberChanging(global::System.String value);
        partial void OnAccessionNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> AccessionDate
        {
            get
            {
                return _AccessionDate;
            }
            set
            {
                OnAccessionDateChanging(value);
                ReportPropertyChanging("AccessionDate");
                _AccessionDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessionDate");
                OnAccessionDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _AccessionDate;
        partial void OnAccessionDateChanging(Nullable<global::System.DateTime> value);
        partial void OnAccessionDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> AccessionDay
        {
            get
            {
                return _AccessionDay;
            }
            set
            {
                OnAccessionDayChanging(value);
                ReportPropertyChanging("AccessionDay");
                _AccessionDay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessionDay");
                OnAccessionDayChanged();
            }
        }
        private Nullable<global::System.Byte> _AccessionDay;
        partial void OnAccessionDayChanging(Nullable<global::System.Byte> value);
        partial void OnAccessionDayChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> AccessionMonth
        {
            get
            {
                return _AccessionMonth;
            }
            set
            {
                OnAccessionMonthChanging(value);
                ReportPropertyChanging("AccessionMonth");
                _AccessionMonth = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessionMonth");
                OnAccessionMonthChanged();
            }
        }
        private Nullable<global::System.Byte> _AccessionMonth;
        partial void OnAccessionMonthChanging(Nullable<global::System.Byte> value);
        partial void OnAccessionMonthChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> AccessionYear
        {
            get
            {
                return _AccessionYear;
            }
            set
            {
                OnAccessionYearChanging(value);
                ReportPropertyChanging("AccessionYear");
                _AccessionYear = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccessionYear");
                OnAccessionYearChanged();
            }
        }
        private Nullable<global::System.Int16> _AccessionYear;
        partial void OnAccessionYearChanging(Nullable<global::System.Int16> value);
        partial void OnAccessionYearChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccessionDateSupplement
        {
            get
            {
                return _AccessionDateSupplement;
            }
            set
            {
                OnAccessionDateSupplementChanging(value);
                ReportPropertyChanging("AccessionDateSupplement");
                _AccessionDateSupplement = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccessionDateSupplement");
                OnAccessionDateSupplementChanged();
            }
        }
        private global::System.String _AccessionDateSupplement;
        partial void OnAccessionDateSupplementChanging(global::System.String value);
        partial void OnAccessionDateSupplementChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AccessionDateCategory
        {
            get
            {
                return _AccessionDateCategory;
            }
            set
            {
                OnAccessionDateCategoryChanging(value);
                ReportPropertyChanging("AccessionDateCategory");
                _AccessionDateCategory = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AccessionDateCategory");
                OnAccessionDateCategoryChanged();
            }
        }
        private global::System.String _AccessionDateCategory;
        partial void OnAccessionDateCategoryChanging(global::System.String value);
        partial void OnAccessionDateCategoryChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepositorsName
        {
            get
            {
                return _DepositorsName;
            }
            set
            {
                OnDepositorsNameChanging(value);
                ReportPropertyChanging("DepositorsName");
                _DepositorsName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepositorsName");
                OnDepositorsNameChanged();
            }
        }
        private global::System.String _DepositorsName;
        partial void OnDepositorsNameChanging(global::System.String value);
        partial void OnDepositorsNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepositorsAgentURI
        {
            get
            {
                return _DepositorsAgentURI;
            }
            set
            {
                OnDepositorsAgentURIChanging(value);
                ReportPropertyChanging("DepositorsAgentURI");
                _DepositorsAgentURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepositorsAgentURI");
                OnDepositorsAgentURIChanged();
            }
        }
        private global::System.String _DepositorsAgentURI;
        partial void OnDepositorsAgentURIChanging(global::System.String value);
        partial void OnDepositorsAgentURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DepositorsAccessionNumber
        {
            get
            {
                return _DepositorsAccessionNumber;
            }
            set
            {
                OnDepositorsAccessionNumberChanging(value);
                ReportPropertyChanging("DepositorsAccessionNumber");
                _DepositorsAccessionNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DepositorsAccessionNumber");
                OnDepositorsAccessionNumberChanged();
            }
        }
        private global::System.String _DepositorsAccessionNumber;
        partial void OnDepositorsAccessionNumberChanging(global::System.String value);
        partial void OnDepositorsAccessionNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabelTitle
        {
            get
            {
                return _LabelTitle;
            }
            set
            {
                OnLabelTitleChanging(value);
                ReportPropertyChanging("LabelTitle");
                _LabelTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabelTitle");
                OnLabelTitleChanged();
            }
        }
        private global::System.String _LabelTitle;
        partial void OnLabelTitleChanging(global::System.String value);
        partial void OnLabelTitleChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabelType
        {
            get
            {
                return _LabelType;
            }
            set
            {
                OnLabelTypeChanging(value);
                ReportPropertyChanging("LabelType");
                _LabelType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabelType");
                OnLabelTypeChanged();
            }
        }
        private global::System.String _LabelType;
        partial void OnLabelTypeChanging(global::System.String value);
        partial void OnLabelTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabelTranscriptionState
        {
            get
            {
                return _LabelTranscriptionState;
            }
            set
            {
                OnLabelTranscriptionStateChanging(value);
                ReportPropertyChanging("LabelTranscriptionState");
                _LabelTranscriptionState = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabelTranscriptionState");
                OnLabelTranscriptionStateChanged();
            }
        }
        private global::System.String _LabelTranscriptionState;
        partial void OnLabelTranscriptionStateChanging(global::System.String value);
        partial void OnLabelTranscriptionStateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LabelTranscriptionNotes
        {
            get
            {
                return _LabelTranscriptionNotes;
            }
            set
            {
                OnLabelTranscriptionNotesChanging(value);
                ReportPropertyChanging("LabelTranscriptionNotes");
                _LabelTranscriptionNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LabelTranscriptionNotes");
                OnLabelTranscriptionNotesChanged();
            }
        }
        private global::System.String _LabelTranscriptionNotes;
        partial void OnLabelTranscriptionNotesChanging(global::System.String value);
        partial void OnLabelTranscriptionNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExsiccataURI
        {
            get
            {
                return _ExsiccataURI;
            }
            set
            {
                OnExsiccataURIChanging(value);
                ReportPropertyChanging("ExsiccataURI");
                _ExsiccataURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExsiccataURI");
                OnExsiccataURIChanged();
            }
        }
        private global::System.String _ExsiccataURI;
        partial void OnExsiccataURIChanging(global::System.String value);
        partial void OnExsiccataURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExsiccataAbbreviation
        {
            get
            {
                return _ExsiccataAbbreviation;
            }
            set
            {
                OnExsiccataAbbreviationChanging(value);
                ReportPropertyChanging("ExsiccataAbbreviation");
                _ExsiccataAbbreviation = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExsiccataAbbreviation");
                OnExsiccataAbbreviationChanged();
            }
        }
        private global::System.String _ExsiccataAbbreviation;
        partial void OnExsiccataAbbreviationChanging(global::System.String value);
        partial void OnExsiccataAbbreviationChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OriginalNotes
        {
            get
            {
                return _OriginalNotes;
            }
            set
            {
                OnOriginalNotesChanging(value);
                ReportPropertyChanging("OriginalNotes");
                _OriginalNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OriginalNotes");
                OnOriginalNotesChanged();
            }
        }
        private global::System.String _OriginalNotes;
        partial void OnOriginalNotesChanging(global::System.String value);
        partial void OnOriginalNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AdditionalNotes
        {
            get
            {
                return _AdditionalNotes;
            }
            set
            {
                OnAdditionalNotesChanging(value);
                ReportPropertyChanging("AdditionalNotes");
                _AdditionalNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AdditionalNotes");
                OnAdditionalNotesChanged();
            }
        }
        private global::System.String _AdditionalNotes;
        partial void OnAdditionalNotesChanging(global::System.String value);
        partial void OnAdditionalNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceTitle
        {
            get
            {
                return _ReferenceTitle;
            }
            set
            {
                OnReferenceTitleChanging(value);
                ReportPropertyChanging("ReferenceTitle");
                _ReferenceTitle = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceTitle");
                OnReferenceTitleChanged();
            }
        }
        private global::System.String _ReferenceTitle;
        partial void OnReferenceTitleChanging(global::System.String value);
        partial void OnReferenceTitleChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceURI
        {
            get
            {
                return _ReferenceURI;
            }
            set
            {
                OnReferenceURIChanging(value);
                ReportPropertyChanging("ReferenceURI");
                _ReferenceURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceURI");
                OnReferenceURIChanged();
            }
        }
        private global::System.String _ReferenceURI;
        partial void OnReferenceURIChanging(global::System.String value);
        partial void OnReferenceURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Problems
        {
            get
            {
                return _Problems;
            }
            set
            {
                OnProblemsChanging(value);
                ReportPropertyChanging("Problems");
                _Problems = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Problems");
                OnProblemsChanged();
            }
        }
        private global::System.String _Problems;
        partial void OnProblemsChanging(global::System.String value);
        partial void OnProblemsChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataWithholdingReason
        {
            get
            {
                return _DataWithholdingReason;
            }
            set
            {
                OnDataWithholdingReasonChanging(value);
                ReportPropertyChanging("DataWithholdingReason");
                _DataWithholdingReason = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataWithholdingReason");
                OnDataWithholdingReasonChanged();
            }
        }
        private global::System.String _DataWithholdingReason;
        partial void OnDataWithholdingReasonChanging(global::System.String value);
        partial void OnDataWithholdingReasonChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean xx_IsAvailable
        {
            get
            {
                return _xx_IsAvailable;
            }
            set
            {
                Onxx_IsAvailableChanging(value);
                ReportPropertyChanging("xx_IsAvailable");
                _xx_IsAvailable = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_IsAvailable");
                Onxx_IsAvailableChanged();
            }
        }
        private global::System.Boolean _xx_IsAvailable;
        partial void Onxx_IsAvailableChanging(global::System.Boolean value);
        partial void Onxx_IsAvailableChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String InternalNotes
        {
            get
            {
                return _InternalNotes;
            }
            set
            {
                OnInternalNotesChanging(value);
                ReportPropertyChanging("InternalNotes");
                _InternalNotes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("InternalNotes");
                OnInternalNotesChanged();
            }
        }
        private global::System.String _InternalNotes;
        partial void OnInternalNotesChanging(global::System.String value);
        partial void OnInternalNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ExternalDatasourceID
        {
            get
            {
                return _ExternalDatasourceID;
            }
            set
            {
                OnExternalDatasourceIDChanging(value);
                ReportPropertyChanging("ExternalDatasourceID");
                _ExternalDatasourceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExternalDatasourceID");
                OnExternalDatasourceIDChanged();
            }
        }
        private Nullable<global::System.Int32> _ExternalDatasourceID;
        partial void OnExternalDatasourceIDChanging(Nullable<global::System.Int32> value);
        partial void OnExternalDatasourceIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalIdentifier
        {
            get
            {
                return _ExternalIdentifier;
            }
            set
            {
                OnExternalIdentifierChanging(value);
                ReportPropertyChanging("ExternalIdentifier");
                _ExternalIdentifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalIdentifier");
                OnExternalIdentifierChanged();
            }
        }
        private global::System.String _ExternalIdentifier;
        partial void OnExternalIdentifierChanging(global::System.String value);
        partial void OnExternalIdentifierChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ReferenceDetails
        {
            get
            {
                return _ReferenceDetails;
            }
            set
            {
                OnReferenceDetailsChanging(value);
                ReportPropertyChanging("ReferenceDetails");
                _ReferenceDetails = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ReferenceDetails");
                OnReferenceDetailsChanged();
            }
        }
        private global::System.String _ReferenceDetails;
        partial void OnReferenceDetailsChanging(global::System.String value);
        partial void OnReferenceDetailsChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionAgent_CollectionSpecimen", "CollectionAgent")]
        public EntityCollection<CollectionAgent> CollectionAgent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionAgent>("DiversityCollection.FK_CollectionAgent_CollectionSpecimen", "CollectionAgent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionAgent>("DiversityCollection.FK_CollectionAgent_CollectionSpecimen", "CollectionAgent", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionSpecimen_CollectionEvent", "CollectionEvent")]
        public CollectionEvent CollectionEvent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionSpecimen_CollectionEvent", "CollectionEvent").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionSpecimen_CollectionEvent", "CollectionEvent").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionEvent> CollectionEventReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionSpecimen_CollectionEvent", "CollectionEvent");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionEvent>("DiversityCollection.FK_CollectionSpecimen_CollectionEvent", "CollectionEvent", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_CollectionProject_CollectionSpecimen", "CollectionProject")]
        public EntityCollection<CollectionProject> CollectionProject
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CollectionProject>("DiversityCollection.FK_CollectionProject_CollectionSpecimen", "CollectionProject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CollectionProject>("DiversityCollection.FK_CollectionProject_CollectionSpecimen", "CollectionProject", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_IdentificationUnit_CollectionSpecimen", "IdentificationUnit")]
        public EntityCollection<IdentificationUnit> IdentificationUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IdentificationUnit>("DiversityCollection.FK_IdentificationUnit_CollectionSpecimen", "IdentificationUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IdentificationUnit>("DiversityCollection.FK_IdentificationUnit_CollectionSpecimen", "IdentificationUnit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="IdentificationUnit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdentificationUnit : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues IdentificationUnit-Objekt.
        /// </summary>
        /// <param name="collectionSpecimenID">Anfangswert der Eigenschaft CollectionSpecimenID.</param>
        /// <param name="identificationUnitID">Anfangswert der Eigenschaft IdentificationUnitID.</param>
        /// <param name="lastIdentificationCache">Anfangswert der Eigenschaft LastIdentificationCache.</param>
        /// <param name="taxonomicGroup">Anfangswert der Eigenschaft TaxonomicGroup.</param>
        /// <param name="displayOrder">Anfangswert der Eigenschaft DisplayOrder.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static IdentificationUnit CreateIdentificationUnit(global::System.Int32 collectionSpecimenID, global::System.Int32 identificationUnitID, global::System.String lastIdentificationCache, global::System.String taxonomicGroup, global::System.Int16 displayOrder, global::System.Guid rowGUID)
        {
            IdentificationUnit identificationUnit = new IdentificationUnit();
            identificationUnit.CollectionSpecimenID = collectionSpecimenID;
            identificationUnit.IdentificationUnitID = identificationUnitID;
            identificationUnit.LastIdentificationCache = lastIdentificationCache;
            identificationUnit.TaxonomicGroup = taxonomicGroup;
            identificationUnit.DisplayOrder = displayOrder;
            identificationUnit.RowGUID = rowGUID;
            return identificationUnit;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionSpecimenID
        {
            get
            {
                return _CollectionSpecimenID;
            }
            set
            {
                if (_CollectionSpecimenID != value)
                {
                    OnCollectionSpecimenIDChanging(value);
                    ReportPropertyChanging("CollectionSpecimenID");
                    _CollectionSpecimenID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionSpecimenID");
                    OnCollectionSpecimenIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionSpecimenID;
        partial void OnCollectionSpecimenIDChanging(global::System.Int32 value);
        partial void OnCollectionSpecimenIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdentificationUnitID
        {
            get
            {
                return _IdentificationUnitID;
            }
            set
            {
                if (_IdentificationUnitID != value)
                {
                    OnIdentificationUnitIDChanging(value);
                    ReportPropertyChanging("IdentificationUnitID");
                    _IdentificationUnitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdentificationUnitID");
                    OnIdentificationUnitIDChanged();
                }
            }
        }
        private global::System.Int32 _IdentificationUnitID;
        partial void OnIdentificationUnitIDChanging(global::System.Int32 value);
        partial void OnIdentificationUnitIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastIdentificationCache
        {
            get
            {
                return _LastIdentificationCache;
            }
            set
            {
                OnLastIdentificationCacheChanging(value);
                ReportPropertyChanging("LastIdentificationCache");
                _LastIdentificationCache = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastIdentificationCache");
                OnLastIdentificationCacheChanged();
            }
        }
        private global::System.String _LastIdentificationCache;
        partial void OnLastIdentificationCacheChanging(global::System.String value);
        partial void OnLastIdentificationCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FamilyCache
        {
            get
            {
                return _FamilyCache;
            }
            set
            {
                OnFamilyCacheChanging(value);
                ReportPropertyChanging("FamilyCache");
                _FamilyCache = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FamilyCache");
                OnFamilyCacheChanged();
            }
        }
        private global::System.String _FamilyCache;
        partial void OnFamilyCacheChanging(global::System.String value);
        partial void OnFamilyCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderCache
        {
            get
            {
                return _OrderCache;
            }
            set
            {
                OnOrderCacheChanging(value);
                ReportPropertyChanging("OrderCache");
                _OrderCache = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderCache");
                OnOrderCacheChanged();
            }
        }
        private global::System.String _OrderCache;
        partial void OnOrderCacheChanging(global::System.String value);
        partial void OnOrderCacheChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TaxonomicGroup
        {
            get
            {
                return _TaxonomicGroup;
            }
            set
            {
                OnTaxonomicGroupChanging(value);
                ReportPropertyChanging("TaxonomicGroup");
                _TaxonomicGroup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TaxonomicGroup");
                OnTaxonomicGroupChanged();
            }
        }
        private global::System.String _TaxonomicGroup;
        partial void OnTaxonomicGroupChanging(global::System.String value);
        partial void OnTaxonomicGroupChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> OnlyObserved
        {
            get
            {
                return _OnlyObserved;
            }
            set
            {
                OnOnlyObservedChanging(value);
                ReportPropertyChanging("OnlyObserved");
                _OnlyObserved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OnlyObserved");
                OnOnlyObservedChanged();
            }
        }
        private Nullable<global::System.Boolean> _OnlyObserved;
        partial void OnOnlyObservedChanging(Nullable<global::System.Boolean> value);
        partial void OnOnlyObservedChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> RelatedUnitID
        {
            get
            {
                return _RelatedUnitID;
            }
            set
            {
                OnRelatedUnitIDChanging(value);
                ReportPropertyChanging("RelatedUnitID");
                _RelatedUnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RelatedUnitID");
                OnRelatedUnitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _RelatedUnitID;
        partial void OnRelatedUnitIDChanging(Nullable<global::System.Int32> value);
        partial void OnRelatedUnitIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String RelationType
        {
            get
            {
                return _RelationType;
            }
            set
            {
                OnRelationTypeChanging(value);
                ReportPropertyChanging("RelationType");
                _RelationType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("RelationType");
                OnRelationTypeChanged();
            }
        }
        private global::System.String _RelationType;
        partial void OnRelationTypeChanging(global::System.String value);
        partial void OnRelationTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ColonisedSubstratePart
        {
            get
            {
                return _ColonisedSubstratePart;
            }
            set
            {
                OnColonisedSubstratePartChanging(value);
                ReportPropertyChanging("ColonisedSubstratePart");
                _ColonisedSubstratePart = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ColonisedSubstratePart");
                OnColonisedSubstratePartChanged();
            }
        }
        private global::System.String _ColonisedSubstratePart;
        partial void OnColonisedSubstratePartChanging(global::System.String value);
        partial void OnColonisedSubstratePartChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LifeStage
        {
            get
            {
                return _LifeStage;
            }
            set
            {
                OnLifeStageChanging(value);
                ReportPropertyChanging("LifeStage");
                _LifeStage = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LifeStage");
                OnLifeStageChanged();
            }
        }
        private global::System.String _LifeStage;
        partial void OnLifeStageChanging(global::System.String value);
        partial void OnLifeStageChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Gender
        {
            get
            {
                return _Gender;
            }
            set
            {
                OnGenderChanging(value);
                ReportPropertyChanging("Gender");
                _Gender = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Gender");
                OnGenderChanged();
            }
        }
        private global::System.String _Gender;
        partial void OnGenderChanging(global::System.String value);
        partial void OnGenderChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> NumberOfUnits
        {
            get
            {
                return _NumberOfUnits;
            }
            set
            {
                OnNumberOfUnitsChanging(value);
                ReportPropertyChanging("NumberOfUnits");
                _NumberOfUnits = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NumberOfUnits");
                OnNumberOfUnitsChanged();
            }
        }
        private Nullable<global::System.Int16> _NumberOfUnits;
        partial void OnNumberOfUnitsChanging(Nullable<global::System.Int16> value);
        partial void OnNumberOfUnitsChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExsiccataNumber
        {
            get
            {
                return _ExsiccataNumber;
            }
            set
            {
                OnExsiccataNumberChanging(value);
                ReportPropertyChanging("ExsiccataNumber");
                _ExsiccataNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExsiccataNumber");
                OnExsiccataNumberChanged();
            }
        }
        private global::System.String _ExsiccataNumber;
        partial void OnExsiccataNumberChanging(global::System.String value);
        partial void OnExsiccataNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> ExsiccataIdentification
        {
            get
            {
                return _ExsiccataIdentification;
            }
            set
            {
                OnExsiccataIdentificationChanging(value);
                ReportPropertyChanging("ExsiccataIdentification");
                _ExsiccataIdentification = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ExsiccataIdentification");
                OnExsiccataIdentificationChanged();
            }
        }
        private Nullable<global::System.Int16> _ExsiccataIdentification;
        partial void OnExsiccataIdentificationChanging(Nullable<global::System.Int16> value);
        partial void OnExsiccataIdentificationChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitIdentifier
        {
            get
            {
                return _UnitIdentifier;
            }
            set
            {
                OnUnitIdentifierChanging(value);
                ReportPropertyChanging("UnitIdentifier");
                _UnitIdentifier = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitIdentifier");
                OnUnitIdentifierChanged();
            }
        }
        private global::System.String _UnitIdentifier;
        partial void OnUnitIdentifierChanging(global::System.String value);
        partial void OnUnitIdentifierChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String UnitDescription
        {
            get
            {
                return _UnitDescription;
            }
            set
            {
                OnUnitDescriptionChanging(value);
                ReportPropertyChanging("UnitDescription");
                _UnitDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("UnitDescription");
                OnUnitDescriptionChanged();
            }
        }
        private global::System.String _UnitDescription;
        partial void OnUnitDescriptionChanging(global::System.String value);
        partial void OnUnitDescriptionChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Circumstances
        {
            get
            {
                return _Circumstances;
            }
            set
            {
                OnCircumstancesChanging(value);
                ReportPropertyChanging("Circumstances");
                _Circumstances = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Circumstances");
                OnCircumstancesChanged();
            }
        }
        private global::System.String _Circumstances;
        partial void OnCircumstancesChanging(global::System.String value);
        partial void OnCircumstancesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private global::System.Int16 _DisplayOrder;
        partial void OnDisplayOrderChanging(global::System.Int16 value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> xx_SubstrateID
        {
            get
            {
                return _xx_SubstrateID;
            }
            set
            {
                Onxx_SubstrateIDChanging(value);
                ReportPropertyChanging("xx_SubstrateID");
                _xx_SubstrateID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_SubstrateID");
                Onxx_SubstrateIDChanged();
            }
        }
        private Nullable<global::System.Int32> _xx_SubstrateID;
        partial void Onxx_SubstrateIDChanging(Nullable<global::System.Int32> value);
        partial void Onxx_SubstrateIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String xx_SubstrateRelationType
        {
            get
            {
                return _xx_SubstrateRelationType;
            }
            set
            {
                Onxx_SubstrateRelationTypeChanging(value);
                ReportPropertyChanging("xx_SubstrateRelationType");
                _xx_SubstrateRelationType = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("xx_SubstrateRelationType");
                Onxx_SubstrateRelationTypeChanged();
            }
        }
        private global::System.String _xx_SubstrateRelationType;
        partial void Onxx_SubstrateRelationTypeChanging(global::System.String value);
        partial void Onxx_SubstrateRelationTypeChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> xx_SpecimenPartID
        {
            get
            {
                return _xx_SpecimenPartID;
            }
            set
            {
                Onxx_SpecimenPartIDChanging(value);
                ReportPropertyChanging("xx_SpecimenPartID");
                _xx_SpecimenPartID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_SpecimenPartID");
                Onxx_SpecimenPartIDChanged();
            }
        }
        private Nullable<global::System.Int32> _xx_SpecimenPartID;
        partial void Onxx_SpecimenPartIDChanging(Nullable<global::System.Int32> value);
        partial void Onxx_SpecimenPartIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> xx_NewUnitID
        {
            get
            {
                return _xx_NewUnitID;
            }
            set
            {
                Onxx_NewUnitIDChanging(value);
                ReportPropertyChanging("xx_NewUnitID");
                _xx_NewUnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_NewUnitID");
                Onxx_NewUnitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _xx_NewUnitID;
        partial void Onxx_NewUnitIDChanging(Nullable<global::System.Int32> value);
        partial void Onxx_NewUnitIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> xx_AlteUnitID
        {
            get
            {
                return _xx_AlteUnitID;
            }
            set
            {
                Onxx_AlteUnitIDChanging(value);
                ReportPropertyChanging("xx_AlteUnitID");
                _xx_AlteUnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("xx_AlteUnitID");
                Onxx_AlteUnitIDChanged();
            }
        }
        private Nullable<global::System.Int32> _xx_AlteUnitID;
        partial void Onxx_AlteUnitIDChanging(Nullable<global::System.Int32> value);
        partial void Onxx_AlteUnitIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_IdentificationUnit_CollectionSpecimen", "CollectionSpecimen")]
        public CollectionSpecimen CollectionSpecimen
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_IdentificationUnit_CollectionSpecimen", "CollectionSpecimen").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_IdentificationUnit_CollectionSpecimen", "CollectionSpecimen").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CollectionSpecimen> CollectionSpecimenReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CollectionSpecimen>("DiversityCollection.FK_IdentificationUnit_CollectionSpecimen", "CollectionSpecimen");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CollectionSpecimen>("DiversityCollection.FK_IdentificationUnit_CollectionSpecimen", "CollectionSpecimen", value);
                }
            }
        }
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnitAnalysis")]
        public EntityCollection<IdentificationUnitAnalysis> IdentificationUnitAnalysis
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<IdentificationUnitAnalysis>("DiversityCollection.FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnitAnalysis");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<IdentificationUnitAnalysis>("DiversityCollection.FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnitAnalysis", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DiversityCollection", Name="IdentificationUnitAnalysis")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class IdentificationUnitAnalysis : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues IdentificationUnitAnalysis-Objekt.
        /// </summary>
        /// <param name="collectionSpecimenID">Anfangswert der Eigenschaft CollectionSpecimenID.</param>
        /// <param name="identificationUnitID">Anfangswert der Eigenschaft IdentificationUnitID.</param>
        /// <param name="analysisID">Anfangswert der Eigenschaft AnalysisID.</param>
        /// <param name="analysisNumber">Anfangswert der Eigenschaft AnalysisNumber.</param>
        /// <param name="rowGUID">Anfangswert der Eigenschaft RowGUID.</param>
        public static IdentificationUnitAnalysis CreateIdentificationUnitAnalysis(global::System.Int32 collectionSpecimenID, global::System.Int32 identificationUnitID, global::System.Int32 analysisID, global::System.String analysisNumber, global::System.Guid rowGUID)
        {
            IdentificationUnitAnalysis identificationUnitAnalysis = new IdentificationUnitAnalysis();
            identificationUnitAnalysis.CollectionSpecimenID = collectionSpecimenID;
            identificationUnitAnalysis.IdentificationUnitID = identificationUnitID;
            identificationUnitAnalysis.AnalysisID = analysisID;
            identificationUnitAnalysis.AnalysisNumber = analysisNumber;
            identificationUnitAnalysis.RowGUID = rowGUID;
            return identificationUnitAnalysis;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CollectionSpecimenID
        {
            get
            {
                return _CollectionSpecimenID;
            }
            set
            {
                if (_CollectionSpecimenID != value)
                {
                    OnCollectionSpecimenIDChanging(value);
                    ReportPropertyChanging("CollectionSpecimenID");
                    _CollectionSpecimenID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CollectionSpecimenID");
                    OnCollectionSpecimenIDChanged();
                }
            }
        }
        private global::System.Int32 _CollectionSpecimenID;
        partial void OnCollectionSpecimenIDChanging(global::System.Int32 value);
        partial void OnCollectionSpecimenIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 IdentificationUnitID
        {
            get
            {
                return _IdentificationUnitID;
            }
            set
            {
                if (_IdentificationUnitID != value)
                {
                    OnIdentificationUnitIDChanging(value);
                    ReportPropertyChanging("IdentificationUnitID");
                    _IdentificationUnitID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("IdentificationUnitID");
                    OnIdentificationUnitIDChanged();
                }
            }
        }
        private global::System.Int32 _IdentificationUnitID;
        partial void OnIdentificationUnitIDChanging(global::System.Int32 value);
        partial void OnIdentificationUnitIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 AnalysisID
        {
            get
            {
                return _AnalysisID;
            }
            set
            {
                if (_AnalysisID != value)
                {
                    OnAnalysisIDChanging(value);
                    ReportPropertyChanging("AnalysisID");
                    _AnalysisID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("AnalysisID");
                    OnAnalysisIDChanged();
                }
            }
        }
        private global::System.Int32 _AnalysisID;
        partial void OnAnalysisIDChanging(global::System.Int32 value);
        partial void OnAnalysisIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AnalysisNumber
        {
            get
            {
                return _AnalysisNumber;
            }
            set
            {
                if (_AnalysisNumber != value)
                {
                    OnAnalysisNumberChanging(value);
                    ReportPropertyChanging("AnalysisNumber");
                    _AnalysisNumber = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("AnalysisNumber");
                    OnAnalysisNumberChanged();
                }
            }
        }
        private global::System.String _AnalysisNumber;
        partial void OnAnalysisNumberChanging(global::System.String value);
        partial void OnAnalysisNumberChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnalysisResult
        {
            get
            {
                return _AnalysisResult;
            }
            set
            {
                OnAnalysisResultChanging(value);
                ReportPropertyChanging("AnalysisResult");
                _AnalysisResult = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnalysisResult");
                OnAnalysisResultChanged();
            }
        }
        private global::System.String _AnalysisResult;
        partial void OnAnalysisResultChanging(global::System.String value);
        partial void OnAnalysisResultChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ExternalAnalysisURI
        {
            get
            {
                return _ExternalAnalysisURI;
            }
            set
            {
                OnExternalAnalysisURIChanging(value);
                ReportPropertyChanging("ExternalAnalysisURI");
                _ExternalAnalysisURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ExternalAnalysisURI");
                OnExternalAnalysisURIChanged();
            }
        }
        private global::System.String _ExternalAnalysisURI;
        partial void OnExternalAnalysisURIChanging(global::System.String value);
        partial void OnExternalAnalysisURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponsibleName
        {
            get
            {
                return _ResponsibleName;
            }
            set
            {
                OnResponsibleNameChanging(value);
                ReportPropertyChanging("ResponsibleName");
                _ResponsibleName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponsibleName");
                OnResponsibleNameChanged();
            }
        }
        private global::System.String _ResponsibleName;
        partial void OnResponsibleNameChanging(global::System.String value);
        partial void OnResponsibleNameChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ResponsibleAgentURI
        {
            get
            {
                return _ResponsibleAgentURI;
            }
            set
            {
                OnResponsibleAgentURIChanging(value);
                ReportPropertyChanging("ResponsibleAgentURI");
                _ResponsibleAgentURI = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ResponsibleAgentURI");
                OnResponsibleAgentURIChanged();
            }
        }
        private global::System.String _ResponsibleAgentURI;
        partial void OnResponsibleAgentURIChanging(global::System.String value);
        partial void OnResponsibleAgentURIChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String AnalysisDate
        {
            get
            {
                return _AnalysisDate;
            }
            set
            {
                OnAnalysisDateChanging(value);
                ReportPropertyChanging("AnalysisDate");
                _AnalysisDate = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("AnalysisDate");
                OnAnalysisDateChanged();
            }
        }
        private global::System.String _AnalysisDate;
        partial void OnAnalysisDateChanging(global::System.String value);
        partial void OnAnalysisDateChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SpecimenPartID
        {
            get
            {
                return _SpecimenPartID;
            }
            set
            {
                OnSpecimenPartIDChanging(value);
                ReportPropertyChanging("SpecimenPartID");
                _SpecimenPartID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SpecimenPartID");
                OnSpecimenPartIDChanged();
            }
        }
        private Nullable<global::System.Int32> _SpecimenPartID;
        partial void OnSpecimenPartIDChanging(Nullable<global::System.Int32> value);
        partial void OnSpecimenPartIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Notes
        {
            get
            {
                return _Notes;
            }
            set
            {
                OnNotesChanging(value);
                ReportPropertyChanging("Notes");
                _Notes = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Notes");
                OnNotesChanged();
            }
        }
        private global::System.String _Notes;
        partial void OnNotesChanging(global::System.String value);
        partial void OnNotesChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogCreatedWhen
        {
            get
            {
                return _LogCreatedWhen;
            }
            set
            {
                OnLogCreatedWhenChanging(value);
                ReportPropertyChanging("LogCreatedWhen");
                _LogCreatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogCreatedWhen");
                OnLogCreatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogCreatedWhen;
        partial void OnLogCreatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogCreatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogCreatedBy
        {
            get
            {
                return _LogCreatedBy;
            }
            set
            {
                OnLogCreatedByChanging(value);
                ReportPropertyChanging("LogCreatedBy");
                _LogCreatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogCreatedBy");
                OnLogCreatedByChanged();
            }
        }
        private global::System.String _LogCreatedBy;
        partial void OnLogCreatedByChanging(global::System.String value);
        partial void OnLogCreatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> LogUpdatedWhen
        {
            get
            {
                return _LogUpdatedWhen;
            }
            set
            {
                OnLogUpdatedWhenChanging(value);
                ReportPropertyChanging("LogUpdatedWhen");
                _LogUpdatedWhen = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LogUpdatedWhen");
                OnLogUpdatedWhenChanged();
            }
        }
        private Nullable<global::System.DateTime> _LogUpdatedWhen;
        partial void OnLogUpdatedWhenChanging(Nullable<global::System.DateTime> value);
        partial void OnLogUpdatedWhenChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LogUpdatedBy
        {
            get
            {
                return _LogUpdatedBy;
            }
            set
            {
                OnLogUpdatedByChanging(value);
                ReportPropertyChanging("LogUpdatedBy");
                _LogUpdatedBy = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LogUpdatedBy");
                OnLogUpdatedByChanged();
            }
        }
        private global::System.String _LogUpdatedBy;
        partial void OnLogUpdatedByChanging(global::System.String value);
        partial void OnLogUpdatedByChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid RowGUID
        {
            get
            {
                return _RowGUID;
            }
            set
            {
                OnRowGUIDChanging(value);
                ReportPropertyChanging("RowGUID");
                _RowGUID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RowGUID");
                OnRowGUIDChanged();
            }
        }
        private global::System.Guid _RowGUID;
        partial void OnRowGUIDChanging(global::System.Guid value);
        partial void OnRowGUIDChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DiversityCollection", "FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnit")]
        public IdentificationUnit IdentificationUnit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdentificationUnit>("DiversityCollection.FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdentificationUnit>("DiversityCollection.FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnit").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<IdentificationUnit> IdentificationUnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<IdentificationUnit>("DiversityCollection.FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<IdentificationUnit>("DiversityCollection.FK_IdentificationUnitAnalysis_IdentificationUnit", "IdentificationUnit", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
