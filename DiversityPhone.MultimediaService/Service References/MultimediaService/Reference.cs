//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DiversityPhone.MultimediaService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MultimediaService.IMediaService4")]
    public interface IMediaService4 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMediaService4/BeginTransaction", ReplyAction="http://tempuri.org/IMediaService4/BeginTransactionResponse")]
        System.IAsyncResult BeginBeginTransaction(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, System.AsyncCallback callback, object asyncState);
        
        string EndBeginTransaction(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMediaService4/EncodeFile", ReplyAction="http://tempuri.org/IMediaService4/EncodeFileResponse")]
        System.IAsyncResult BeginEncodeFile(byte[] data, System.AsyncCallback callback, object asyncState);
        
        string EndEncodeFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMediaService4/Commit", ReplyAction="http://tempuri.org/IMediaService4/CommitResponse")]
        System.IAsyncResult BeginCommit(System.AsyncCallback callback, object asyncState);
        
        string EndCommit(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMediaService4/Rollback", ReplyAction="http://tempuri.org/IMediaService4/RollbackResponse")]
        System.IAsyncResult BeginRollback(System.AsyncCallback callback, object asyncState);
        
        void EndRollback(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IMediaService4/Submit", ReplyAction="http://tempuri.org/IMediaService4/SubmitResponse")]
        System.IAsyncResult BeginSubmit(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, System.AsyncCallback callback, object asyncState);
        
        string EndSubmit(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMediaService4Channel : DiversityPhone.MultimediaService.IMediaService4, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BeginTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public BeginTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EncodeFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public EncodeFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CommitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MediaService4Client : System.ServiceModel.ClientBase<DiversityPhone.MultimediaService.IMediaService4>, DiversityPhone.MultimediaService.IMediaService4 {
        
        private BeginOperationDelegate onBeginBeginTransactionDelegate;
        
        private EndOperationDelegate onEndBeginTransactionDelegate;
        
        private System.Threading.SendOrPostCallback onBeginTransactionCompletedDelegate;
        
        private BeginOperationDelegate onBeginEncodeFileDelegate;
        
        private EndOperationDelegate onEndEncodeFileDelegate;
        
        private System.Threading.SendOrPostCallback onEncodeFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginCommitDelegate;
        
        private EndOperationDelegate onEndCommitDelegate;
        
        private System.Threading.SendOrPostCallback onCommitCompletedDelegate;
        
        private BeginOperationDelegate onBeginRollbackDelegate;
        
        private EndOperationDelegate onEndRollbackDelegate;
        
        private System.Threading.SendOrPostCallback onRollbackCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubmitDelegate;
        
        private EndOperationDelegate onEndSubmitDelegate;
        
        private System.Threading.SendOrPostCallback onSubmitCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public MediaService4Client() {
        }
        
        public MediaService4Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MediaService4Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediaService4Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MediaService4Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<BeginTransactionCompletedEventArgs> BeginTransactionCompleted;
        
        public event System.EventHandler<EncodeFileCompletedEventArgs> EncodeFileCompleted;
        
        public event System.EventHandler<CommitCompletedEventArgs> CommitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RollbackCompleted;
        
        public event System.EventHandler<SubmitCompletedEventArgs> SubmitCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MultimediaService.IMediaService4.BeginBeginTransaction(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBeginTransaction(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MultimediaService.IMediaService4.EndBeginTransaction(System.IAsyncResult result) {
            return base.Channel.EndBeginTransaction(result);
        }
        
        private System.IAsyncResult OnBeginBeginTransaction(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rowGuid = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string type = ((string)(inValues[2]));
            float latitude = ((float)(inValues[3]));
            float longitude = ((float)(inValues[4]));
            float altitude = ((float)(inValues[5]));
            string author = ((string)(inValues[6]));
            string timestamp = ((string)(inValues[7]));
            int projectId = ((int)(inValues[8]));
            return ((DiversityPhone.MultimediaService.IMediaService4)(this)).BeginBeginTransaction(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, callback, asyncState);
        }
        
        private object[] OnEndBeginTransaction(System.IAsyncResult result) {
            string retVal = ((DiversityPhone.MultimediaService.IMediaService4)(this)).EndBeginTransaction(result);
            return new object[] {
                    retVal};
        }
        
        private void OnBeginTransactionCompleted(object state) {
            if ((this.BeginTransactionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BeginTransactionCompleted(this, new BeginTransactionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BeginTransactionAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId) {
            this.BeginTransactionAsync(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, null);
        }
        
        public void BeginTransactionAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, object userState) {
            if ((this.onBeginBeginTransactionDelegate == null)) {
                this.onBeginBeginTransactionDelegate = new BeginOperationDelegate(this.OnBeginBeginTransaction);
            }
            if ((this.onEndBeginTransactionDelegate == null)) {
                this.onEndBeginTransactionDelegate = new EndOperationDelegate(this.OnEndBeginTransaction);
            }
            if ((this.onBeginTransactionCompletedDelegate == null)) {
                this.onBeginTransactionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBeginTransactionCompleted);
            }
            base.InvokeAsync(this.onBeginBeginTransactionDelegate, new object[] {
                        rowGuid,
                        fileName,
                        type,
                        latitude,
                        longitude,
                        altitude,
                        author,
                        timestamp,
                        projectId}, this.onEndBeginTransactionDelegate, this.onBeginTransactionCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MultimediaService.IMediaService4.BeginEncodeFile(byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginEncodeFile(data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MultimediaService.IMediaService4.EndEncodeFile(System.IAsyncResult result) {
            return base.Channel.EndEncodeFile(result);
        }
        
        private System.IAsyncResult OnBeginEncodeFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            byte[] data = ((byte[])(inValues[0]));
            return ((DiversityPhone.MultimediaService.IMediaService4)(this)).BeginEncodeFile(data, callback, asyncState);
        }
        
        private object[] OnEndEncodeFile(System.IAsyncResult result) {
            string retVal = ((DiversityPhone.MultimediaService.IMediaService4)(this)).EndEncodeFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnEncodeFileCompleted(object state) {
            if ((this.EncodeFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EncodeFileCompleted(this, new EncodeFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void EncodeFileAsync(byte[] data) {
            this.EncodeFileAsync(data, null);
        }
        
        public void EncodeFileAsync(byte[] data, object userState) {
            if ((this.onBeginEncodeFileDelegate == null)) {
                this.onBeginEncodeFileDelegate = new BeginOperationDelegate(this.OnBeginEncodeFile);
            }
            if ((this.onEndEncodeFileDelegate == null)) {
                this.onEndEncodeFileDelegate = new EndOperationDelegate(this.OnEndEncodeFile);
            }
            if ((this.onEncodeFileCompletedDelegate == null)) {
                this.onEncodeFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEncodeFileCompleted);
            }
            base.InvokeAsync(this.onBeginEncodeFileDelegate, new object[] {
                        data}, this.onEndEncodeFileDelegate, this.onEncodeFileCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MultimediaService.IMediaService4.BeginCommit(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCommit(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MultimediaService.IMediaService4.EndCommit(System.IAsyncResult result) {
            return base.Channel.EndCommit(result);
        }
        
        private System.IAsyncResult OnBeginCommit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((DiversityPhone.MultimediaService.IMediaService4)(this)).BeginCommit(callback, asyncState);
        }
        
        private object[] OnEndCommit(System.IAsyncResult result) {
            string retVal = ((DiversityPhone.MultimediaService.IMediaService4)(this)).EndCommit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCommitCompleted(object state) {
            if ((this.CommitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommitCompleted(this, new CommitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CommitAsync() {
            this.CommitAsync(null);
        }
        
        public void CommitAsync(object userState) {
            if ((this.onBeginCommitDelegate == null)) {
                this.onBeginCommitDelegate = new BeginOperationDelegate(this.OnBeginCommit);
            }
            if ((this.onEndCommitDelegate == null)) {
                this.onEndCommitDelegate = new EndOperationDelegate(this.OnEndCommit);
            }
            if ((this.onCommitCompletedDelegate == null)) {
                this.onCommitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommitCompleted);
            }
            base.InvokeAsync(this.onBeginCommitDelegate, null, this.onEndCommitDelegate, this.onCommitCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MultimediaService.IMediaService4.BeginRollback(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRollback(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DiversityPhone.MultimediaService.IMediaService4.EndRollback(System.IAsyncResult result) {
            base.Channel.EndRollback(result);
        }
        
        private System.IAsyncResult OnBeginRollback(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((DiversityPhone.MultimediaService.IMediaService4)(this)).BeginRollback(callback, asyncState);
        }
        
        private object[] OnEndRollback(System.IAsyncResult result) {
            ((DiversityPhone.MultimediaService.IMediaService4)(this)).EndRollback(result);
            return null;
        }
        
        private void OnRollbackCompleted(object state) {
            if ((this.RollbackCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RollbackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RollbackAsync() {
            this.RollbackAsync(null);
        }
        
        public void RollbackAsync(object userState) {
            if ((this.onBeginRollbackDelegate == null)) {
                this.onBeginRollbackDelegate = new BeginOperationDelegate(this.OnBeginRollback);
            }
            if ((this.onEndRollbackDelegate == null)) {
                this.onEndRollbackDelegate = new EndOperationDelegate(this.OnEndRollback);
            }
            if ((this.onRollbackCompletedDelegate == null)) {
                this.onRollbackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRollbackCompleted);
            }
            base.InvokeAsync(this.onBeginRollbackDelegate, null, this.onEndRollbackDelegate, this.onRollbackCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MultimediaService.IMediaService4.BeginSubmit(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubmit(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, data, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MultimediaService.IMediaService4.EndSubmit(System.IAsyncResult result) {
            return base.Channel.EndSubmit(result);
        }
        
        private System.IAsyncResult OnBeginSubmit(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string rowGuid = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string type = ((string)(inValues[2]));
            float latitude = ((float)(inValues[3]));
            float longitude = ((float)(inValues[4]));
            float altitude = ((float)(inValues[5]));
            string author = ((string)(inValues[6]));
            string timestamp = ((string)(inValues[7]));
            int projectId = ((int)(inValues[8]));
            byte[] data = ((byte[])(inValues[9]));
            return ((DiversityPhone.MultimediaService.IMediaService4)(this)).BeginSubmit(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, data, callback, asyncState);
        }
        
        private object[] OnEndSubmit(System.IAsyncResult result) {
            string retVal = ((DiversityPhone.MultimediaService.IMediaService4)(this)).EndSubmit(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSubmitCompleted(object state) {
            if ((this.SubmitCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitCompleted(this, new SubmitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubmitAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data) {
            this.SubmitAsync(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, data, null);
        }
        
        public void SubmitAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, object userState) {
            if ((this.onBeginSubmitDelegate == null)) {
                this.onBeginSubmitDelegate = new BeginOperationDelegate(this.OnBeginSubmit);
            }
            if ((this.onEndSubmitDelegate == null)) {
                this.onEndSubmitDelegate = new EndOperationDelegate(this.OnEndSubmit);
            }
            if ((this.onSubmitCompletedDelegate == null)) {
                this.onSubmitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitDelegate, new object[] {
                        rowGuid,
                        fileName,
                        type,
                        latitude,
                        longitude,
                        altitude,
                        author,
                        timestamp,
                        projectId,
                        data}, this.onEndSubmitDelegate, this.onSubmitCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DiversityPhone.MultimediaService.IMediaService4 CreateChannel() {
            return new MediaService4ClientChannel(this);
        }
        
        private class MediaService4ClientChannel : ChannelBase<DiversityPhone.MultimediaService.IMediaService4>, DiversityPhone.MultimediaService.IMediaService4 {
            
            public MediaService4ClientChannel(System.ServiceModel.ClientBase<DiversityPhone.MultimediaService.IMediaService4> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginBeginTransaction(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[9];
                _args[0] = rowGuid;
                _args[1] = fileName;
                _args[2] = type;
                _args[3] = latitude;
                _args[4] = longitude;
                _args[5] = altitude;
                _args[6] = author;
                _args[7] = timestamp;
                _args[8] = projectId;
                System.IAsyncResult _result = base.BeginInvoke("BeginTransaction", _args, callback, asyncState);
                return _result;
            }
            
            public string EndBeginTransaction(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("BeginTransaction", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginEncodeFile(byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("EncodeFile", _args, callback, asyncState);
                return _result;
            }
            
            public string EndEncodeFile(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("EncodeFile", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginCommit(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Commit", _args, callback, asyncState);
                return _result;
            }
            
            public string EndCommit(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Commit", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginRollback(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Rollback", _args, callback, asyncState);
                return _result;
            }
            
            public void EndRollback(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("Rollback", _args, result);
            }
            
            public System.IAsyncResult BeginSubmit(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[10];
                _args[0] = rowGuid;
                _args[1] = fileName;
                _args[2] = type;
                _args[3] = latitude;
                _args[4] = longitude;
                _args[5] = altitude;
                _args[6] = author;
                _args[7] = timestamp;
                _args[8] = projectId;
                _args[9] = data;
                System.IAsyncResult _result = base.BeginInvoke("Submit", _args, callback, asyncState);
                return _result;
            }
            
            public string EndSubmit(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Submit", _args, result)));
                return _result;
            }
        }
    }
}
