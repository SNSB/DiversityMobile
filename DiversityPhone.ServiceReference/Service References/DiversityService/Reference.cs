//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DiversityPhone.DiversityService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserCredentials", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class UserCredentials : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AgentNameField;
        
        private string AgentURIField;
        
        private string LoginNameField;
        
        private string PasswordField;
        
        private int ProjectIDField;
        
        private string RepositoryField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentURI {
            get {
                return this.AgentURIField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentURIField, value) != true)) {
                    this.AgentURIField = value;
                    this.RaisePropertyChanged("AgentURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Repository {
            get {
                return this.RepositoryField;
            }
            set {
                if ((object.ReferenceEquals(this.RepositoryField, value) != true)) {
                    this.RepositoryField = value;
                    this.RaisePropertyChanged("Repository");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Term", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Term : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string DescriptionField;
        
        private string DisplayTextField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private string ParentCodeField;
        
        private DiversityPhone.DiversityService.TermList SourceField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCode {
            get {
                return this.ParentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCodeField, value) != true)) {
                    this.ParentCodeField = value;
                    this.RaisePropertyChanged("ParentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DiversityPhone.DiversityService.TermList Source {
            get {
                return this.SourceField;
            }
            set {
                if ((this.SourceField.Equals(value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TermList", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public enum TermList : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TaxonomicGroups = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RelationshipTypes = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Circumstances = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EventImageTypes = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class UserProfile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AgentUriField;
        
        private string LoginNameField;
        
        private string UserNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentUri {
            get {
                return this.AgentUriField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentUriField, value) != true)) {
                    this.AgentUriField = value;
                    this.RaisePropertyChanged("AgentUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Repository", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Repository : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DatabaseField;
        
        private string DisplayTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Database {
            get {
                return this.DatabaseField;
            }
            set {
                if ((object.ReferenceEquals(this.DatabaseField, value) != true)) {
                    this.DatabaseField = value;
                    this.RaisePropertyChanged("Database");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Qualification", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Qualification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string DisplayTextField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Project : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayTextField;
        
        private int ProjectIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalysisTaxonomicGroup", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class AnalysisTaxonomicGroup : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AnalysisIDField;
        
        private string TaxonomicGroupField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisID {
            get {
                return this.AnalysisIDField;
            }
            set {
                if ((this.AnalysisIDField.Equals(value) != true)) {
                    this.AnalysisIDField = value;
                    this.RaisePropertyChanged("AnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonomicGroup {
            get {
                return this.TaxonomicGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonomicGroupField, value) != true)) {
                    this.TaxonomicGroupField = value;
                    this.RaisePropertyChanged("TaxonomicGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Analysis", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Analysis : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AnalysisIDField;
        
        private string DescriptionField;
        
        private string DisplayTextField;
        
        private string MeasurementUnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisID {
            get {
                return this.AnalysisIDField;
            }
            set {
                if ((this.AnalysisIDField.Equals(value) != true)) {
                    this.AnalysisIDField = value;
                    this.RaisePropertyChanged("AnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeasurementUnit {
            get {
                return this.MeasurementUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementUnitField, value) != true)) {
                    this.MeasurementUnitField = value;
                    this.RaisePropertyChanged("MeasurementUnit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalysisResult", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class AnalysisResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AnalysisIDField;
        
        private string DescriptionField;
        
        private string DisplayTextField;
        
        private string NotesField;
        
        private string ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisID {
            get {
                return this.AnalysisIDField;
            }
            set {
                if ((this.AnalysisIDField.Equals(value) != true)) {
                    this.AnalysisIDField = value;
                    this.RaisePropertyChanged("AnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSeries", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class EventSeries : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private int DiversityCollectionEventSeriesIDField;
        
        private string GeographyField;
        
        private System.Nullable<System.DateTime> LogUpdatedWhenField;
        
        private string SeriesCodeField;
        
        private System.Nullable<System.DateTime> SeriesEndField;
        
        private int SeriesIDField;
        
        private System.Nullable<System.DateTime> SeriesStartField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiversityCollectionEventSeriesID {
            get {
                return this.DiversityCollectionEventSeriesIDField;
            }
            set {
                if ((this.DiversityCollectionEventSeriesIDField.Equals(value) != true)) {
                    this.DiversityCollectionEventSeriesIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionEventSeriesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Geography {
            get {
                return this.GeographyField;
            }
            set {
                if ((object.ReferenceEquals(this.GeographyField, value) != true)) {
                    this.GeographyField = value;
                    this.RaisePropertyChanged("Geography");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SeriesCode {
            get {
                return this.SeriesCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.SeriesCodeField, value) != true)) {
                    this.SeriesCodeField = value;
                    this.RaisePropertyChanged("SeriesCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SeriesEnd {
            get {
                return this.SeriesEndField;
            }
            set {
                if ((this.SeriesEndField.Equals(value) != true)) {
                    this.SeriesEndField = value;
                    this.RaisePropertyChanged("SeriesEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeriesID {
            get {
                return this.SeriesIDField;
            }
            set {
                if ((this.SeriesIDField.Equals(value) != true)) {
                    this.SeriesIDField = value;
                    this.RaisePropertyChanged("SeriesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> SeriesStart {
            get {
                return this.SeriesStartField;
            }
            set {
                if ((this.SeriesStartField.Equals(value) != true)) {
                    this.SeriesStartField = value;
                    this.RaisePropertyChanged("SeriesStart");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HierarchySection", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class HierarchySection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DiversityPhone.DiversityService.Event EventField;
        
        private System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.IdentificationUnitAnalysis> IdentificationUnitAnalysesField;
        
        private System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.IdentificationUnit> IdentificationUnitsField;
        
        private System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.CollectionEventProperty> PropertiesField;
        
        private System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Specimen> SpecimenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DiversityPhone.DiversityService.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.IdentificationUnitAnalysis> IdentificationUnitAnalyses {
            get {
                return this.IdentificationUnitAnalysesField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificationUnitAnalysesField, value) != true)) {
                    this.IdentificationUnitAnalysesField = value;
                    this.RaisePropertyChanged("IdentificationUnitAnalyses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.IdentificationUnit> IdentificationUnits {
            get {
                return this.IdentificationUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificationUnitsField, value) != true)) {
                    this.IdentificationUnitsField = value;
                    this.RaisePropertyChanged("IdentificationUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.CollectionEventProperty> Properties {
            get {
                return this.PropertiesField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertiesField, value) != true)) {
                    this.PropertiesField = value;
                    this.RaisePropertyChanged("Properties");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Specimen> Specimen {
            get {
                return this.SpecimenField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecimenField, value) != true)) {
                    this.SpecimenField = value;
                    this.RaisePropertyChanged("Specimen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Event : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> AltitudeField;
        
        private System.DateTime CollectionDateField;
        
        private System.Nullable<System.DateTime> DeterminationDateField;
        
        private int DiversityCollectionEventIDField;
        
        private System.Nullable<int> DiversityCollectionSeriesIDField;
        
        private int EventIDField;
        
        private string HabitatDescriptionField;
        
        private System.Nullable<double> LatitudeField;
        
        private string LocalityDescriptionField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private System.Nullable<double> LongitudeField;
        
        private System.Nullable<int> SeriesIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CollectionDate {
            get {
                return this.CollectionDateField;
            }
            set {
                if ((this.CollectionDateField.Equals(value) != true)) {
                    this.CollectionDateField = value;
                    this.RaisePropertyChanged("CollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DeterminationDate {
            get {
                return this.DeterminationDateField;
            }
            set {
                if ((this.DeterminationDateField.Equals(value) != true)) {
                    this.DeterminationDateField = value;
                    this.RaisePropertyChanged("DeterminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiversityCollectionEventID {
            get {
                return this.DiversityCollectionEventIDField;
            }
            set {
                if ((this.DiversityCollectionEventIDField.Equals(value) != true)) {
                    this.DiversityCollectionEventIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiversityCollectionSeriesID {
            get {
                return this.DiversityCollectionSeriesIDField;
            }
            set {
                if ((this.DiversityCollectionSeriesIDField.Equals(value) != true)) {
                    this.DiversityCollectionSeriesIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionSeriesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HabitatDescription {
            get {
                return this.HabitatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.HabitatDescriptionField, value) != true)) {
                    this.HabitatDescriptionField = value;
                    this.RaisePropertyChanged("HabitatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalityDescription {
            get {
                return this.LocalityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityDescriptionField, value) != true)) {
                    this.LocalityDescriptionField = value;
                    this.RaisePropertyChanged("LocalityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeriesID {
            get {
                return this.SeriesIDField;
            }
            set {
                if ((this.SeriesIDField.Equals(value) != true)) {
                    this.SeriesIDField = value;
                    this.RaisePropertyChanged("SeriesID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationUnitAnalysis", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class IdentificationUnitAnalysis : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime AnalysisDateField;
        
        private int AnalysisIDField;
        
        private string AnalysisResultField;
        
        private int DiversityCollectionSpecimenIDField;
        
        private System.Nullable<int> DiversityCollectionUnitIDField;
        
        private int IdentificationUnitAnalysisIDField;
        
        private int IdentificationUnitIDField;
        
        private int SpecimenIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnalysisDate {
            get {
                return this.AnalysisDateField;
            }
            set {
                if ((this.AnalysisDateField.Equals(value) != true)) {
                    this.AnalysisDateField = value;
                    this.RaisePropertyChanged("AnalysisDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisID {
            get {
                return this.AnalysisIDField;
            }
            set {
                if ((this.AnalysisIDField.Equals(value) != true)) {
                    this.AnalysisIDField = value;
                    this.RaisePropertyChanged("AnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AnalysisResult {
            get {
                return this.AnalysisResultField;
            }
            set {
                if ((object.ReferenceEquals(this.AnalysisResultField, value) != true)) {
                    this.AnalysisResultField = value;
                    this.RaisePropertyChanged("AnalysisResult");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiversityCollectionSpecimenID {
            get {
                return this.DiversityCollectionSpecimenIDField;
            }
            set {
                if ((this.DiversityCollectionSpecimenIDField.Equals(value) != true)) {
                    this.DiversityCollectionSpecimenIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionSpecimenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiversityCollectionUnitID {
            get {
                return this.DiversityCollectionUnitIDField;
            }
            set {
                if ((this.DiversityCollectionUnitIDField.Equals(value) != true)) {
                    this.DiversityCollectionUnitIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdentificationUnitAnalysisID {
            get {
                return this.IdentificationUnitAnalysisIDField;
            }
            set {
                if ((this.IdentificationUnitAnalysisIDField.Equals(value) != true)) {
                    this.IdentificationUnitAnalysisIDField = value;
                    this.RaisePropertyChanged("IdentificationUnitAnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdentificationUnitID {
            get {
                return this.IdentificationUnitIDField;
            }
            set {
                if ((this.IdentificationUnitIDField.Equals(value) != true)) {
                    this.IdentificationUnitIDField = value;
                    this.RaisePropertyChanged("IdentificationUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecimenID {
            get {
                return this.SpecimenIDField;
            }
            set {
                if ((this.SpecimenIDField.Equals(value) != true)) {
                    this.SpecimenIDField = value;
                    this.RaisePropertyChanged("SpecimenID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationUnit", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class IdentificationUnit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Nullable<double> AltitudeField;
        
        private System.DateTime AnalysisDateField;
        
        private string ColonisedSubstratePartField;
        
        private System.Nullable<int> DiversityCollectionRelatedUnitIDField;
        
        private System.Nullable<int> DiversityCollectionSpecimenIDField;
        
        private int DiversityCollectionUnitIDField;
        
        private string FamilyCacheField;
        
        private string GenderField;
        
        private string IdentificationUriField;
        
        private string LastIdentificationCacheField;
        
        private System.Nullable<double> LatitudeField;
        
        private string LifeStageField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private System.Nullable<double> LongitudeField;
        
        private bool OnlyObservedField;
        
        private string OrderCacheField;
        
        private string QualificationField;
        
        private System.Nullable<int> RelatedUnitIDField;
        
        private string RelationTypeField;
        
        private int SpecimenIDField;
        
        private string TaxonomicGroupField;
        
        private int UnitIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnalysisDate {
            get {
                return this.AnalysisDateField;
            }
            set {
                if ((this.AnalysisDateField.Equals(value) != true)) {
                    this.AnalysisDateField = value;
                    this.RaisePropertyChanged("AnalysisDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColonisedSubstratePart {
            get {
                return this.ColonisedSubstratePartField;
            }
            set {
                if ((object.ReferenceEquals(this.ColonisedSubstratePartField, value) != true)) {
                    this.ColonisedSubstratePartField = value;
                    this.RaisePropertyChanged("ColonisedSubstratePart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiversityCollectionRelatedUnitID {
            get {
                return this.DiversityCollectionRelatedUnitIDField;
            }
            set {
                if ((this.DiversityCollectionRelatedUnitIDField.Equals(value) != true)) {
                    this.DiversityCollectionRelatedUnitIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionRelatedUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiversityCollectionSpecimenID {
            get {
                return this.DiversityCollectionSpecimenIDField;
            }
            set {
                if ((this.DiversityCollectionSpecimenIDField.Equals(value) != true)) {
                    this.DiversityCollectionSpecimenIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionSpecimenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiversityCollectionUnitID {
            get {
                return this.DiversityCollectionUnitIDField;
            }
            set {
                if ((this.DiversityCollectionUnitIDField.Equals(value) != true)) {
                    this.DiversityCollectionUnitIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyCache {
            get {
                return this.FamilyCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyCacheField, value) != true)) {
                    this.FamilyCacheField = value;
                    this.RaisePropertyChanged("FamilyCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentificationUri {
            get {
                return this.IdentificationUriField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificationUriField, value) != true)) {
                    this.IdentificationUriField = value;
                    this.RaisePropertyChanged("IdentificationUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastIdentificationCache {
            get {
                return this.LastIdentificationCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.LastIdentificationCacheField, value) != true)) {
                    this.LastIdentificationCacheField = value;
                    this.RaisePropertyChanged("LastIdentificationCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LifeStage {
            get {
                return this.LifeStageField;
            }
            set {
                if ((object.ReferenceEquals(this.LifeStageField, value) != true)) {
                    this.LifeStageField = value;
                    this.RaisePropertyChanged("LifeStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<double> Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlyObserved {
            get {
                return this.OnlyObservedField;
            }
            set {
                if ((this.OnlyObservedField.Equals(value) != true)) {
                    this.OnlyObservedField = value;
                    this.RaisePropertyChanged("OnlyObserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderCache {
            get {
                return this.OrderCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCacheField, value) != true)) {
                    this.OrderCacheField = value;
                    this.RaisePropertyChanged("OrderCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Qualification {
            get {
                return this.QualificationField;
            }
            set {
                if ((object.ReferenceEquals(this.QualificationField, value) != true)) {
                    this.QualificationField = value;
                    this.RaisePropertyChanged("Qualification");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RelatedUnitID {
            get {
                return this.RelatedUnitIDField;
            }
            set {
                if ((this.RelatedUnitIDField.Equals(value) != true)) {
                    this.RelatedUnitIDField = value;
                    this.RaisePropertyChanged("RelatedUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationType {
            get {
                return this.RelationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationTypeField, value) != true)) {
                    this.RelationTypeField = value;
                    this.RaisePropertyChanged("RelationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecimenID {
            get {
                return this.SpecimenIDField;
            }
            set {
                if ((this.SpecimenIDField.Equals(value) != true)) {
                    this.SpecimenIDField = value;
                    this.RaisePropertyChanged("SpecimenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonomicGroup {
            get {
                return this.TaxonomicGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonomicGroupField, value) != true)) {
                    this.TaxonomicGroupField = value;
                    this.RaisePropertyChanged("TaxonomicGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitID {
            get {
                return this.UnitIDField;
            }
            set {
                if ((this.UnitIDField.Equals(value) != true)) {
                    this.UnitIDField = value;
                    this.RaisePropertyChanged("UnitID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollectionEventProperty", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class CollectionEventProperty : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayTextField;
        
        private System.Nullable<int> DiversityCollectionEventIDField;
        
        private int EventIDField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private int PropertyIDField;
        
        private string PropertyUriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiversityCollectionEventID {
            get {
                return this.DiversityCollectionEventIDField;
            }
            set {
                if ((this.DiversityCollectionEventIDField.Equals(value) != true)) {
                    this.DiversityCollectionEventIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyUri {
            get {
                return this.PropertyUriField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyUriField, value) != true)) {
                    this.PropertyUriField = value;
                    this.RaisePropertyChanged("PropertyUri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specimen", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Specimen : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccessionNumberField;
        
        private int CollectionEventIDField;
        
        private int CollectionSpecimenIDField;
        
        private System.Nullable<int> DiversityCollectionEventIDField;
        
        private int DiversityCollectionSpecimenIDField;
        
        private System.DateTime LogUpdatedWhenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccessionNumber {
            get {
                return this.AccessionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccessionNumberField, value) != true)) {
                    this.AccessionNumberField = value;
                    this.RaisePropertyChanged("AccessionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionEventID {
            get {
                return this.CollectionEventIDField;
            }
            set {
                if ((this.CollectionEventIDField.Equals(value) != true)) {
                    this.CollectionEventIDField = value;
                    this.RaisePropertyChanged("CollectionEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionSpecimenID {
            get {
                return this.CollectionSpecimenIDField;
            }
            set {
                if ((this.CollectionSpecimenIDField.Equals(value) != true)) {
                    this.CollectionSpecimenIDField = value;
                    this.RaisePropertyChanged("CollectionSpecimenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> DiversityCollectionEventID {
            get {
                return this.DiversityCollectionEventIDField;
            }
            set {
                if ((this.DiversityCollectionEventIDField.Equals(value) != true)) {
                    this.DiversityCollectionEventIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiversityCollectionSpecimenID {
            get {
                return this.DiversityCollectionSpecimenIDField;
            }
            set {
                if ((this.DiversityCollectionSpecimenIDField.Equals(value) != true)) {
                    this.DiversityCollectionSpecimenIDField = value;
                    this.RaisePropertyChanged("DiversityCollectionSpecimenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyProjection", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class KeyProjection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.Collections.Generic.Dictionary<int, int> eventKeyField;
        
        private System.Collections.Generic.Dictionary<int, int> iuKeysField;
        
        private System.Collections.Generic.Dictionary<int, int> specimenKeysField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, int> eventKey {
            get {
                return this.eventKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.eventKeyField, value) != true)) {
                    this.eventKeyField = value;
                    this.RaisePropertyChanged("eventKey");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, int> iuKeys {
            get {
                return this.iuKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.iuKeysField, value) != true)) {
                    this.iuKeysField = value;
                    this.RaisePropertyChanged("iuKeys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, int> specimenKeys {
            get {
                return this.specimenKeysField;
            }
            set {
                if ((object.ReferenceEquals(this.specimenKeysField, value) != true)) {
                    this.specimenKeysField = value;
                    this.RaisePropertyChanged("specimenKeys");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MultimediaObject", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class MultimediaObject : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private string MediaTypeField;
        
        private string OwnerTypeField;
        
        private int RelatedIdField;
        
        private string UriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MediaType {
            get {
                return this.MediaTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.MediaTypeField, value) != true)) {
                    this.MediaTypeField = value;
                    this.RaisePropertyChanged("MediaType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OwnerType {
            get {
                return this.OwnerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerTypeField, value) != true)) {
                    this.OwnerTypeField = value;
                    this.RaisePropertyChanged("OwnerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelatedId {
            get {
                return this.RelatedIdField;
            }
            set {
                if ((this.RelatedIdField.Equals(value) != true)) {
                    this.RelatedIdField = value;
                    this.RaisePropertyChanged("RelatedId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Uri {
            get {
                return this.UriField;
            }
            set {
                if ((object.ReferenceEquals(this.UriField, value) != true)) {
                    this.UriField = value;
                    this.RaisePropertyChanged("Uri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxonList", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class TaxonList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayTextField;
        
        private bool IsPublicListField;
        
        private string TableField;
        
        private string TaxonomicGroupField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsPublicList {
            get {
                return this.IsPublicListField;
            }
            set {
                if ((this.IsPublicListField.Equals(value) != true)) {
                    this.IsPublicListField = value;
                    this.RaisePropertyChanged("IsPublicList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Table {
            get {
                return this.TableField;
            }
            set {
                if ((object.ReferenceEquals(this.TableField, value) != true)) {
                    this.TableField = value;
                    this.RaisePropertyChanged("Table");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonomicGroup {
            get {
                return this.TaxonomicGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonomicGroupField, value) != true)) {
                    this.TaxonomicGroupField = value;
                    this.RaisePropertyChanged("TaxonomicGroup");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxonName", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class TaxonName : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AcceptedNameCacheField;
        
        private string AcceptedNameURIField;
        
        private string GenusOrSupragenicField;
        
        private string InfraspecificEpithetField;
        
        private string SpeciesEpithetField;
        
        private string SynonymyField;
        
        private string TaxonNameCacheField;
        
        private string TaxonNameSinAuthField;
        
        private string URIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcceptedNameCache {
            get {
                return this.AcceptedNameCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.AcceptedNameCacheField, value) != true)) {
                    this.AcceptedNameCacheField = value;
                    this.RaisePropertyChanged("AcceptedNameCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AcceptedNameURI {
            get {
                return this.AcceptedNameURIField;
            }
            set {
                if ((object.ReferenceEquals(this.AcceptedNameURIField, value) != true)) {
                    this.AcceptedNameURIField = value;
                    this.RaisePropertyChanged("AcceptedNameURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenusOrSupragenic {
            get {
                return this.GenusOrSupragenicField;
            }
            set {
                if ((object.ReferenceEquals(this.GenusOrSupragenicField, value) != true)) {
                    this.GenusOrSupragenicField = value;
                    this.RaisePropertyChanged("GenusOrSupragenic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InfraspecificEpithet {
            get {
                return this.InfraspecificEpithetField;
            }
            set {
                if ((object.ReferenceEquals(this.InfraspecificEpithetField, value) != true)) {
                    this.InfraspecificEpithetField = value;
                    this.RaisePropertyChanged("InfraspecificEpithet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpeciesEpithet {
            get {
                return this.SpeciesEpithetField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeciesEpithetField, value) != true)) {
                    this.SpeciesEpithetField = value;
                    this.RaisePropertyChanged("SpeciesEpithet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Synonymy {
            get {
                return this.SynonymyField;
            }
            set {
                if ((object.ReferenceEquals(this.SynonymyField, value) != true)) {
                    this.SynonymyField = value;
                    this.RaisePropertyChanged("Synonymy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonNameCache {
            get {
                return this.TaxonNameCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonNameCacheField, value) != true)) {
                    this.TaxonNameCacheField = value;
                    this.RaisePropertyChanged("TaxonNameCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonNameSinAuth {
            get {
                return this.TaxonNameSinAuthField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonNameSinAuthField, value) != true)) {
                    this.TaxonNameSinAuthField = value;
                    this.RaisePropertyChanged("TaxonNameSinAuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URI {
            get {
                return this.URIField;
            }
            set {
                if ((object.ReferenceEquals(this.URIField, value) != true)) {
                    this.URIField = value;
                    this.RaisePropertyChanged("URI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Property", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Property : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayTextField;
        
        private int PropertyIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyName", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class PropertyName : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayTextField;
        
        private int PropertyIDField;
        
        private string PropertyUriField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyUri {
            get {
                return this.PropertyUriField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyUriField, value) != true)) {
                    this.PropertyUriField = value;
                    this.RaisePropertyChanged("PropertyUri");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DiversityService.IDiversityService")]
    public interface IDiversityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetStandardVocabulary", ReplyAction="http://tempuri.org/IDiversityService/GetStandardVocabularyResponse")]
        System.IAsyncResult BeginGetStandardVocabulary(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term> EndGetStandardVocabulary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetUserInfo", ReplyAction="http://tempuri.org/IDiversityService/GetUserInfoResponse")]
        System.IAsyncResult BeginGetUserInfo(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        DiversityPhone.DiversityService.UserProfile EndGetUserInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetRepositories", ReplyAction="http://tempuri.org/IDiversityService/GetRepositoriesResponse")]
        System.IAsyncResult BeginGetRepositories(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository> EndGetRepositories(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetQualifications", ReplyAction="http://tempuri.org/IDiversityService/GetQualificationsResponse")]
        System.IAsyncResult BeginGetQualifications(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification> EndGetQualifications(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetProjectsForUser", ReplyAction="http://tempuri.org/IDiversityService/GetProjectsForUserResponse")]
        System.IAsyncResult BeginGetProjectsForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project> EndGetProjectsForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAnalysisTaxonomicGroupsForProject", ReplyAction="http://tempuri.org/IDiversityService/GetAnalysisTaxonomicGroupsForProjectResponse" +
            "")]
        System.IAsyncResult BeginGetAnalysisTaxonomicGroupsForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup> EndGetAnalysisTaxonomicGroupsForProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAnalysesForProject", ReplyAction="http://tempuri.org/IDiversityService/GetAnalysesForProjectResponse")]
        System.IAsyncResult BeginGetAnalysesForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis> EndGetAnalysesForProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAnalysisResultsForProject", ReplyAction="http://tempuri.org/IDiversityService/GetAnalysisResultsForProjectResponse")]
        System.IAsyncResult BeginGetAnalysisResultsForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult> EndGetAnalysisResultsForProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/InsertEventSeries", ReplyAction="http://tempuri.org/IDiversityService/InsertEventSeriesResponse")]
        System.IAsyncResult BeginInsertEventSeries(System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> series, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.Generic.Dictionary<int, int> EndInsertEventSeries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/InsertGeographyIntoSeries", ReplyAction="http://tempuri.org/IDiversityService/InsertGeographyIntoSeriesResponse")]
        System.IAsyncResult BeginInsertGeographyIntoSeries(int seriesID, string geostring, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        void EndInsertGeographyIntoSeries(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/InsertHierarchy", ReplyAction="http://tempuri.org/IDiversityService/InsertHierarchyResponse")]
        System.IAsyncResult BeginInsertHierarchy(DiversityPhone.DiversityService.HierarchySection hierarchy, DiversityPhone.DiversityService.UserCredentials cred, System.AsyncCallback callback, object asyncState);
        
        DiversityPhone.DiversityService.KeyProjection EndInsertHierarchy(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/InsertMMO", ReplyAction="http://tempuri.org/IDiversityService/InsertMMOResponse")]
        System.IAsyncResult BeginInsertMMO(DiversityPhone.DiversityService.MultimediaObject mmo, DiversityPhone.DiversityService.UserCredentials cred, System.AsyncCallback callback, object asyncState);
        
        bool EndInsertMMO(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetTaxonListsForUser", ReplyAction="http://tempuri.org/IDiversityService/GetTaxonListsForUserResponse")]
        System.IAsyncResult BeginGetTaxonListsForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList> EndGetTaxonListsForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/DownloadTaxonList", ReplyAction="http://tempuri.org/IDiversityService/DownloadTaxonListResponse")]
        System.IAsyncResult BeginDownloadTaxonList(DiversityPhone.DiversityService.TaxonList list, int page, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName> EndDownloadTaxonList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetPropertiesForUser", ReplyAction="http://tempuri.org/IDiversityService/GetPropertiesForUserResponse")]
        System.IAsyncResult BeginGetPropertiesForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property> EndGetPropertiesForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/DownloadPropertyNames", ReplyAction="http://tempuri.org/IDiversityService/DownloadPropertyNamesResponse")]
        System.IAsyncResult BeginDownloadPropertyNames(DiversityPhone.DiversityService.Property p, int page, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName> EndDownloadPropertyNames(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDiversityServiceChannel : DiversityPhone.DiversityService.IDiversityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStandardVocabularyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStandardVocabularyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DiversityPhone.DiversityService.UserProfile Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DiversityPhone.DiversityService.UserProfile)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRepositoriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRepositoriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetQualificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetQualificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalysisTaxonomicGroupsForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysisTaxonomicGroupsForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalysesForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysesForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalysisResultsForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysisResultsForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertEventSeriesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertEventSeriesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.Generic.Dictionary<int, int> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.Generic.Dictionary<int, int>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DiversityPhone.DiversityService.KeyProjection Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DiversityPhone.DiversityService.KeyProjection)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertMMOCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertMMOCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaxonListsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaxonListsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadTaxonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadTaxonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPropertiesForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPropertiesForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadPropertyNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadPropertyNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DiversityServiceClient : System.ServiceModel.ClientBase<DiversityPhone.DiversityService.IDiversityService>, DiversityPhone.DiversityService.IDiversityService {
        
        private BeginOperationDelegate onBeginGetStandardVocabularyDelegate;
        
        private EndOperationDelegate onEndGetStandardVocabularyDelegate;
        
        private System.Threading.SendOrPostCallback onGetStandardVocabularyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetUserInfoDelegate;
        
        private EndOperationDelegate onEndGetUserInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRepositoriesDelegate;
        
        private EndOperationDelegate onEndGetRepositoriesDelegate;
        
        private System.Threading.SendOrPostCallback onGetRepositoriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetQualificationsDelegate;
        
        private EndOperationDelegate onEndGetQualificationsDelegate;
        
        private System.Threading.SendOrPostCallback onGetQualificationsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetProjectsForUserDelegate;
        
        private EndOperationDelegate onEndGetProjectsForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysisTaxonomicGroupsForProjectDelegate;
        
        private EndOperationDelegate onEndGetAnalysisTaxonomicGroupsForProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysisTaxonomicGroupsForProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysesForProjectDelegate;
        
        private EndOperationDelegate onEndGetAnalysesForProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysesForProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysisResultsForProjectDelegate;
        
        private EndOperationDelegate onEndGetAnalysisResultsForProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysisResultsForProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertEventSeriesDelegate;
        
        private EndOperationDelegate onEndInsertEventSeriesDelegate;
        
        private System.Threading.SendOrPostCallback onInsertEventSeriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertGeographyIntoSeriesDelegate;
        
        private EndOperationDelegate onEndInsertGeographyIntoSeriesDelegate;
        
        private System.Threading.SendOrPostCallback onInsertGeographyIntoSeriesCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertHierarchyDelegate;
        
        private EndOperationDelegate onEndInsertHierarchyDelegate;
        
        private System.Threading.SendOrPostCallback onInsertHierarchyCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertMMODelegate;
        
        private EndOperationDelegate onEndInsertMMODelegate;
        
        private System.Threading.SendOrPostCallback onInsertMMOCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaxonListsForUserDelegate;
        
        private EndOperationDelegate onEndGetTaxonListsForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaxonListsForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadTaxonListDelegate;
        
        private EndOperationDelegate onEndDownloadTaxonListDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadTaxonListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPropertiesForUserDelegate;
        
        private EndOperationDelegate onEndGetPropertiesForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetPropertiesForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadPropertyNamesDelegate;
        
        private EndOperationDelegate onEndDownloadPropertyNamesDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadPropertyNamesCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DiversityServiceClient() {
        }
        
        public DiversityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetStandardVocabularyCompletedEventArgs> GetStandardVocabularyCompleted;
        
        public event System.EventHandler<GetUserInfoCompletedEventArgs> GetUserInfoCompleted;
        
        public event System.EventHandler<GetRepositoriesCompletedEventArgs> GetRepositoriesCompleted;
        
        public event System.EventHandler<GetQualificationsCompletedEventArgs> GetQualificationsCompleted;
        
        public event System.EventHandler<GetProjectsForUserCompletedEventArgs> GetProjectsForUserCompleted;
        
        public event System.EventHandler<GetAnalysisTaxonomicGroupsForProjectCompletedEventArgs> GetAnalysisTaxonomicGroupsForProjectCompleted;
        
        public event System.EventHandler<GetAnalysesForProjectCompletedEventArgs> GetAnalysesForProjectCompleted;
        
        public event System.EventHandler<GetAnalysisResultsForProjectCompletedEventArgs> GetAnalysisResultsForProjectCompleted;
        
        public event System.EventHandler<InsertEventSeriesCompletedEventArgs> InsertEventSeriesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> InsertGeographyIntoSeriesCompleted;
        
        public event System.EventHandler<InsertHierarchyCompletedEventArgs> InsertHierarchyCompleted;
        
        public event System.EventHandler<InsertMMOCompletedEventArgs> InsertMMOCompleted;
        
        public event System.EventHandler<GetTaxonListsForUserCompletedEventArgs> GetTaxonListsForUserCompleted;
        
        public event System.EventHandler<DownloadTaxonListCompletedEventArgs> DownloadTaxonListCompleted;
        
        public event System.EventHandler<GetPropertiesForUserCompletedEventArgs> GetPropertiesForUserCompleted;
        
        public event System.EventHandler<DownloadPropertyNamesCompletedEventArgs> DownloadPropertyNamesCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetStandardVocabulary(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStandardVocabulary(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term> DiversityPhone.DiversityService.IDiversityService.EndGetStandardVocabulary(System.IAsyncResult result) {
            return base.Channel.EndGetStandardVocabulary(result);
        }
        
        private System.IAsyncResult OnBeginGetStandardVocabulary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetStandardVocabulary(login, callback, asyncState);
        }
        
        private object[] OnEndGetStandardVocabulary(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetStandardVocabulary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStandardVocabularyCompleted(object state) {
            if ((this.GetStandardVocabularyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStandardVocabularyCompleted(this, new GetStandardVocabularyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStandardVocabularyAsync(DiversityPhone.DiversityService.UserCredentials login) {
            this.GetStandardVocabularyAsync(login, null);
        }
        
        public void GetStandardVocabularyAsync(DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetStandardVocabularyDelegate == null)) {
                this.onBeginGetStandardVocabularyDelegate = new BeginOperationDelegate(this.OnBeginGetStandardVocabulary);
            }
            if ((this.onEndGetStandardVocabularyDelegate == null)) {
                this.onEndGetStandardVocabularyDelegate = new EndOperationDelegate(this.OnEndGetStandardVocabulary);
            }
            if ((this.onGetStandardVocabularyCompletedDelegate == null)) {
                this.onGetStandardVocabularyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStandardVocabularyCompleted);
            }
            base.InvokeAsync(this.onBeginGetStandardVocabularyDelegate, new object[] {
                        login}, this.onEndGetStandardVocabularyDelegate, this.onGetStandardVocabularyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetUserInfo(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserInfo(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DiversityPhone.DiversityService.UserProfile DiversityPhone.DiversityService.IDiversityService.EndGetUserInfo(System.IAsyncResult result) {
            return base.Channel.EndGetUserInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetUserInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetUserInfo(login, callback, asyncState);
        }
        
        private object[] OnEndGetUserInfo(System.IAsyncResult result) {
            DiversityPhone.DiversityService.UserProfile retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetUserInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserInfoCompleted(object state) {
            if ((this.GetUserInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserInfoCompleted(this, new GetUserInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserInfoAsync(DiversityPhone.DiversityService.UserCredentials login) {
            this.GetUserInfoAsync(login, null);
        }
        
        public void GetUserInfoAsync(DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetUserInfoDelegate == null)) {
                this.onBeginGetUserInfoDelegate = new BeginOperationDelegate(this.OnBeginGetUserInfo);
            }
            if ((this.onEndGetUserInfoDelegate == null)) {
                this.onEndGetUserInfoDelegate = new EndOperationDelegate(this.OnEndGetUserInfo);
            }
            if ((this.onGetUserInfoCompletedDelegate == null)) {
                this.onGetUserInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserInfoDelegate, new object[] {
                        login}, this.onEndGetUserInfoDelegate, this.onGetUserInfoCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetRepositories(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRepositories(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository> DiversityPhone.DiversityService.IDiversityService.EndGetRepositories(System.IAsyncResult result) {
            return base.Channel.EndGetRepositories(result);
        }
        
        private System.IAsyncResult OnBeginGetRepositories(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetRepositories(login, callback, asyncState);
        }
        
        private object[] OnEndGetRepositories(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetRepositories(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetRepositoriesCompleted(object state) {
            if ((this.GetRepositoriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRepositoriesCompleted(this, new GetRepositoriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRepositoriesAsync(DiversityPhone.DiversityService.UserCredentials login) {
            this.GetRepositoriesAsync(login, null);
        }
        
        public void GetRepositoriesAsync(DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetRepositoriesDelegate == null)) {
                this.onBeginGetRepositoriesDelegate = new BeginOperationDelegate(this.OnBeginGetRepositories);
            }
            if ((this.onEndGetRepositoriesDelegate == null)) {
                this.onEndGetRepositoriesDelegate = new EndOperationDelegate(this.OnEndGetRepositories);
            }
            if ((this.onGetRepositoriesCompletedDelegate == null)) {
                this.onGetRepositoriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRepositoriesCompleted);
            }
            base.InvokeAsync(this.onBeginGetRepositoriesDelegate, new object[] {
                        login}, this.onEndGetRepositoriesDelegate, this.onGetRepositoriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetQualifications(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetQualifications(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification> DiversityPhone.DiversityService.IDiversityService.EndGetQualifications(System.IAsyncResult result) {
            return base.Channel.EndGetQualifications(result);
        }
        
        private System.IAsyncResult OnBeginGetQualifications(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetQualifications(login, callback, asyncState);
        }
        
        private object[] OnEndGetQualifications(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetQualifications(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetQualificationsCompleted(object state) {
            if ((this.GetQualificationsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetQualificationsCompleted(this, new GetQualificationsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetQualificationsAsync(DiversityPhone.DiversityService.UserCredentials login) {
            this.GetQualificationsAsync(login, null);
        }
        
        public void GetQualificationsAsync(DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetQualificationsDelegate == null)) {
                this.onBeginGetQualificationsDelegate = new BeginOperationDelegate(this.OnBeginGetQualifications);
            }
            if ((this.onEndGetQualificationsDelegate == null)) {
                this.onEndGetQualificationsDelegate = new EndOperationDelegate(this.OnEndGetQualifications);
            }
            if ((this.onGetQualificationsCompletedDelegate == null)) {
                this.onGetQualificationsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetQualificationsCompleted);
            }
            base.InvokeAsync(this.onBeginGetQualificationsDelegate, new object[] {
                        login}, this.onEndGetQualificationsDelegate, this.onGetQualificationsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetProjectsForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectsForUser(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project> DiversityPhone.DiversityService.IDiversityService.EndGetProjectsForUser(System.IAsyncResult result) {
            return base.Channel.EndGetProjectsForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectsForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetProjectsForUser(login, callback, asyncState);
        }
        
        private object[] OnEndGetProjectsForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetProjectsForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsForUserCompleted(object state) {
            if ((this.GetProjectsForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsForUserCompleted(this, new GetProjectsForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsForUserAsync(DiversityPhone.DiversityService.UserCredentials login) {
            this.GetProjectsForUserAsync(login, null);
        }
        
        public void GetProjectsForUserAsync(DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetProjectsForUserDelegate == null)) {
                this.onBeginGetProjectsForUserDelegate = new BeginOperationDelegate(this.OnBeginGetProjectsForUser);
            }
            if ((this.onEndGetProjectsForUserDelegate == null)) {
                this.onEndGetProjectsForUserDelegate = new EndOperationDelegate(this.OnEndGetProjectsForUser);
            }
            if ((this.onGetProjectsForUserCompletedDelegate == null)) {
                this.onGetProjectsForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsForUserDelegate, new object[] {
                        login}, this.onEndGetProjectsForUserDelegate, this.onGetProjectsForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetAnalysisTaxonomicGroupsForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysisTaxonomicGroupsForProject(projectID, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup> DiversityPhone.DiversityService.IDiversityService.EndGetAnalysisTaxonomicGroupsForProject(System.IAsyncResult result) {
            return base.Channel.EndGetAnalysisTaxonomicGroupsForProject(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysisTaxonomicGroupsForProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int projectID = ((int)(inValues[0]));
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[1]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetAnalysisTaxonomicGroupsForProject(projectID, login, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysisTaxonomicGroupsForProject(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetAnalysisTaxonomicGroupsForProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalysisTaxonomicGroupsForProjectCompleted(object state) {
            if ((this.GetAnalysisTaxonomicGroupsForProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysisTaxonomicGroupsForProjectCompleted(this, new GetAnalysisTaxonomicGroupsForProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysisTaxonomicGroupsForProjectAsync(int projectID, DiversityPhone.DiversityService.UserCredentials login) {
            this.GetAnalysisTaxonomicGroupsForProjectAsync(projectID, login, null);
        }
        
        public void GetAnalysisTaxonomicGroupsForProjectAsync(int projectID, DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetAnalysisTaxonomicGroupsForProjectDelegate == null)) {
                this.onBeginGetAnalysisTaxonomicGroupsForProjectDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysisTaxonomicGroupsForProject);
            }
            if ((this.onEndGetAnalysisTaxonomicGroupsForProjectDelegate == null)) {
                this.onEndGetAnalysisTaxonomicGroupsForProjectDelegate = new EndOperationDelegate(this.OnEndGetAnalysisTaxonomicGroupsForProject);
            }
            if ((this.onGetAnalysisTaxonomicGroupsForProjectCompletedDelegate == null)) {
                this.onGetAnalysisTaxonomicGroupsForProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysisTaxonomicGroupsForProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysisTaxonomicGroupsForProjectDelegate, new object[] {
                        projectID,
                        login}, this.onEndGetAnalysisTaxonomicGroupsForProjectDelegate, this.onGetAnalysisTaxonomicGroupsForProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetAnalysesForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysesForProject(projectID, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis> DiversityPhone.DiversityService.IDiversityService.EndGetAnalysesForProject(System.IAsyncResult result) {
            return base.Channel.EndGetAnalysesForProject(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysesForProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int projectID = ((int)(inValues[0]));
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[1]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetAnalysesForProject(projectID, login, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysesForProject(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetAnalysesForProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalysesForProjectCompleted(object state) {
            if ((this.GetAnalysesForProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysesForProjectCompleted(this, new GetAnalysesForProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysesForProjectAsync(int projectID, DiversityPhone.DiversityService.UserCredentials login) {
            this.GetAnalysesForProjectAsync(projectID, login, null);
        }
        
        public void GetAnalysesForProjectAsync(int projectID, DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetAnalysesForProjectDelegate == null)) {
                this.onBeginGetAnalysesForProjectDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysesForProject);
            }
            if ((this.onEndGetAnalysesForProjectDelegate == null)) {
                this.onEndGetAnalysesForProjectDelegate = new EndOperationDelegate(this.OnEndGetAnalysesForProject);
            }
            if ((this.onGetAnalysesForProjectCompletedDelegate == null)) {
                this.onGetAnalysesForProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysesForProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysesForProjectDelegate, new object[] {
                        projectID,
                        login}, this.onEndGetAnalysesForProjectDelegate, this.onGetAnalysesForProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetAnalysisResultsForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysisResultsForProject(projectID, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult> DiversityPhone.DiversityService.IDiversityService.EndGetAnalysisResultsForProject(System.IAsyncResult result) {
            return base.Channel.EndGetAnalysisResultsForProject(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysisResultsForProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int projectID = ((int)(inValues[0]));
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[1]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetAnalysisResultsForProject(projectID, login, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysisResultsForProject(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetAnalysisResultsForProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalysisResultsForProjectCompleted(object state) {
            if ((this.GetAnalysisResultsForProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysisResultsForProjectCompleted(this, new GetAnalysisResultsForProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysisResultsForProjectAsync(int projectID, DiversityPhone.DiversityService.UserCredentials login) {
            this.GetAnalysisResultsForProjectAsync(projectID, login, null);
        }
        
        public void GetAnalysisResultsForProjectAsync(int projectID, DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetAnalysisResultsForProjectDelegate == null)) {
                this.onBeginGetAnalysisResultsForProjectDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysisResultsForProject);
            }
            if ((this.onEndGetAnalysisResultsForProjectDelegate == null)) {
                this.onEndGetAnalysisResultsForProjectDelegate = new EndOperationDelegate(this.OnEndGetAnalysisResultsForProject);
            }
            if ((this.onGetAnalysisResultsForProjectCompletedDelegate == null)) {
                this.onGetAnalysisResultsForProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysisResultsForProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysisResultsForProjectDelegate, new object[] {
                        projectID,
                        login}, this.onEndGetAnalysisResultsForProjectDelegate, this.onGetAnalysisResultsForProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginInsertEventSeries(System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> series, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertEventSeries(series, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.Generic.Dictionary<int, int> DiversityPhone.DiversityService.IDiversityService.EndInsertEventSeries(System.IAsyncResult result) {
            return base.Channel.EndInsertEventSeries(result);
        }
        
        private System.IAsyncResult OnBeginInsertEventSeries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> series = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries>)(inValues[0]));
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[1]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginInsertEventSeries(series, login, callback, asyncState);
        }
        
        private object[] OnEndInsertEventSeries(System.IAsyncResult result) {
            System.Collections.Generic.Dictionary<int, int> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndInsertEventSeries(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertEventSeriesCompleted(object state) {
            if ((this.InsertEventSeriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertEventSeriesCompleted(this, new InsertEventSeriesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertEventSeriesAsync(System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> series, DiversityPhone.DiversityService.UserCredentials login) {
            this.InsertEventSeriesAsync(series, login, null);
        }
        
        public void InsertEventSeriesAsync(System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> series, DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginInsertEventSeriesDelegate == null)) {
                this.onBeginInsertEventSeriesDelegate = new BeginOperationDelegate(this.OnBeginInsertEventSeries);
            }
            if ((this.onEndInsertEventSeriesDelegate == null)) {
                this.onEndInsertEventSeriesDelegate = new EndOperationDelegate(this.OnEndInsertEventSeries);
            }
            if ((this.onInsertEventSeriesCompletedDelegate == null)) {
                this.onInsertEventSeriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertEventSeriesCompleted);
            }
            base.InvokeAsync(this.onBeginInsertEventSeriesDelegate, new object[] {
                        series,
                        login}, this.onEndInsertEventSeriesDelegate, this.onInsertEventSeriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginInsertGeographyIntoSeries(int seriesID, string geostring, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertGeographyIntoSeries(seriesID, geostring, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DiversityPhone.DiversityService.IDiversityService.EndInsertGeographyIntoSeries(System.IAsyncResult result) {
            base.Channel.EndInsertGeographyIntoSeries(result);
        }
        
        private System.IAsyncResult OnBeginInsertGeographyIntoSeries(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int seriesID = ((int)(inValues[0]));
            string geostring = ((string)(inValues[1]));
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[2]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginInsertGeographyIntoSeries(seriesID, geostring, login, callback, asyncState);
        }
        
        private object[] OnEndInsertGeographyIntoSeries(System.IAsyncResult result) {
            ((DiversityPhone.DiversityService.IDiversityService)(this)).EndInsertGeographyIntoSeries(result);
            return null;
        }
        
        private void OnInsertGeographyIntoSeriesCompleted(object state) {
            if ((this.InsertGeographyIntoSeriesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertGeographyIntoSeriesCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertGeographyIntoSeriesAsync(int seriesID, string geostring, DiversityPhone.DiversityService.UserCredentials login) {
            this.InsertGeographyIntoSeriesAsync(seriesID, geostring, login, null);
        }
        
        public void InsertGeographyIntoSeriesAsync(int seriesID, string geostring, DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginInsertGeographyIntoSeriesDelegate == null)) {
                this.onBeginInsertGeographyIntoSeriesDelegate = new BeginOperationDelegate(this.OnBeginInsertGeographyIntoSeries);
            }
            if ((this.onEndInsertGeographyIntoSeriesDelegate == null)) {
                this.onEndInsertGeographyIntoSeriesDelegate = new EndOperationDelegate(this.OnEndInsertGeographyIntoSeries);
            }
            if ((this.onInsertGeographyIntoSeriesCompletedDelegate == null)) {
                this.onInsertGeographyIntoSeriesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertGeographyIntoSeriesCompleted);
            }
            base.InvokeAsync(this.onBeginInsertGeographyIntoSeriesDelegate, new object[] {
                        seriesID,
                        geostring,
                        login}, this.onEndInsertGeographyIntoSeriesDelegate, this.onInsertGeographyIntoSeriesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginInsertHierarchy(DiversityPhone.DiversityService.HierarchySection hierarchy, DiversityPhone.DiversityService.UserCredentials cred, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertHierarchy(hierarchy, cred, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DiversityPhone.DiversityService.KeyProjection DiversityPhone.DiversityService.IDiversityService.EndInsertHierarchy(System.IAsyncResult result) {
            return base.Channel.EndInsertHierarchy(result);
        }
        
        private System.IAsyncResult OnBeginInsertHierarchy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.HierarchySection hierarchy = ((DiversityPhone.DiversityService.HierarchySection)(inValues[0]));
            DiversityPhone.DiversityService.UserCredentials cred = ((DiversityPhone.DiversityService.UserCredentials)(inValues[1]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginInsertHierarchy(hierarchy, cred, callback, asyncState);
        }
        
        private object[] OnEndInsertHierarchy(System.IAsyncResult result) {
            DiversityPhone.DiversityService.KeyProjection retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndInsertHierarchy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertHierarchyCompleted(object state) {
            if ((this.InsertHierarchyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertHierarchyCompleted(this, new InsertHierarchyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertHierarchyAsync(DiversityPhone.DiversityService.HierarchySection hierarchy, DiversityPhone.DiversityService.UserCredentials cred) {
            this.InsertHierarchyAsync(hierarchy, cred, null);
        }
        
        public void InsertHierarchyAsync(DiversityPhone.DiversityService.HierarchySection hierarchy, DiversityPhone.DiversityService.UserCredentials cred, object userState) {
            if ((this.onBeginInsertHierarchyDelegate == null)) {
                this.onBeginInsertHierarchyDelegate = new BeginOperationDelegate(this.OnBeginInsertHierarchy);
            }
            if ((this.onEndInsertHierarchyDelegate == null)) {
                this.onEndInsertHierarchyDelegate = new EndOperationDelegate(this.OnEndInsertHierarchy);
            }
            if ((this.onInsertHierarchyCompletedDelegate == null)) {
                this.onInsertHierarchyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertHierarchyCompleted);
            }
            base.InvokeAsync(this.onBeginInsertHierarchyDelegate, new object[] {
                        hierarchy,
                        cred}, this.onEndInsertHierarchyDelegate, this.onInsertHierarchyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginInsertMMO(DiversityPhone.DiversityService.MultimediaObject mmo, DiversityPhone.DiversityService.UserCredentials cred, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertMMO(mmo, cred, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        bool DiversityPhone.DiversityService.IDiversityService.EndInsertMMO(System.IAsyncResult result) {
            return base.Channel.EndInsertMMO(result);
        }
        
        private System.IAsyncResult OnBeginInsertMMO(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.MultimediaObject mmo = ((DiversityPhone.DiversityService.MultimediaObject)(inValues[0]));
            DiversityPhone.DiversityService.UserCredentials cred = ((DiversityPhone.DiversityService.UserCredentials)(inValues[1]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginInsertMMO(mmo, cred, callback, asyncState);
        }
        
        private object[] OnEndInsertMMO(System.IAsyncResult result) {
            bool retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndInsertMMO(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertMMOCompleted(object state) {
            if ((this.InsertMMOCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertMMOCompleted(this, new InsertMMOCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertMMOAsync(DiversityPhone.DiversityService.MultimediaObject mmo, DiversityPhone.DiversityService.UserCredentials cred) {
            this.InsertMMOAsync(mmo, cred, null);
        }
        
        public void InsertMMOAsync(DiversityPhone.DiversityService.MultimediaObject mmo, DiversityPhone.DiversityService.UserCredentials cred, object userState) {
            if ((this.onBeginInsertMMODelegate == null)) {
                this.onBeginInsertMMODelegate = new BeginOperationDelegate(this.OnBeginInsertMMO);
            }
            if ((this.onEndInsertMMODelegate == null)) {
                this.onEndInsertMMODelegate = new EndOperationDelegate(this.OnEndInsertMMO);
            }
            if ((this.onInsertMMOCompletedDelegate == null)) {
                this.onInsertMMOCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertMMOCompleted);
            }
            base.InvokeAsync(this.onBeginInsertMMODelegate, new object[] {
                        mmo,
                        cred}, this.onEndInsertMMODelegate, this.onInsertMMOCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetTaxonListsForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaxonListsForUser(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList> DiversityPhone.DiversityService.IDiversityService.EndGetTaxonListsForUser(System.IAsyncResult result) {
            return base.Channel.EndGetTaxonListsForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetTaxonListsForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetTaxonListsForUser(login, callback, asyncState);
        }
        
        private object[] OnEndGetTaxonListsForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetTaxonListsForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaxonListsForUserCompleted(object state) {
            if ((this.GetTaxonListsForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaxonListsForUserCompleted(this, new GetTaxonListsForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaxonListsForUserAsync(DiversityPhone.DiversityService.UserCredentials login) {
            this.GetTaxonListsForUserAsync(login, null);
        }
        
        public void GetTaxonListsForUserAsync(DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetTaxonListsForUserDelegate == null)) {
                this.onBeginGetTaxonListsForUserDelegate = new BeginOperationDelegate(this.OnBeginGetTaxonListsForUser);
            }
            if ((this.onEndGetTaxonListsForUserDelegate == null)) {
                this.onEndGetTaxonListsForUserDelegate = new EndOperationDelegate(this.OnEndGetTaxonListsForUser);
            }
            if ((this.onGetTaxonListsForUserCompletedDelegate == null)) {
                this.onGetTaxonListsForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaxonListsForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaxonListsForUserDelegate, new object[] {
                        login}, this.onEndGetTaxonListsForUserDelegate, this.onGetTaxonListsForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginDownloadTaxonList(DiversityPhone.DiversityService.TaxonList list, int page, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadTaxonList(list, page, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName> DiversityPhone.DiversityService.IDiversityService.EndDownloadTaxonList(System.IAsyncResult result) {
            return base.Channel.EndDownloadTaxonList(result);
        }
        
        private System.IAsyncResult OnBeginDownloadTaxonList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.TaxonList list = ((DiversityPhone.DiversityService.TaxonList)(inValues[0]));
            int page = ((int)(inValues[1]));
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[2]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginDownloadTaxonList(list, page, login, callback, asyncState);
        }
        
        private object[] OnEndDownloadTaxonList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndDownloadTaxonList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadTaxonListCompleted(object state) {
            if ((this.DownloadTaxonListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadTaxonListCompleted(this, new DownloadTaxonListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadTaxonListAsync(DiversityPhone.DiversityService.TaxonList list, int page, DiversityPhone.DiversityService.UserCredentials login) {
            this.DownloadTaxonListAsync(list, page, login, null);
        }
        
        public void DownloadTaxonListAsync(DiversityPhone.DiversityService.TaxonList list, int page, DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginDownloadTaxonListDelegate == null)) {
                this.onBeginDownloadTaxonListDelegate = new BeginOperationDelegate(this.OnBeginDownloadTaxonList);
            }
            if ((this.onEndDownloadTaxonListDelegate == null)) {
                this.onEndDownloadTaxonListDelegate = new EndOperationDelegate(this.OnEndDownloadTaxonList);
            }
            if ((this.onDownloadTaxonListCompletedDelegate == null)) {
                this.onDownloadTaxonListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadTaxonListCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadTaxonListDelegate, new object[] {
                        list,
                        page,
                        login}, this.onEndDownloadTaxonListDelegate, this.onDownloadTaxonListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetPropertiesForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPropertiesForUser(login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property> DiversityPhone.DiversityService.IDiversityService.EndGetPropertiesForUser(System.IAsyncResult result) {
            return base.Channel.EndGetPropertiesForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetPropertiesForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetPropertiesForUser(login, callback, asyncState);
        }
        
        private object[] OnEndGetPropertiesForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetPropertiesForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPropertiesForUserCompleted(object state) {
            if ((this.GetPropertiesForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPropertiesForUserCompleted(this, new GetPropertiesForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPropertiesForUserAsync(DiversityPhone.DiversityService.UserCredentials login) {
            this.GetPropertiesForUserAsync(login, null);
        }
        
        public void GetPropertiesForUserAsync(DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginGetPropertiesForUserDelegate == null)) {
                this.onBeginGetPropertiesForUserDelegate = new BeginOperationDelegate(this.OnBeginGetPropertiesForUser);
            }
            if ((this.onEndGetPropertiesForUserDelegate == null)) {
                this.onEndGetPropertiesForUserDelegate = new EndOperationDelegate(this.OnEndGetPropertiesForUser);
            }
            if ((this.onGetPropertiesForUserCompletedDelegate == null)) {
                this.onGetPropertiesForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPropertiesForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetPropertiesForUserDelegate, new object[] {
                        login}, this.onEndGetPropertiesForUserDelegate, this.onGetPropertiesForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginDownloadPropertyNames(DiversityPhone.DiversityService.Property p, int page, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadPropertyNames(p, page, login, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName> DiversityPhone.DiversityService.IDiversityService.EndDownloadPropertyNames(System.IAsyncResult result) {
            return base.Channel.EndDownloadPropertyNames(result);
        }
        
        private System.IAsyncResult OnBeginDownloadPropertyNames(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.DiversityService.Property p = ((DiversityPhone.DiversityService.Property)(inValues[0]));
            int page = ((int)(inValues[1]));
            DiversityPhone.DiversityService.UserCredentials login = ((DiversityPhone.DiversityService.UserCredentials)(inValues[2]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginDownloadPropertyNames(p, page, login, callback, asyncState);
        }
        
        private object[] OnEndDownloadPropertyNames(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndDownloadPropertyNames(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadPropertyNamesCompleted(object state) {
            if ((this.DownloadPropertyNamesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadPropertyNamesCompleted(this, new DownloadPropertyNamesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadPropertyNamesAsync(DiversityPhone.DiversityService.Property p, int page, DiversityPhone.DiversityService.UserCredentials login) {
            this.DownloadPropertyNamesAsync(p, page, login, null);
        }
        
        public void DownloadPropertyNamesAsync(DiversityPhone.DiversityService.Property p, int page, DiversityPhone.DiversityService.UserCredentials login, object userState) {
            if ((this.onBeginDownloadPropertyNamesDelegate == null)) {
                this.onBeginDownloadPropertyNamesDelegate = new BeginOperationDelegate(this.OnBeginDownloadPropertyNames);
            }
            if ((this.onEndDownloadPropertyNamesDelegate == null)) {
                this.onEndDownloadPropertyNamesDelegate = new EndOperationDelegate(this.OnEndDownloadPropertyNames);
            }
            if ((this.onDownloadPropertyNamesCompletedDelegate == null)) {
                this.onDownloadPropertyNamesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadPropertyNamesCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadPropertyNamesDelegate, new object[] {
                        p,
                        page,
                        login}, this.onEndDownloadPropertyNamesDelegate, this.onDownloadPropertyNamesCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DiversityPhone.DiversityService.IDiversityService CreateChannel() {
            return new DiversityServiceClientChannel(this);
        }
        
        private class DiversityServiceClientChannel : ChannelBase<DiversityPhone.DiversityService.IDiversityService>, DiversityPhone.DiversityService.IDiversityService {
            
            public DiversityServiceClientChannel(System.ServiceModel.ClientBase<DiversityPhone.DiversityService.IDiversityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetStandardVocabulary(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetStandardVocabulary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term> EndGetStandardVocabulary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Term>)(base.EndInvoke("GetStandardVocabulary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetUserInfo(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetUserInfo", _args, callback, asyncState);
                return _result;
            }
            
            public DiversityPhone.DiversityService.UserProfile EndGetUserInfo(System.IAsyncResult result) {
                object[] _args = new object[0];
                DiversityPhone.DiversityService.UserProfile _result = ((DiversityPhone.DiversityService.UserProfile)(base.EndInvoke("GetUserInfo", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetRepositories(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetRepositories", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository> EndGetRepositories(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Repository>)(base.EndInvoke("GetRepositories", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetQualifications(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetQualifications", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification> EndGetQualifications(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Qualification>)(base.EndInvoke("GetQualifications", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetProjectsForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetProjectsForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project> EndGetProjectsForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Project>)(base.EndInvoke("GetProjectsForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalysisTaxonomicGroupsForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = projectID;
                _args[1] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalysisTaxonomicGroupsForProject", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup> EndGetAnalysisTaxonomicGroupsForProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisTaxonomicGroup>)(base.EndInvoke("GetAnalysisTaxonomicGroupsForProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalysesForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = projectID;
                _args[1] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalysesForProject", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis> EndGetAnalysesForProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Analysis>)(base.EndInvoke("GetAnalysesForProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalysisResultsForProject(int projectID, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = projectID;
                _args[1] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalysisResultsForProject", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult> EndGetAnalysisResultsForProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.AnalysisResult>)(base.EndInvoke("GetAnalysisResultsForProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertEventSeries(System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> series, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = series;
                _args[1] = login;
                System.IAsyncResult _result = base.BeginInvoke("InsertEventSeries", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.Generic.Dictionary<int, int> EndInsertEventSeries(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.Generic.Dictionary<int, int> _result = ((System.Collections.Generic.Dictionary<int, int>)(base.EndInvoke("InsertEventSeries", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertGeographyIntoSeries(int seriesID, string geostring, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = seriesID;
                _args[1] = geostring;
                _args[2] = login;
                System.IAsyncResult _result = base.BeginInvoke("InsertGeographyIntoSeries", _args, callback, asyncState);
                return _result;
            }
            
            public void EndInsertGeographyIntoSeries(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("InsertGeographyIntoSeries", _args, result);
            }
            
            public System.IAsyncResult BeginInsertHierarchy(DiversityPhone.DiversityService.HierarchySection hierarchy, DiversityPhone.DiversityService.UserCredentials cred, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = hierarchy;
                _args[1] = cred;
                System.IAsyncResult _result = base.BeginInvoke("InsertHierarchy", _args, callback, asyncState);
                return _result;
            }
            
            public DiversityPhone.DiversityService.KeyProjection EndInsertHierarchy(System.IAsyncResult result) {
                object[] _args = new object[0];
                DiversityPhone.DiversityService.KeyProjection _result = ((DiversityPhone.DiversityService.KeyProjection)(base.EndInvoke("InsertHierarchy", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertMMO(DiversityPhone.DiversityService.MultimediaObject mmo, DiversityPhone.DiversityService.UserCredentials cred, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = mmo;
                _args[1] = cred;
                System.IAsyncResult _result = base.BeginInvoke("InsertMMO", _args, callback, asyncState);
                return _result;
            }
            
            public bool EndInsertMMO(System.IAsyncResult result) {
                object[] _args = new object[0];
                bool _result = ((bool)(base.EndInvoke("InsertMMO", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaxonListsForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetTaxonListsForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList> EndGetTaxonListsForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonList>)(base.EndInvoke("GetTaxonListsForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadTaxonList(DiversityPhone.DiversityService.TaxonList list, int page, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = list;
                _args[1] = page;
                _args[2] = login;
                System.IAsyncResult _result = base.BeginInvoke("DownloadTaxonList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName> EndDownloadTaxonList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.TaxonName>)(base.EndInvoke("DownloadTaxonList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetPropertiesForUser(DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = login;
                System.IAsyncResult _result = base.BeginInvoke("GetPropertiesForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property> EndGetPropertiesForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.Property>)(base.EndInvoke("GetPropertiesForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadPropertyNames(DiversityPhone.DiversityService.Property p, int page, DiversityPhone.DiversityService.UserCredentials login, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[3];
                _args[0] = p;
                _args[1] = page;
                _args[2] = login;
                System.IAsyncResult _result = base.BeginInvoke("DownloadPropertyNames", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName> EndDownloadPropertyNames(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.PropertyName>)(base.EndInvoke("DownloadPropertyNames", _args, result)));
                return _result;
            }
        }
    }
}
