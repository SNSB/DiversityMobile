//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

//
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
//
namespace DiversityPhone.MapService
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "MapService.IPhoneMediaService")]
    public interface IPhoneMediaService
    {
        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/GetMapList", ReplyAction = "http://tempuri.org/IPhoneMediaService/GetMapListResponse")]
        System.IAsyncResult BeginGetMapList(System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<string> EndGetMapList(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/GetMapListFilter", ReplyAction = "http://tempuri.org/IPhoneMediaService/GetMapListFilterResponse")]
        System.IAsyncResult BeginGetMapListFilter(string find, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<string> EndGetMapListFilter(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/GetMapListCoords", ReplyAction = "http://tempuri.org/IPhoneMediaService/GetMapListCoordsResponse")]
        System.IAsyncResult BeginGetMapListCoords(double lon, double lat, System.AsyncCallback callback, object asyncState);

        System.Collections.ObjectModel.ObservableCollection<string> EndGetMapListCoords(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/GetMapUrl", ReplyAction = "http://tempuri.org/IPhoneMediaService/GetMapUrlResponse")]
        System.IAsyncResult BeginGetMapUrl(string mapID, System.AsyncCallback callback, object asyncState);

        string EndGetMapUrl(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/GetXmlUrl", ReplyAction = "http://tempuri.org/IPhoneMediaService/GetXmlUrlResponse")]
        System.IAsyncResult BeginGetXmlUrl(string mapID, System.AsyncCallback callback, object asyncState);

        string EndGetXmlUrl(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/BeginTransaction", ReplyAction = "http://tempuri.org/IPhoneMediaService/BeginTransactionResponse")]
        System.IAsyncResult BeginBeginTransaction(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, System.AsyncCallback callback, object asyncState);

        string EndBeginTransaction(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/EncodeFile", ReplyAction = "http://tempuri.org/IPhoneMediaService/EncodeFileResponse")]
        System.IAsyncResult BeginEncodeFile(byte[] data, System.AsyncCallback callback, object asyncState);

        string EndEncodeFile(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/Commit", ReplyAction = "http://tempuri.org/IPhoneMediaService/CommitResponse")]
        System.IAsyncResult BeginCommit(System.AsyncCallback callback, object asyncState);

        string EndCommit(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/Rollback", ReplyAction = "http://tempuri.org/IPhoneMediaService/RollbackResponse")]
        System.IAsyncResult BeginRollback(System.AsyncCallback callback, object asyncState);

        void EndRollback(System.IAsyncResult result);

        [System.ServiceModel.OperationContractAttribute(AsyncPattern = true, Action = "http://tempuri.org/IPhoneMediaService/Submit", ReplyAction = "http://tempuri.org/IPhoneMediaService/SubmitResponse")]
        System.IAsyncResult BeginSubmit(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, System.AsyncCallback callback, object asyncState);

        string EndSubmit(System.IAsyncResult result);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPhoneMediaServiceChannel : DiversityPhone.MapService.IPhoneMediaService, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public GetMapListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapListFilterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public GetMapListFilterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapListCoordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public GetMapListCoordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public System.Collections.ObjectModel.ObservableCollection<string> Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public GetMapUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetXmlUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public GetXmlUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BeginTransactionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public BeginTransactionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EncodeFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public EncodeFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CommitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public CommitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SubmitCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {
        private object[] results;

        public SubmitCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        public string Result
        {
            get
            {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PhoneMediaServiceClient : System.ServiceModel.ClientBase<DiversityPhone.MapService.IPhoneMediaService>, DiversityPhone.MapService.IPhoneMediaService
    {
        private BeginOperationDelegate onBeginGetMapListDelegate;

        private EndOperationDelegate onEndGetMapListDelegate;

        private System.Threading.SendOrPostCallback onGetMapListCompletedDelegate;

        private BeginOperationDelegate onBeginGetMapListFilterDelegate;

        private EndOperationDelegate onEndGetMapListFilterDelegate;

        private System.Threading.SendOrPostCallback onGetMapListFilterCompletedDelegate;

        private BeginOperationDelegate onBeginGetMapListCoordsDelegate;

        private EndOperationDelegate onEndGetMapListCoordsDelegate;

        private System.Threading.SendOrPostCallback onGetMapListCoordsCompletedDelegate;

        private BeginOperationDelegate onBeginGetMapUrlDelegate;

        private EndOperationDelegate onEndGetMapUrlDelegate;

        private System.Threading.SendOrPostCallback onGetMapUrlCompletedDelegate;

        private BeginOperationDelegate onBeginGetXmlUrlDelegate;

        private EndOperationDelegate onEndGetXmlUrlDelegate;

        private System.Threading.SendOrPostCallback onGetXmlUrlCompletedDelegate;

        private BeginOperationDelegate onBeginBeginTransactionDelegate;

        private EndOperationDelegate onEndBeginTransactionDelegate;

        private System.Threading.SendOrPostCallback onBeginTransactionCompletedDelegate;

        private BeginOperationDelegate onBeginEncodeFileDelegate;

        private EndOperationDelegate onEndEncodeFileDelegate;

        private System.Threading.SendOrPostCallback onEncodeFileCompletedDelegate;

        private BeginOperationDelegate onBeginCommitDelegate;

        private EndOperationDelegate onEndCommitDelegate;

        private System.Threading.SendOrPostCallback onCommitCompletedDelegate;

        private BeginOperationDelegate onBeginRollbackDelegate;

        private EndOperationDelegate onEndRollbackDelegate;

        private System.Threading.SendOrPostCallback onRollbackCompletedDelegate;

        private BeginOperationDelegate onBeginSubmitDelegate;

        private EndOperationDelegate onEndSubmitDelegate;

        private System.Threading.SendOrPostCallback onSubmitCompletedDelegate;

        private BeginOperationDelegate onBeginOpenDelegate;

        private EndOperationDelegate onEndOpenDelegate;

        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;

        private BeginOperationDelegate onBeginCloseDelegate;

        private EndOperationDelegate onEndCloseDelegate;

        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;

        public PhoneMediaServiceClient()
        {
        }

        public PhoneMediaServiceClient(string endpointConfigurationName) :
            base(endpointConfigurationName)
        {
        }

        public PhoneMediaServiceClient(string endpointConfigurationName, string remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public PhoneMediaServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
            base(endpointConfigurationName, remoteAddress)
        {
        }

        public PhoneMediaServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
            base(binding, remoteAddress)
        {
        }

        public System.Net.CookieContainer CookieContainer
        {
            get
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    return httpCookieContainerManager.CookieContainer;
                }
                else
                {
                    return null;
                }
            }
            set
            {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null))
                {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else
                {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }

        public event System.EventHandler<GetMapListCompletedEventArgs> GetMapListCompleted;

        public event System.EventHandler<GetMapListFilterCompletedEventArgs> GetMapListFilterCompleted;

        public event System.EventHandler<GetMapListCoordsCompletedEventArgs> GetMapListCoordsCompleted;

        public event System.EventHandler<GetMapUrlCompletedEventArgs> GetMapUrlCompleted;

        public event System.EventHandler<GetXmlUrlCompletedEventArgs> GetXmlUrlCompleted;

        public event System.EventHandler<BeginTransactionCompletedEventArgs> BeginTransactionCompleted;

        public event System.EventHandler<EncodeFileCompletedEventArgs> EncodeFileCompleted;

        public event System.EventHandler<CommitCompletedEventArgs> CommitCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> RollbackCompleted;

        public event System.EventHandler<SubmitCompletedEventArgs> SubmitCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;

        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginGetMapList(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetMapList(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> DiversityPhone.MapService.IPhoneMediaService.EndGetMapList(System.IAsyncResult result)
        {
            return base.Channel.EndGetMapList(result);
        }

        private System.IAsyncResult OnBeginGetMapList(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginGetMapList(callback, asyncState);
        }

        private object[] OnEndGetMapList(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndGetMapList(result);
            return new object[] {
                    retVal};
        }

        private void OnGetMapListCompleted(object state)
        {
            if ((this.GetMapListCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapListCompleted(this, new GetMapListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetMapListAsync()
        {
            this.GetMapListAsync(null);
        }

        public void GetMapListAsync(object userState)
        {
            if ((this.onBeginGetMapListDelegate == null))
            {
                this.onBeginGetMapListDelegate = new BeginOperationDelegate(this.OnBeginGetMapList);
            }
            if ((this.onEndGetMapListDelegate == null))
            {
                this.onEndGetMapListDelegate = new EndOperationDelegate(this.OnEndGetMapList);
            }
            if ((this.onGetMapListCompletedDelegate == null))
            {
                this.onGetMapListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapListCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapListDelegate, null, this.onEndGetMapListDelegate, this.onGetMapListCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginGetMapListFilter(string find, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetMapListFilter(find, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> DiversityPhone.MapService.IPhoneMediaService.EndGetMapListFilter(System.IAsyncResult result)
        {
            return base.Channel.EndGetMapListFilter(result);
        }

        private System.IAsyncResult OnBeginGetMapListFilter(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string find = ((string)(inValues[0]));
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginGetMapListFilter(find, callback, asyncState);
        }

        private object[] OnEndGetMapListFilter(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndGetMapListFilter(result);
            return new object[] {
                    retVal};
        }

        private void OnGetMapListFilterCompleted(object state)
        {
            if ((this.GetMapListFilterCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapListFilterCompleted(this, new GetMapListFilterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetMapListFilterAsync(string find)
        {
            this.GetMapListFilterAsync(find, null);
        }

        public void GetMapListFilterAsync(string find, object userState)
        {
            if ((this.onBeginGetMapListFilterDelegate == null))
            {
                this.onBeginGetMapListFilterDelegate = new BeginOperationDelegate(this.OnBeginGetMapListFilter);
            }
            if ((this.onEndGetMapListFilterDelegate == null))
            {
                this.onEndGetMapListFilterDelegate = new EndOperationDelegate(this.OnEndGetMapListFilter);
            }
            if ((this.onGetMapListFilterCompletedDelegate == null))
            {
                this.onGetMapListFilterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapListFilterCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapListFilterDelegate, new object[] {
                        find}, this.onEndGetMapListFilterDelegate, this.onGetMapListFilterCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginGetMapListCoords(double lon, double lat, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetMapListCoords(lon, lat, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> DiversityPhone.MapService.IPhoneMediaService.EndGetMapListCoords(System.IAsyncResult result)
        {
            return base.Channel.EndGetMapListCoords(result);
        }

        private System.IAsyncResult OnBeginGetMapListCoords(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            double lon = ((double)(inValues[0]));
            double lat = ((double)(inValues[1]));
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginGetMapListCoords(lon, lat, callback, asyncState);
        }

        private object[] OnEndGetMapListCoords(System.IAsyncResult result)
        {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndGetMapListCoords(result);
            return new object[] {
                    retVal};
        }

        private void OnGetMapListCoordsCompleted(object state)
        {
            if ((this.GetMapListCoordsCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapListCoordsCompleted(this, new GetMapListCoordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetMapListCoordsAsync(double lon, double lat)
        {
            this.GetMapListCoordsAsync(lon, lat, null);
        }

        public void GetMapListCoordsAsync(double lon, double lat, object userState)
        {
            if ((this.onBeginGetMapListCoordsDelegate == null))
            {
                this.onBeginGetMapListCoordsDelegate = new BeginOperationDelegate(this.OnBeginGetMapListCoords);
            }
            if ((this.onEndGetMapListCoordsDelegate == null))
            {
                this.onEndGetMapListCoordsDelegate = new EndOperationDelegate(this.OnEndGetMapListCoords);
            }
            if ((this.onGetMapListCoordsCompletedDelegate == null))
            {
                this.onGetMapListCoordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapListCoordsCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapListCoordsDelegate, new object[] {
                        lon,
                        lat}, this.onEndGetMapListCoordsDelegate, this.onGetMapListCoordsCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginGetMapUrl(string mapID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetMapUrl(mapID, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MapService.IPhoneMediaService.EndGetMapUrl(System.IAsyncResult result)
        {
            return base.Channel.EndGetMapUrl(result);
        }

        private System.IAsyncResult OnBeginGetMapUrl(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string mapID = ((string)(inValues[0]));
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginGetMapUrl(mapID, callback, asyncState);
        }

        private object[] OnEndGetMapUrl(System.IAsyncResult result)
        {
            string retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndGetMapUrl(result);
            return new object[] {
                    retVal};
        }

        private void OnGetMapUrlCompleted(object state)
        {
            if ((this.GetMapUrlCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapUrlCompleted(this, new GetMapUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetMapUrlAsync(string mapID)
        {
            this.GetMapUrlAsync(mapID, null);
        }

        public void GetMapUrlAsync(string mapID, object userState)
        {
            if ((this.onBeginGetMapUrlDelegate == null))
            {
                this.onBeginGetMapUrlDelegate = new BeginOperationDelegate(this.OnBeginGetMapUrl);
            }
            if ((this.onEndGetMapUrlDelegate == null))
            {
                this.onEndGetMapUrlDelegate = new EndOperationDelegate(this.OnEndGetMapUrl);
            }
            if ((this.onGetMapUrlCompletedDelegate == null))
            {
                this.onGetMapUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapUrlDelegate, new object[] {
                        mapID}, this.onEndGetMapUrlDelegate, this.onGetMapUrlCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginGetXmlUrl(string mapID, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginGetXmlUrl(mapID, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MapService.IPhoneMediaService.EndGetXmlUrl(System.IAsyncResult result)
        {
            return base.Channel.EndGetXmlUrl(result);
        }

        private System.IAsyncResult OnBeginGetXmlUrl(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string mapID = ((string)(inValues[0]));
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginGetXmlUrl(mapID, callback, asyncState);
        }

        private object[] OnEndGetXmlUrl(System.IAsyncResult result)
        {
            string retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndGetXmlUrl(result);
            return new object[] {
                    retVal};
        }

        private void OnGetXmlUrlCompleted(object state)
        {
            if ((this.GetXmlUrlCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetXmlUrlCompleted(this, new GetXmlUrlCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void GetXmlUrlAsync(string mapID)
        {
            this.GetXmlUrlAsync(mapID, null);
        }

        public void GetXmlUrlAsync(string mapID, object userState)
        {
            if ((this.onBeginGetXmlUrlDelegate == null))
            {
                this.onBeginGetXmlUrlDelegate = new BeginOperationDelegate(this.OnBeginGetXmlUrl);
            }
            if ((this.onEndGetXmlUrlDelegate == null))
            {
                this.onEndGetXmlUrlDelegate = new EndOperationDelegate(this.OnEndGetXmlUrl);
            }
            if ((this.onGetXmlUrlCompletedDelegate == null))
            {
                this.onGetXmlUrlCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetXmlUrlCompleted);
            }
            base.InvokeAsync(this.onBeginGetXmlUrlDelegate, new object[] {
                        mapID}, this.onEndGetXmlUrlDelegate, this.onGetXmlUrlCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginBeginTransaction(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginBeginTransaction(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MapService.IPhoneMediaService.EndBeginTransaction(System.IAsyncResult result)
        {
            return base.Channel.EndBeginTransaction(result);
        }

        private System.IAsyncResult OnBeginBeginTransaction(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string rowGuid = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string type = ((string)(inValues[2]));
            float latitude = ((float)(inValues[3]));
            float longitude = ((float)(inValues[4]));
            float altitude = ((float)(inValues[5]));
            string author = ((string)(inValues[6]));
            string timestamp = ((string)(inValues[7]));
            int projectId = ((int)(inValues[8]));
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginBeginTransaction(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, callback, asyncState);
        }

        private object[] OnEndBeginTransaction(System.IAsyncResult result)
        {
            string retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndBeginTransaction(result);
            return new object[] {
                    retVal};
        }

        private void OnBeginTransactionCompleted(object state)
        {
            if ((this.BeginTransactionCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BeginTransactionCompleted(this, new BeginTransactionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void BeginTransactionAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId)
        {
            this.BeginTransactionAsync(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, null);
        }

        public void BeginTransactionAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, object userState)
        {
            if ((this.onBeginBeginTransactionDelegate == null))
            {
                this.onBeginBeginTransactionDelegate = new BeginOperationDelegate(this.OnBeginBeginTransaction);
            }
            if ((this.onEndBeginTransactionDelegate == null))
            {
                this.onEndBeginTransactionDelegate = new EndOperationDelegate(this.OnEndBeginTransaction);
            }
            if ((this.onBeginTransactionCompletedDelegate == null))
            {
                this.onBeginTransactionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBeginTransactionCompleted);
            }
            base.InvokeAsync(this.onBeginBeginTransactionDelegate, new object[] {
                        rowGuid,
                        fileName,
                        type,
                        latitude,
                        longitude,
                        altitude,
                        author,
                        timestamp,
                        projectId}, this.onEndBeginTransactionDelegate, this.onBeginTransactionCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginEncodeFile(byte[] data, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginEncodeFile(data, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MapService.IPhoneMediaService.EndEncodeFile(System.IAsyncResult result)
        {
            return base.Channel.EndEncodeFile(result);
        }

        private System.IAsyncResult OnBeginEncodeFile(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            byte[] data = ((byte[])(inValues[0]));
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginEncodeFile(data, callback, asyncState);
        }

        private object[] OnEndEncodeFile(System.IAsyncResult result)
        {
            string retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndEncodeFile(result);
            return new object[] {
                    retVal};
        }

        private void OnEncodeFileCompleted(object state)
        {
            if ((this.EncodeFileCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.EncodeFileCompleted(this, new EncodeFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void EncodeFileAsync(byte[] data)
        {
            this.EncodeFileAsync(data, null);
        }

        public void EncodeFileAsync(byte[] data, object userState)
        {
            if ((this.onBeginEncodeFileDelegate == null))
            {
                this.onBeginEncodeFileDelegate = new BeginOperationDelegate(this.OnBeginEncodeFile);
            }
            if ((this.onEndEncodeFileDelegate == null))
            {
                this.onEndEncodeFileDelegate = new EndOperationDelegate(this.OnEndEncodeFile);
            }
            if ((this.onEncodeFileCompletedDelegate == null))
            {
                this.onEncodeFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnEncodeFileCompleted);
            }
            base.InvokeAsync(this.onBeginEncodeFileDelegate, new object[] {
                        data}, this.onEndEncodeFileDelegate, this.onEncodeFileCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginCommit(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginCommit(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MapService.IPhoneMediaService.EndCommit(System.IAsyncResult result)
        {
            return base.Channel.EndCommit(result);
        }

        private System.IAsyncResult OnBeginCommit(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginCommit(callback, asyncState);
        }

        private object[] OnEndCommit(System.IAsyncResult result)
        {
            string retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndCommit(result);
            return new object[] {
                    retVal};
        }

        private void OnCommitCompleted(object state)
        {
            if ((this.CommitCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CommitCompleted(this, new CommitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CommitAsync()
        {
            this.CommitAsync(null);
        }

        public void CommitAsync(object userState)
        {
            if ((this.onBeginCommitDelegate == null))
            {
                this.onBeginCommitDelegate = new BeginOperationDelegate(this.OnBeginCommit);
            }
            if ((this.onEndCommitDelegate == null))
            {
                this.onEndCommitDelegate = new EndOperationDelegate(this.OnEndCommit);
            }
            if ((this.onCommitCompletedDelegate == null))
            {
                this.onCommitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCommitCompleted);
            }
            base.InvokeAsync(this.onBeginCommitDelegate, null, this.onEndCommitDelegate, this.onCommitCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginRollback(System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginRollback(callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void DiversityPhone.MapService.IPhoneMediaService.EndRollback(System.IAsyncResult result)
        {
            base.Channel.EndRollback(result);
        }

        private System.IAsyncResult OnBeginRollback(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginRollback(callback, asyncState);
        }

        private object[] OnEndRollback(System.IAsyncResult result)
        {
            ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndRollback(result);
            return null;
        }

        private void OnRollbackCompleted(object state)
        {
            if ((this.RollbackCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RollbackCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void RollbackAsync()
        {
            this.RollbackAsync(null);
        }

        public void RollbackAsync(object userState)
        {
            if ((this.onBeginRollbackDelegate == null))
            {
                this.onBeginRollbackDelegate = new BeginOperationDelegate(this.OnBeginRollback);
            }
            if ((this.onEndRollbackDelegate == null))
            {
                this.onEndRollbackDelegate = new EndOperationDelegate(this.OnEndRollback);
            }
            if ((this.onRollbackCompletedDelegate == null))
            {
                this.onRollbackCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRollbackCompleted);
            }
            base.InvokeAsync(this.onBeginRollbackDelegate, null, this.onEndRollbackDelegate, this.onRollbackCompletedDelegate, userState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.MapService.IPhoneMediaService.BeginSubmit(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, System.AsyncCallback callback, object asyncState)
        {
            return base.Channel.BeginSubmit(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, data, callback, asyncState);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string DiversityPhone.MapService.IPhoneMediaService.EndSubmit(System.IAsyncResult result)
        {
            return base.Channel.EndSubmit(result);
        }

        private System.IAsyncResult OnBeginSubmit(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            string rowGuid = ((string)(inValues[0]));
            string fileName = ((string)(inValues[1]));
            string type = ((string)(inValues[2]));
            float latitude = ((float)(inValues[3]));
            float longitude = ((float)(inValues[4]));
            float altitude = ((float)(inValues[5]));
            string author = ((string)(inValues[6]));
            string timestamp = ((string)(inValues[7]));
            int projectId = ((int)(inValues[8]));
            byte[] data = ((byte[])(inValues[9]));
            return ((DiversityPhone.MapService.IPhoneMediaService)(this)).BeginSubmit(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, data, callback, asyncState);
        }

        private object[] OnEndSubmit(System.IAsyncResult result)
        {
            string retVal = ((DiversityPhone.MapService.IPhoneMediaService)(this)).EndSubmit(result);
            return new object[] {
                    retVal};
        }

        private void OnSubmitCompleted(object state)
        {
            if ((this.SubmitCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubmitCompleted(this, new SubmitCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }

        public void SubmitAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data)
        {
            this.SubmitAsync(rowGuid, fileName, type, latitude, longitude, altitude, author, timestamp, projectId, data, null);
        }

        public void SubmitAsync(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, object userState)
        {
            if ((this.onBeginSubmitDelegate == null))
            {
                this.onBeginSubmitDelegate = new BeginOperationDelegate(this.OnBeginSubmit);
            }
            if ((this.onEndSubmitDelegate == null))
            {
                this.onEndSubmitDelegate = new EndOperationDelegate(this.OnEndSubmit);
            }
            if ((this.onSubmitCompletedDelegate == null))
            {
                this.onSubmitCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubmitCompleted);
            }
            base.InvokeAsync(this.onBeginSubmitDelegate, new object[] {
                        rowGuid,
                        fileName,
                        type,
                        latitude,
                        longitude,
                        altitude,
                        author,
                        timestamp,
                        projectId,
                        data}, this.onEndSubmitDelegate, this.onSubmitCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }

        private object[] OnEndOpen(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }

        private void OnOpenCompleted(object state)
        {
            if ((this.OpenCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void OpenAsync()
        {
            this.OpenAsync(null);
        }

        public void OpenAsync(object userState)
        {
            if ((this.onBeginOpenDelegate == null))
            {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null))
            {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null))
            {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }

        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState)
        {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }

        private object[] OnEndClose(System.IAsyncResult result)
        {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }

        private void OnCloseCompleted(object state)
        {
            if ((this.CloseCompleted != null))
            {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }

        public void CloseAsync()
        {
            this.CloseAsync(null);
        }

        public void CloseAsync(object userState)
        {
            if ((this.onBeginCloseDelegate == null))
            {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null))
            {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null))
            {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }

        protected override DiversityPhone.MapService.IPhoneMediaService CreateChannel()
        {
            return new PhoneMediaServiceClientChannel(this);
        }

        private class PhoneMediaServiceClientChannel : ChannelBase<DiversityPhone.MapService.IPhoneMediaService>, DiversityPhone.MapService.IPhoneMediaService
        {
            public PhoneMediaServiceClientChannel(System.ServiceModel.ClientBase<DiversityPhone.MapService.IPhoneMediaService> client) :
                base(client)
            {
            }

            public System.IAsyncResult BeginGetMapList(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetMapList", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<string> EndGetMapList(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetMapList", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetMapListFilter(string find, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = find;
                System.IAsyncResult _result = base.BeginInvoke("GetMapListFilter", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<string> EndGetMapListFilter(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetMapListFilter", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetMapListCoords(double lon, double lat, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[2];
                _args[0] = lon;
                _args[1] = lat;
                System.IAsyncResult _result = base.BeginInvoke("GetMapListCoords", _args, callback, asyncState);
                return _result;
            }

            public System.Collections.ObjectModel.ObservableCollection<string> EndGetMapListCoords(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetMapListCoords", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetMapUrl(string mapID, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = mapID;
                System.IAsyncResult _result = base.BeginInvoke("GetMapUrl", _args, callback, asyncState);
                return _result;
            }

            public string EndGetMapUrl(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetMapUrl", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginGetXmlUrl(string mapID, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = mapID;
                System.IAsyncResult _result = base.BeginInvoke("GetXmlUrl", _args, callback, asyncState);
                return _result;
            }

            public string EndGetXmlUrl(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetXmlUrl", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginBeginTransaction(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[9];
                _args[0] = rowGuid;
                _args[1] = fileName;
                _args[2] = type;
                _args[3] = latitude;
                _args[4] = longitude;
                _args[5] = altitude;
                _args[6] = author;
                _args[7] = timestamp;
                _args[8] = projectId;
                System.IAsyncResult _result = base.BeginInvoke("BeginTransaction", _args, callback, asyncState);
                return _result;
            }

            public string EndBeginTransaction(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("BeginTransaction", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginEncodeFile(byte[] data, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[1];
                _args[0] = data;
                System.IAsyncResult _result = base.BeginInvoke("EncodeFile", _args, callback, asyncState);
                return _result;
            }

            public string EndEncodeFile(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("EncodeFile", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginCommit(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Commit", _args, callback, asyncState);
                return _result;
            }

            public string EndCommit(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Commit", _args, result)));
                return _result;
            }

            public System.IAsyncResult BeginRollback(System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("Rollback", _args, callback, asyncState);
                return _result;
            }

            public void EndRollback(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                base.EndInvoke("Rollback", _args, result);
            }

            public System.IAsyncResult BeginSubmit(string rowGuid, string fileName, string type, float latitude, float longitude, float altitude, string author, string timestamp, int projectId, byte[] data, System.AsyncCallback callback, object asyncState)
            {
                object[] _args = new object[10];
                _args[0] = rowGuid;
                _args[1] = fileName;
                _args[2] = type;
                _args[3] = latitude;
                _args[4] = longitude;
                _args[5] = altitude;
                _args[6] = author;
                _args[7] = timestamp;
                _args[8] = projectId;
                _args[9] = data;
                System.IAsyncResult _result = base.BeginInvoke("Submit", _args, callback, asyncState);
                return _result;
            }

            public string EndSubmit(System.IAsyncResult result)
            {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Submit", _args, result)));
                return _result;
            }
        }
    }
}