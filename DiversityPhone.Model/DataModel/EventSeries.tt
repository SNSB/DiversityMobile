<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ include file="ReactiveModel.ttinclude" #>
<#@ import namespace="System" #>


using System;
using System.Linq;
using ReactiveUI;
using Microsoft.Phone.Data.Linq.Mapping;
using System.Data.Linq; 
using System.Data.Linq.Mapping;
using DiversityPhone;

namespace DiversityPhone.Model
{	
	[Table]
	public class EventSeries : ReactiveObject, IModifyable, ILocationOwner
	{
#pragma warning disable 0169
		[Column(IsVersion = true)]
		private Binary version;
#pragma warning restore 0169

<# Row("int", "SeriesID", RowKind.Key); #>
<# Row("int?", "CollectionSeriesID", RowKind.Nullable); #>   

<# Row("DateTime", "SeriesStart"); #>  
<# Row("DateTime?", "SeriesEnd", RowKind.Nullable | RowKind.NoUpdateCheck); #>     
<# Row("string", "Description"); #>
<# Row("string", "SeriesCode"); #>   
 
<# Row("ModificationState", "ModificationState"); #>
 

        public EventSeries()
        {
            this.Description = string.Empty;
            this.SeriesCode = string.Empty;
            this.SeriesStart = DateTime.Now;
            this.SeriesEnd = null;
            this.SeriesID = 0;
            this.ModificationState = ModificationState.New;            
        }


        

        public static IQueryOperations<EventSeries> Operations
        {
            get;
            private set;
        }

        static EventSeries()
        {
            Operations = new QueryOperations<EventSeries>(
                //Smallerthan
                          (q, es) => q.Where(row => row.SeriesID < es.SeriesID),
                //Equals
                          (q, es) => q.Where(row => row.SeriesID == es.SeriesID),
                //Orderby
                          (q) => q.OrderBy(es => -es.SeriesID),//As EventSeries have negative Values Unlike the other entities in DiversityCollection we need to order by the nagtive value to get the same behaviour
                //FreeKey
                          (q, es) =>
                          {
                              es.SeriesID = QueryOperations<EventSeries>.FindFreeIntKeyUp(q, row => row.SeriesID);//CollectionEventSeries Autoinc-key is lowered by one by default in DiversityCollection. As we need to avoid Synchronisationconflicts we need to count in the other direction.
                          });

            
        }      

		public DBObjectType EntityType
        {
            get { return DBObjectType.EventSeries; }
        }

        public int EntityID
        {
            get { return SeriesID; }
        }
    }	
} 