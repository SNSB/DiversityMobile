<#@ template debug="true" hostSpecific="true" #>
<#@ output extension=".cs" #>
<#@ include file="ReactiveModel.ttinclude" #>
<#@ import namespace="System" #>
<#
   
#>

using System;
using System.Linq;
using ReactiveUI;
using System.Data.Linq;
using System.Data.Linq.Mapping;

namespace DiversityPhone.Model
{	
	[Table]
	public class IdentificationUnitAnalysis : ReactiveObject, IModifyable
	{
#pragma warning disable 0169
		[Column(IsVersion = true)]
		private Binary version;
#pragma warning restore 0169

<# Row("int", "IdentificationUnitAnalysisID", RowKind.Key); #>  

<# Row("int", "UnitID"); #>   
<# Row("int", "AnalysisID"); #> 

<# Row("string", "DisplayText"); #>
<# Row("string", "AnalysisResult"); #>

<# Row("DateTime", "AnalysisDate"); #>
  
<# Row("ModificationState", "ModificationState"); #>

        public IdentificationUnitAnalysis()
        {
            this.ModificationState = ModificationState.New;            
            this.AnalysisDate = DateTime.Now;                      
        }

        public static IQueryOperations<IdentificationUnitAnalysis> Operations
        {
            get;
            private set;
        }

        static IdentificationUnitAnalysis()
        {
            Operations = new QueryOperations<IdentificationUnitAnalysis>(
                //Smallerthan
                          (q, iuan) => q.Where(row => row.IdentificationUnitAnalysisID < iuan.IdentificationUnitAnalysisID),
                //Equals
                          (q, iuan) => q.Where(row => row.IdentificationUnitAnalysisID == iuan.IdentificationUnitAnalysisID),
                //Orderby
                          (q) => q.OrderBy(iuan => iuan.IdentificationUnitAnalysisID),
                //FreeKey
                          (q, iuan) =>
                          {
                              iuan.IdentificationUnitAnalysisID = QueryOperations<IdentificationUnitAnalysis>.FindFreeIntKey(q, row => row.IdentificationUnitAnalysisID);
                          });
        }
    }
}
 
