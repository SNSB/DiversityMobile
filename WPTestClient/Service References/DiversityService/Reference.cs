//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.235
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace WPTestClient.DiversityService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CollectionEvent", Namespace="http://schemas.datacontract.org/2004/07/DiversityService")]
    public partial class CollectionEvent : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CollectingMethodField;
        
        private System.Nullable<System.DateTime> CollectionDateField;
        
        private string CollectionDateCategoryField;
        
        private string CollectionDateSupplementField;
        
        private System.Nullable<byte> CollectionDayField;
        
        private int CollectionEventIDField;
        
        private System.Nullable<byte> CollectionMonthField;
        
        private string CollectionTimeField;
        
        private string CollectionTimeSpanField;
        
        private System.Nullable<short> CollectionYearField;
        
        private string CollectorsEventNumberField;
        
        private string CountryCacheField;
        
        private string DataWithholdingReasonField;
        
        private string HabitatDescriptionField;
        
        private string LocalityDescriptionField;
        
        private string LogCreatedByField;
        
        private System.Nullable<System.DateTime> LogCreatedWhenField;
        
        private string LogUpdatedByField;
        
        private System.Nullable<System.DateTime> LogUpdatedWhenField;
        
        private string NotesField;
        
        private string ReferenceDetailsField;
        
        private string ReferenceTitleField;
        
        private string ReferenceURIField;
        
        private System.Guid RowGUIDField;
        
        private System.Nullable<int> SeriesIDField;
        
        private int VersionField;
        
        private System.Nullable<int> xx_ExpeditionIDField;
        
        private bool xx_IsAvailableField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectingMethod {
            get {
                return this.CollectingMethodField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectingMethodField, value) != true)) {
                    this.CollectingMethodField = value;
                    this.RaisePropertyChanged("CollectingMethod");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> CollectionDate {
            get {
                return this.CollectionDateField;
            }
            set {
                if ((this.CollectionDateField.Equals(value) != true)) {
                    this.CollectionDateField = value;
                    this.RaisePropertyChanged("CollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionDateCategory {
            get {
                return this.CollectionDateCategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionDateCategoryField, value) != true)) {
                    this.CollectionDateCategoryField = value;
                    this.RaisePropertyChanged("CollectionDateCategory");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionDateSupplement {
            get {
                return this.CollectionDateSupplementField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionDateSupplementField, value) != true)) {
                    this.CollectionDateSupplementField = value;
                    this.RaisePropertyChanged("CollectionDateSupplement");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CollectionDay {
            get {
                return this.CollectionDayField;
            }
            set {
                if ((this.CollectionDayField.Equals(value) != true)) {
                    this.CollectionDayField = value;
                    this.RaisePropertyChanged("CollectionDay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionEventID {
            get {
                return this.CollectionEventIDField;
            }
            set {
                if ((this.CollectionEventIDField.Equals(value) != true)) {
                    this.CollectionEventIDField = value;
                    this.RaisePropertyChanged("CollectionEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<byte> CollectionMonth {
            get {
                return this.CollectionMonthField;
            }
            set {
                if ((this.CollectionMonthField.Equals(value) != true)) {
                    this.CollectionMonthField = value;
                    this.RaisePropertyChanged("CollectionMonth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionTime {
            get {
                return this.CollectionTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionTimeField, value) != true)) {
                    this.CollectionTimeField = value;
                    this.RaisePropertyChanged("CollectionTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectionTimeSpan {
            get {
                return this.CollectionTimeSpanField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectionTimeSpanField, value) != true)) {
                    this.CollectionTimeSpanField = value;
                    this.RaisePropertyChanged("CollectionTimeSpan");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<short> CollectionYear {
            get {
                return this.CollectionYearField;
            }
            set {
                if ((this.CollectionYearField.Equals(value) != true)) {
                    this.CollectionYearField = value;
                    this.RaisePropertyChanged("CollectionYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollectorsEventNumber {
            get {
                return this.CollectorsEventNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.CollectorsEventNumberField, value) != true)) {
                    this.CollectorsEventNumberField = value;
                    this.RaisePropertyChanged("CollectorsEventNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCache {
            get {
                return this.CountryCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCacheField, value) != true)) {
                    this.CountryCacheField = value;
                    this.RaisePropertyChanged("CountryCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataWithholdingReason {
            get {
                return this.DataWithholdingReasonField;
            }
            set {
                if ((object.ReferenceEquals(this.DataWithholdingReasonField, value) != true)) {
                    this.DataWithholdingReasonField = value;
                    this.RaisePropertyChanged("DataWithholdingReason");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HabitatDescription {
            get {
                return this.HabitatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.HabitatDescriptionField, value) != true)) {
                    this.HabitatDescriptionField = value;
                    this.RaisePropertyChanged("HabitatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalityDescription {
            get {
                return this.LocalityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityDescriptionField, value) != true)) {
                    this.LocalityDescriptionField = value;
                    this.RaisePropertyChanged("LocalityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogCreatedBy {
            get {
                return this.LogCreatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LogCreatedByField, value) != true)) {
                    this.LogCreatedByField = value;
                    this.RaisePropertyChanged("LogCreatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogCreatedWhen {
            get {
                return this.LogCreatedWhenField;
            }
            set {
                if ((this.LogCreatedWhenField.Equals(value) != true)) {
                    this.LogCreatedWhenField = value;
                    this.RaisePropertyChanged("LogCreatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LogUpdatedBy {
            get {
                return this.LogUpdatedByField;
            }
            set {
                if ((object.ReferenceEquals(this.LogUpdatedByField, value) != true)) {
                    this.LogUpdatedByField = value;
                    this.RaisePropertyChanged("LogUpdatedBy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceDetails {
            get {
                return this.ReferenceDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceDetailsField, value) != true)) {
                    this.ReferenceDetailsField = value;
                    this.RaisePropertyChanged("ReferenceDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceTitle {
            get {
                return this.ReferenceTitleField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceTitleField, value) != true)) {
                    this.ReferenceTitleField = value;
                    this.RaisePropertyChanged("ReferenceTitle");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReferenceURI {
            get {
                return this.ReferenceURIField;
            }
            set {
                if ((object.ReferenceEquals(this.ReferenceURIField, value) != true)) {
                    this.ReferenceURIField = value;
                    this.RaisePropertyChanged("ReferenceURI");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RowGUID {
            get {
                return this.RowGUIDField;
            }
            set {
                if ((this.RowGUIDField.Equals(value) != true)) {
                    this.RowGUIDField = value;
                    this.RaisePropertyChanged("RowGUID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeriesID {
            get {
                return this.SeriesIDField;
            }
            set {
                if ((this.SeriesIDField.Equals(value) != true)) {
                    this.SeriesIDField = value;
                    this.RaisePropertyChanged("SeriesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Version {
            get {
                return this.VersionField;
            }
            set {
                if ((this.VersionField.Equals(value) != true)) {
                    this.VersionField = value;
                    this.RaisePropertyChanged("Version");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> xx_ExpeditionID {
            get {
                return this.xx_ExpeditionIDField;
            }
            set {
                if ((this.xx_ExpeditionIDField.Equals(value) != true)) {
                    this.xx_ExpeditionIDField = value;
                    this.RaisePropertyChanged("xx_ExpeditionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool xx_IsAvailable {
            get {
                return this.xx_IsAvailableField;
            }
            set {
                if ((this.xx_IsAvailableField.Equals(value) != true)) {
                    this.xx_IsAvailableField = value;
                    this.RaisePropertyChanged("xx_IsAvailable");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DiversityService.IDiversityService")]
    public interface IDiversityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetEvents", ReplyAction="http://tempuri.org/IDiversityService/GetEventsResponse")]
        System.IAsyncResult BeginGetEvents(int skip, int count, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent> EndGetEvents(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/AddEvent", ReplyAction="http://tempuri.org/IDiversityService/AddEventResponse")]
        System.IAsyncResult BeginAddEvent(WPTestClient.DiversityService.CollectionEvent ev, System.AsyncCallback callback, object asyncState);
        
        void EndAddEvent(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDiversityServiceChannel : WPTestClient.DiversityService.IDiversityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DiversityServiceClient : System.ServiceModel.ClientBase<WPTestClient.DiversityService.IDiversityService>, WPTestClient.DiversityService.IDiversityService {
        
        private BeginOperationDelegate onBeginGetEventsDelegate;
        
        private EndOperationDelegate onEndGetEventsDelegate;
        
        private System.Threading.SendOrPostCallback onGetEventsCompletedDelegate;
        
        private BeginOperationDelegate onBeginAddEventDelegate;
        
        private EndOperationDelegate onEndAddEventDelegate;
        
        private System.Threading.SendOrPostCallback onAddEventCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DiversityServiceClient() {
        }
        
        public DiversityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetEventsCompletedEventArgs> GetEventsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> AddEventCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WPTestClient.DiversityService.IDiversityService.BeginGetEvents(int skip, int count, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetEvents(skip, count, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent> WPTestClient.DiversityService.IDiversityService.EndGetEvents(System.IAsyncResult result) {
            return base.Channel.EndGetEvents(result);
        }
        
        private System.IAsyncResult OnBeginGetEvents(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int skip = ((int)(inValues[0]));
            int count = ((int)(inValues[1]));
            return ((WPTestClient.DiversityService.IDiversityService)(this)).BeginGetEvents(skip, count, callback, asyncState);
        }
        
        private object[] OnEndGetEvents(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent> retVal = ((WPTestClient.DiversityService.IDiversityService)(this)).EndGetEvents(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetEventsCompleted(object state) {
            if ((this.GetEventsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetEventsCompleted(this, new GetEventsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetEventsAsync(int skip, int count) {
            this.GetEventsAsync(skip, count, null);
        }
        
        public void GetEventsAsync(int skip, int count, object userState) {
            if ((this.onBeginGetEventsDelegate == null)) {
                this.onBeginGetEventsDelegate = new BeginOperationDelegate(this.OnBeginGetEvents);
            }
            if ((this.onEndGetEventsDelegate == null)) {
                this.onEndGetEventsDelegate = new EndOperationDelegate(this.OnEndGetEvents);
            }
            if ((this.onGetEventsCompletedDelegate == null)) {
                this.onGetEventsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetEventsCompleted);
            }
            base.InvokeAsync(this.onBeginGetEventsDelegate, new object[] {
                        skip,
                        count}, this.onEndGetEventsDelegate, this.onGetEventsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult WPTestClient.DiversityService.IDiversityService.BeginAddEvent(WPTestClient.DiversityService.CollectionEvent ev, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAddEvent(ev, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void WPTestClient.DiversityService.IDiversityService.EndAddEvent(System.IAsyncResult result) {
            base.Channel.EndAddEvent(result);
        }
        
        private System.IAsyncResult OnBeginAddEvent(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPTestClient.DiversityService.CollectionEvent ev = ((WPTestClient.DiversityService.CollectionEvent)(inValues[0]));
            return ((WPTestClient.DiversityService.IDiversityService)(this)).BeginAddEvent(ev, callback, asyncState);
        }
        
        private object[] OnEndAddEvent(System.IAsyncResult result) {
            ((WPTestClient.DiversityService.IDiversityService)(this)).EndAddEvent(result);
            return null;
        }
        
        private void OnAddEventCompleted(object state) {
            if ((this.AddEventCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AddEventCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AddEventAsync(WPTestClient.DiversityService.CollectionEvent ev) {
            this.AddEventAsync(ev, null);
        }
        
        public void AddEventAsync(WPTestClient.DiversityService.CollectionEvent ev, object userState) {
            if ((this.onBeginAddEventDelegate == null)) {
                this.onBeginAddEventDelegate = new BeginOperationDelegate(this.OnBeginAddEvent);
            }
            if ((this.onEndAddEventDelegate == null)) {
                this.onEndAddEventDelegate = new EndOperationDelegate(this.OnEndAddEvent);
            }
            if ((this.onAddEventCompletedDelegate == null)) {
                this.onAddEventCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAddEventCompleted);
            }
            base.InvokeAsync(this.onBeginAddEventDelegate, new object[] {
                        ev}, this.onEndAddEventDelegate, this.onAddEventCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override WPTestClient.DiversityService.IDiversityService CreateChannel() {
            return new DiversityServiceClientChannel(this);
        }
        
        private class DiversityServiceClientChannel : ChannelBase<WPTestClient.DiversityService.IDiversityService>, WPTestClient.DiversityService.IDiversityService {
            
            public DiversityServiceClientChannel(System.ServiceModel.ClientBase<WPTestClient.DiversityService.IDiversityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetEvents(int skip, int count, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = skip;
                _args[1] = count;
                System.IAsyncResult _result = base.BeginInvoke("GetEvents", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent> EndGetEvents(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent> _result = ((System.Collections.ObjectModel.ObservableCollection<WPTestClient.DiversityService.CollectionEvent>)(base.EndInvoke("GetEvents", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAddEvent(WPTestClient.DiversityService.CollectionEvent ev, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = ev;
                System.IAsyncResult _result = base.BeginInvoke("AddEvent", _args, callback, asyncState);
                return _result;
            }
            
            public void EndAddEvent(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("AddEvent", _args, result);
            }
        }
    }
}
