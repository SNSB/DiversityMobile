#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.235
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LinqToSQL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DiversityCollection_BaseTest")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnCreated();
    partial void InsertIdentificationUnit(IdentificationUnit instance);
    partial void UpdateIdentificationUnit(IdentificationUnit instance);
    partial void DeleteIdentificationUnit(IdentificationUnit instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::LinqToSQL.Properties.Settings.Default.DiversityCollection_BaseTestConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<IdentificationUnit> IdentificationUnit
		{
			get
			{
				return this.GetTable<IdentificationUnit>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IdentificationUnit")]
	public partial class IdentificationUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CollectionSpecimenID;
		
		private int _IdentificationUnitID;
		
		private string _LastIdentificationCache;
		
		private string _FamilyCache;
		
		private string _OrderCache;
		
		private string _TaxonomicGroup;
		
		private System.Nullable<bool> _OnlyObserved;
		
		private System.Nullable<int> _RelatedUnitID;
		
		private string _RelationType;
		
		private string _ColonisedSubstratePart;
		
		private string _LifeStage;
		
		private string _Gender;
		
		private System.Nullable<short> _NumberOfUnits;
		
		private string _ExsiccataNumber;
		
		private System.Nullable<short> _ExsiccataIdentification;
		
		private string _UnitIdentifier;
		
		private string _UnitDescription;
		
		private string _Circumstances;
		
		private short _DisplayOrder;
		
		private string _Notes;
		
		private System.Nullable<System.DateTime> _LogCreatedWhen;
		
		private string _LogCreatedBy;
		
		private System.Nullable<System.DateTime> _LogUpdatedWhen;
		
		private string _LogUpdatedBy;
		
		private System.Nullable<int> _xx_SubstrateID;
		
		private string _xx_SubstrateRelationType;
		
		private System.Nullable<int> _xx_SpecimenPartID;
		
		private System.Nullable<int> _xx_NewUnitID;
		
		private System.Nullable<int> _xx_AlteUnitID;
		
		private System.Guid _RowGUID;
		
    #region Definitionen der Erweiterungsmethoden
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCollectionSpecimenIDChanging(int value);
    partial void OnCollectionSpecimenIDChanged();
    partial void OnIdentificationUnitIDChanging(int value);
    partial void OnIdentificationUnitIDChanged();
    partial void OnLastIdentificationCacheChanging(string value);
    partial void OnLastIdentificationCacheChanged();
    partial void OnFamilyCacheChanging(string value);
    partial void OnFamilyCacheChanged();
    partial void OnOrderCacheChanging(string value);
    partial void OnOrderCacheChanged();
    partial void OnTaxonomicGroupChanging(string value);
    partial void OnTaxonomicGroupChanged();
    partial void OnOnlyObservedChanging(System.Nullable<bool> value);
    partial void OnOnlyObservedChanged();
    partial void OnRelatedUnitIDChanging(System.Nullable<int> value);
    partial void OnRelatedUnitIDChanged();
    partial void OnRelationTypeChanging(string value);
    partial void OnRelationTypeChanged();
    partial void OnColonisedSubstratePartChanging(string value);
    partial void OnColonisedSubstratePartChanged();
    partial void OnLifeStageChanging(string value);
    partial void OnLifeStageChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnNumberOfUnitsChanging(System.Nullable<short> value);
    partial void OnNumberOfUnitsChanged();
    partial void OnExsiccataNumberChanging(string value);
    partial void OnExsiccataNumberChanged();
    partial void OnExsiccataIdentificationChanging(System.Nullable<short> value);
    partial void OnExsiccataIdentificationChanged();
    partial void OnUnitIdentifierChanging(string value);
    partial void OnUnitIdentifierChanged();
    partial void OnUnitDescriptionChanging(string value);
    partial void OnUnitDescriptionChanged();
    partial void OnCircumstancesChanging(string value);
    partial void OnCircumstancesChanged();
    partial void OnDisplayOrderChanging(short value);
    partial void OnDisplayOrderChanged();
    partial void OnNotesChanging(string value);
    partial void OnNotesChanged();
    partial void OnLogCreatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnLogCreatedWhenChanged();
    partial void OnLogCreatedByChanging(string value);
    partial void OnLogCreatedByChanged();
    partial void OnLogUpdatedWhenChanging(System.Nullable<System.DateTime> value);
    partial void OnLogUpdatedWhenChanged();
    partial void OnLogUpdatedByChanging(string value);
    partial void OnLogUpdatedByChanged();
    partial void Onxx_SubstrateIDChanging(System.Nullable<int> value);
    partial void Onxx_SubstrateIDChanged();
    partial void Onxx_SubstrateRelationTypeChanging(string value);
    partial void Onxx_SubstrateRelationTypeChanged();
    partial void Onxx_SpecimenPartIDChanging(System.Nullable<int> value);
    partial void Onxx_SpecimenPartIDChanged();
    partial void Onxx_NewUnitIDChanging(System.Nullable<int> value);
    partial void Onxx_NewUnitIDChanged();
    partial void Onxx_AlteUnitIDChanging(System.Nullable<int> value);
    partial void Onxx_AlteUnitIDChanged();
    partial void OnRowGUIDChanging(System.Guid value);
    partial void OnRowGUIDChanged();
    #endregion
		
		public IdentificationUnit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CollectionSpecimenID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int CollectionSpecimenID
		{
			get
			{
				return this._CollectionSpecimenID;
			}
			set
			{
				if ((this._CollectionSpecimenID != value))
				{
					this.OnCollectionSpecimenIDChanging(value);
					this.SendPropertyChanging();
					this._CollectionSpecimenID = value;
					this.SendPropertyChanged("CollectionSpecimenID");
					this.OnCollectionSpecimenIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdentificationUnitID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdentificationUnitID
		{
			get
			{
				return this._IdentificationUnitID;
			}
			set
			{
				if ((this._IdentificationUnitID != value))
				{
					this.OnIdentificationUnitIDChanging(value);
					this.SendPropertyChanging();
					this._IdentificationUnitID = value;
					this.SendPropertyChanged("IdentificationUnitID");
					this.OnIdentificationUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastIdentificationCache", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
		public string LastIdentificationCache
		{
			get
			{
				return this._LastIdentificationCache;
			}
			set
			{
				if ((this._LastIdentificationCache != value))
				{
					this.OnLastIdentificationCacheChanging(value);
					this.SendPropertyChanging();
					this._LastIdentificationCache = value;
					this.SendPropertyChanged("LastIdentificationCache");
					this.OnLastIdentificationCacheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FamilyCache", DbType="NVarChar(255)")]
		public string FamilyCache
		{
			get
			{
				return this._FamilyCache;
			}
			set
			{
				if ((this._FamilyCache != value))
				{
					this.OnFamilyCacheChanging(value);
					this.SendPropertyChanging();
					this._FamilyCache = value;
					this.SendPropertyChanged("FamilyCache");
					this.OnFamilyCacheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrderCache", DbType="NVarChar(255)")]
		public string OrderCache
		{
			get
			{
				return this._OrderCache;
			}
			set
			{
				if ((this._OrderCache != value))
				{
					this.OnOrderCacheChanging(value);
					this.SendPropertyChanging();
					this._OrderCache = value;
					this.SendPropertyChanged("OrderCache");
					this.OnOrderCacheChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TaxonomicGroup", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TaxonomicGroup
		{
			get
			{
				return this._TaxonomicGroup;
			}
			set
			{
				if ((this._TaxonomicGroup != value))
				{
					this.OnTaxonomicGroupChanging(value);
					this.SendPropertyChanging();
					this._TaxonomicGroup = value;
					this.SendPropertyChanged("TaxonomicGroup");
					this.OnTaxonomicGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OnlyObserved", DbType="Bit")]
		public System.Nullable<bool> OnlyObserved
		{
			get
			{
				return this._OnlyObserved;
			}
			set
			{
				if ((this._OnlyObserved != value))
				{
					this.OnOnlyObservedChanging(value);
					this.SendPropertyChanging();
					this._OnlyObserved = value;
					this.SendPropertyChanged("OnlyObserved");
					this.OnOnlyObservedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelatedUnitID", DbType="Int")]
		public System.Nullable<int> RelatedUnitID
		{
			get
			{
				return this._RelatedUnitID;
			}
			set
			{
				if ((this._RelatedUnitID != value))
				{
					this.OnRelatedUnitIDChanging(value);
					this.SendPropertyChanging();
					this._RelatedUnitID = value;
					this.SendPropertyChanged("RelatedUnitID");
					this.OnRelatedUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RelationType", DbType="NVarChar(50)")]
		public string RelationType
		{
			get
			{
				return this._RelationType;
			}
			set
			{
				if ((this._RelationType != value))
				{
					this.OnRelationTypeChanging(value);
					this.SendPropertyChanging();
					this._RelationType = value;
					this.SendPropertyChanged("RelationType");
					this.OnRelationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ColonisedSubstratePart", DbType="NVarChar(255)")]
		public string ColonisedSubstratePart
		{
			get
			{
				return this._ColonisedSubstratePart;
			}
			set
			{
				if ((this._ColonisedSubstratePart != value))
				{
					this.OnColonisedSubstratePartChanging(value);
					this.SendPropertyChanging();
					this._ColonisedSubstratePart = value;
					this.SendPropertyChanged("ColonisedSubstratePart");
					this.OnColonisedSubstratePartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LifeStage", DbType="NVarChar(255)")]
		public string LifeStage
		{
			get
			{
				return this._LifeStage;
			}
			set
			{
				if ((this._LifeStage != value))
				{
					this.OnLifeStageChanging(value);
					this.SendPropertyChanging();
					this._LifeStage = value;
					this.SendPropertyChanged("LifeStage");
					this.OnLifeStageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(50)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumberOfUnits", DbType="SmallInt")]
		public System.Nullable<short> NumberOfUnits
		{
			get
			{
				return this._NumberOfUnits;
			}
			set
			{
				if ((this._NumberOfUnits != value))
				{
					this.OnNumberOfUnitsChanging(value);
					this.SendPropertyChanging();
					this._NumberOfUnits = value;
					this.SendPropertyChanged("NumberOfUnits");
					this.OnNumberOfUnitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExsiccataNumber", DbType="NVarChar(50)")]
		public string ExsiccataNumber
		{
			get
			{
				return this._ExsiccataNumber;
			}
			set
			{
				if ((this._ExsiccataNumber != value))
				{
					this.OnExsiccataNumberChanging(value);
					this.SendPropertyChanging();
					this._ExsiccataNumber = value;
					this.SendPropertyChanged("ExsiccataNumber");
					this.OnExsiccataNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExsiccataIdentification", DbType="SmallInt")]
		public System.Nullable<short> ExsiccataIdentification
		{
			get
			{
				return this._ExsiccataIdentification;
			}
			set
			{
				if ((this._ExsiccataIdentification != value))
				{
					this.OnExsiccataIdentificationChanging(value);
					this.SendPropertyChanging();
					this._ExsiccataIdentification = value;
					this.SendPropertyChanged("ExsiccataIdentification");
					this.OnExsiccataIdentificationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitIdentifier", DbType="NVarChar(50)")]
		public string UnitIdentifier
		{
			get
			{
				return this._UnitIdentifier;
			}
			set
			{
				if ((this._UnitIdentifier != value))
				{
					this.OnUnitIdentifierChanging(value);
					this.SendPropertyChanging();
					this._UnitIdentifier = value;
					this.SendPropertyChanged("UnitIdentifier");
					this.OnUnitIdentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitDescription", DbType="NVarChar(50)")]
		public string UnitDescription
		{
			get
			{
				return this._UnitDescription;
			}
			set
			{
				if ((this._UnitDescription != value))
				{
					this.OnUnitDescriptionChanging(value);
					this.SendPropertyChanging();
					this._UnitDescription = value;
					this.SendPropertyChanged("UnitDescription");
					this.OnUnitDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Circumstances", DbType="NVarChar(50)")]
		public string Circumstances
		{
			get
			{
				return this._Circumstances;
			}
			set
			{
				if ((this._Circumstances != value))
				{
					this.OnCircumstancesChanging(value);
					this.SendPropertyChanging();
					this._Circumstances = value;
					this.SendPropertyChanged("Circumstances");
					this.OnCircumstancesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DisplayOrder", DbType="SmallInt NOT NULL")]
		public short DisplayOrder
		{
			get
			{
				return this._DisplayOrder;
			}
			set
			{
				if ((this._DisplayOrder != value))
				{
					this.OnDisplayOrderChanging(value);
					this.SendPropertyChanging();
					this._DisplayOrder = value;
					this.SendPropertyChanged("DisplayOrder");
					this.OnDisplayOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Notes", DbType="NVarChar(MAX)")]
		public string Notes
		{
			get
			{
				return this._Notes;
			}
			set
			{
				if ((this._Notes != value))
				{
					this.OnNotesChanging(value);
					this.SendPropertyChanging();
					this._Notes = value;
					this.SendPropertyChanged("Notes");
					this.OnNotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCreatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogCreatedWhen
		{
			get
			{
				return this._LogCreatedWhen;
			}
			set
			{
				if ((this._LogCreatedWhen != value))
				{
					this.OnLogCreatedWhenChanging(value);
					this.SendPropertyChanging();
					this._LogCreatedWhen = value;
					this.SendPropertyChanged("LogCreatedWhen");
					this.OnLogCreatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogCreatedBy", DbType="NVarChar(50)")]
		public string LogCreatedBy
		{
			get
			{
				return this._LogCreatedBy;
			}
			set
			{
				if ((this._LogCreatedBy != value))
				{
					this.OnLogCreatedByChanging(value);
					this.SendPropertyChanging();
					this._LogCreatedBy = value;
					this.SendPropertyChanged("LogCreatedBy");
					this.OnLogCreatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUpdatedWhen", DbType="DateTime")]
		public System.Nullable<System.DateTime> LogUpdatedWhen
		{
			get
			{
				return this._LogUpdatedWhen;
			}
			set
			{
				if ((this._LogUpdatedWhen != value))
				{
					this.OnLogUpdatedWhenChanging(value);
					this.SendPropertyChanging();
					this._LogUpdatedWhen = value;
					this.SendPropertyChanged("LogUpdatedWhen");
					this.OnLogUpdatedWhenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogUpdatedBy", DbType="NVarChar(50)")]
		public string LogUpdatedBy
		{
			get
			{
				return this._LogUpdatedBy;
			}
			set
			{
				if ((this._LogUpdatedBy != value))
				{
					this.OnLogUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._LogUpdatedBy = value;
					this.SendPropertyChanged("LogUpdatedBy");
					this.OnLogUpdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xx_SubstrateID", DbType="Int")]
		public System.Nullable<int> xx_SubstrateID
		{
			get
			{
				return this._xx_SubstrateID;
			}
			set
			{
				if ((this._xx_SubstrateID != value))
				{
					this.Onxx_SubstrateIDChanging(value);
					this.SendPropertyChanging();
					this._xx_SubstrateID = value;
					this.SendPropertyChanged("xx_SubstrateID");
					this.Onxx_SubstrateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xx_SubstrateRelationType", DbType="NVarChar(50)")]
		public string xx_SubstrateRelationType
		{
			get
			{
				return this._xx_SubstrateRelationType;
			}
			set
			{
				if ((this._xx_SubstrateRelationType != value))
				{
					this.Onxx_SubstrateRelationTypeChanging(value);
					this.SendPropertyChanging();
					this._xx_SubstrateRelationType = value;
					this.SendPropertyChanged("xx_SubstrateRelationType");
					this.Onxx_SubstrateRelationTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xx_SpecimenPartID", DbType="Int")]
		public System.Nullable<int> xx_SpecimenPartID
		{
			get
			{
				return this._xx_SpecimenPartID;
			}
			set
			{
				if ((this._xx_SpecimenPartID != value))
				{
					this.Onxx_SpecimenPartIDChanging(value);
					this.SendPropertyChanging();
					this._xx_SpecimenPartID = value;
					this.SendPropertyChanged("xx_SpecimenPartID");
					this.Onxx_SpecimenPartIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xx_NewUnitID", DbType="Int")]
		public System.Nullable<int> xx_NewUnitID
		{
			get
			{
				return this._xx_NewUnitID;
			}
			set
			{
				if ((this._xx_NewUnitID != value))
				{
					this.Onxx_NewUnitIDChanging(value);
					this.SendPropertyChanging();
					this._xx_NewUnitID = value;
					this.SendPropertyChanged("xx_NewUnitID");
					this.Onxx_NewUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_xx_AlteUnitID", DbType="Int")]
		public System.Nullable<int> xx_AlteUnitID
		{
			get
			{
				return this._xx_AlteUnitID;
			}
			set
			{
				if ((this._xx_AlteUnitID != value))
				{
					this.Onxx_AlteUnitIDChanging(value);
					this.SendPropertyChanging();
					this._xx_AlteUnitID = value;
					this.SendPropertyChanged("xx_AlteUnitID");
					this.Onxx_AlteUnitIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RowGUID", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid RowGUID
		{
			get
			{
				return this._RowGUID;
			}
			set
			{
				if ((this._RowGUID != value))
				{
					this.OnRowGUIDChanging(value);
					this.SendPropertyChanging();
					this._RowGUID = value;
					this.SendPropertyChanged("RowGUID");
					this.OnRowGUIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
