//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.235
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DiversityPhone.DiversityService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSeries", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.SimpleModel")]
    public partial class EventSeries : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int SeriesIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SeriesID {
            get {
                return this.SeriesIDField;
            }
            set {
                if ((this.SeriesIDField.Equals(value) != true)) {
                    this.SeriesIDField = value;
                    this.RaisePropertyChanged("SeriesID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DiversityService.IDiversityService")]
    public interface IDiversityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetSeriesByDescription", ReplyAction="http://tempuri.org/IDiversityService/GetSeriesByDescriptionResponse")]
        System.IAsyncResult BeginGetSeriesByDescription(string description, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> EndGetSeriesByDescription(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDiversityServiceChannel : DiversityPhone.DiversityService.IDiversityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSeriesByDescriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSeriesByDescriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DiversityServiceClient : System.ServiceModel.ClientBase<DiversityPhone.DiversityService.IDiversityService>, DiversityPhone.DiversityService.IDiversityService {
        
        private BeginOperationDelegate onBeginGetSeriesByDescriptionDelegate;
        
        private EndOperationDelegate onEndGetSeriesByDescriptionDelegate;
        
        private System.Threading.SendOrPostCallback onGetSeriesByDescriptionCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DiversityServiceClient() {
        }
        
        public DiversityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSeriesByDescriptionCompletedEventArgs> GetSeriesByDescriptionCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.DiversityService.IDiversityService.BeginGetSeriesByDescription(string description, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSeriesByDescription(description, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> DiversityPhone.DiversityService.IDiversityService.EndGetSeriesByDescription(System.IAsyncResult result) {
            return base.Channel.EndGetSeriesByDescription(result);
        }
        
        private System.IAsyncResult OnBeginGetSeriesByDescription(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string description = ((string)(inValues[0]));
            return ((DiversityPhone.DiversityService.IDiversityService)(this)).BeginGetSeriesByDescription(description, callback, asyncState);
        }
        
        private object[] OnEndGetSeriesByDescription(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> retVal = ((DiversityPhone.DiversityService.IDiversityService)(this)).EndGetSeriesByDescription(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSeriesByDescriptionCompleted(object state) {
            if ((this.GetSeriesByDescriptionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSeriesByDescriptionCompleted(this, new GetSeriesByDescriptionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSeriesByDescriptionAsync(string description) {
            this.GetSeriesByDescriptionAsync(description, null);
        }
        
        public void GetSeriesByDescriptionAsync(string description, object userState) {
            if ((this.onBeginGetSeriesByDescriptionDelegate == null)) {
                this.onBeginGetSeriesByDescriptionDelegate = new BeginOperationDelegate(this.OnBeginGetSeriesByDescription);
            }
            if ((this.onEndGetSeriesByDescriptionDelegate == null)) {
                this.onEndGetSeriesByDescriptionDelegate = new EndOperationDelegate(this.OnEndGetSeriesByDescription);
            }
            if ((this.onGetSeriesByDescriptionCompletedDelegate == null)) {
                this.onGetSeriesByDescriptionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSeriesByDescriptionCompleted);
            }
            base.InvokeAsync(this.onBeginGetSeriesByDescriptionDelegate, new object[] {
                        description}, this.onEndGetSeriesByDescriptionDelegate, this.onGetSeriesByDescriptionCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DiversityPhone.DiversityService.IDiversityService CreateChannel() {
            return new DiversityServiceClientChannel(this);
        }
        
        private class DiversityServiceClientChannel : ChannelBase<DiversityPhone.DiversityService.IDiversityService>, DiversityPhone.DiversityService.IDiversityService {
            
            public DiversityServiceClientChannel(System.ServiceModel.ClientBase<DiversityPhone.DiversityService.IDiversityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSeriesByDescription(string description, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = description;
                System.IAsyncResult _result = base.BeginInvoke("GetSeriesByDescription", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> EndGetSeriesByDescription(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.DiversityService.EventSeries>)(base.EndInvoke("GetSeriesByDescription", _args, result)));
                return _result;
            }
        }
    }
}
