//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.239
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace DiversityPhone.Service {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserProfile", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class UserProfile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AgentNameField;
        
        private string AgentUriField;
        
        private string LoginNameField;
        
        private string PasswordField;
        
        private int ProjectIDField;
        
        private bool RecordGeoPositionField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentName {
            get {
                return this.AgentNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentNameField, value) != true)) {
                    this.AgentNameField = value;
                    this.RaisePropertyChanged("AgentName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AgentUri {
            get {
                return this.AgentUriField;
            }
            set {
                if ((object.ReferenceEquals(this.AgentUriField, value) != true)) {
                    this.AgentUriField = value;
                    this.RaisePropertyChanged("AgentUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginName {
            get {
                return this.LoginNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginNameField, value) != true)) {
                    this.LoginNameField = value;
                    this.RaisePropertyChanged("LoginName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool RecordGeoPosition {
            get {
                return this.RecordGeoPositionField;
            }
            set {
                if ((this.RecordGeoPositionField.Equals(value) != true)) {
                    this.RecordGeoPositionField = value;
                    this.RaisePropertyChanged("RecordGeoPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Project", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Project : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DescriptionField;
        
        private string NameField;
        
        private int ProjectIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProjectID {
            get {
                return this.ProjectIDField;
            }
            set {
                if ((this.ProjectIDField.Equals(value) != true)) {
                    this.ProjectIDField = value;
                    this.RaisePropertyChanged("ProjectID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TermList", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class TermList : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string DisplayTextField;
        
        private int ListIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ListID {
            get {
                return this.ListIDField;
            }
            set {
                if ((this.ListIDField.Equals(value) != true)) {
                    this.ListIDField = value;
                    this.RaisePropertyChanged("ListID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaxonName", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class TaxonName : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string GenusOrSupragenicField;
        
        private string InfraspecificEpithetField;
        
        private string SpeciesEpithetField;
        
        private string SynonymyField;
        
        private string TaxonNameCacheField;
        
        private string TaxonNameSinAuthField;
        
        private string URIField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GenusOrSupragenic {
            get {
                return this.GenusOrSupragenicField;
            }
            set {
                if ((object.ReferenceEquals(this.GenusOrSupragenicField, value) != true)) {
                    this.GenusOrSupragenicField = value;
                    this.RaisePropertyChanged("GenusOrSupragenic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InfraspecificEpithet {
            get {
                return this.InfraspecificEpithetField;
            }
            set {
                if ((object.ReferenceEquals(this.InfraspecificEpithetField, value) != true)) {
                    this.InfraspecificEpithetField = value;
                    this.RaisePropertyChanged("InfraspecificEpithet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SpeciesEpithet {
            get {
                return this.SpeciesEpithetField;
            }
            set {
                if ((object.ReferenceEquals(this.SpeciesEpithetField, value) != true)) {
                    this.SpeciesEpithetField = value;
                    this.RaisePropertyChanged("SpeciesEpithet");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Synonymy {
            get {
                return this.SynonymyField;
            }
            set {
                if ((object.ReferenceEquals(this.SynonymyField, value) != true)) {
                    this.SynonymyField = value;
                    this.RaisePropertyChanged("Synonymy");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonNameCache {
            get {
                return this.TaxonNameCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonNameCacheField, value) != true)) {
                    this.TaxonNameCacheField = value;
                    this.RaisePropertyChanged("TaxonNameCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonNameSinAuth {
            get {
                return this.TaxonNameSinAuthField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonNameSinAuthField, value) != true)) {
                    this.TaxonNameSinAuthField = value;
                    this.RaisePropertyChanged("TaxonNameSinAuth");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string URI {
            get {
                return this.URIField;
            }
            set {
                if ((object.ReferenceEquals(this.URIField, value) != true)) {
                    this.URIField = value;
                    this.RaisePropertyChanged("URI");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Term", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Term : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string CodeField;
        
        private string DescriptionField;
        
        private string DisplayTextField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private string ParentCodeField;
        
        private int SourceIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Code {
            get {
                return this.CodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CodeField, value) != true)) {
                    this.CodeField = value;
                    this.RaisePropertyChanged("Code");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentCode {
            get {
                return this.ParentCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentCodeField, value) != true)) {
                    this.ParentCodeField = value;
                    this.RaisePropertyChanged("ParentCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SourceID {
            get {
                return this.SourceIDField;
            }
            set {
                if ((this.SourceIDField.Equals(value) != true)) {
                    this.SourceIDField = value;
                    this.RaisePropertyChanged("SourceID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnalysisResult", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class AnalysisResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AnalysisIDField;
        
        private string DescriptionField;
        
        private string DisplayTextField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private string NotesField;
        
        private string ResultField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisID {
            get {
                return this.AnalysisIDField;
            }
            set {
                if ((this.AnalysisIDField.Equals(value) != true)) {
                    this.AnalysisIDField = value;
                    this.RaisePropertyChanged("AnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Analysis", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Analysis : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AnalysisIDField;
        
        private string DescriptionField;
        
        private string DisplayTextField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private string MeasurementUnitField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AnalysisID {
            get {
                return this.AnalysisIDField;
            }
            set {
                if ((this.AnalysisIDField.Equals(value) != true)) {
                    this.AnalysisIDField = value;
                    this.RaisePropertyChanged("AnalysisID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MeasurementUnit {
            get {
                return this.MeasurementUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MeasurementUnitField, value) != true)) {
                    this.MeasurementUnitField = value;
                    this.RaisePropertyChanged("MeasurementUnit");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="PropertyName", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class PropertyName : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BroaderTermIDField;
        
        private string DisplayTextField;
        
        private string HierarchyCacheField;
        
        private int PropertyIDField;
        
        private string PropertyUriField;
        
        private int TermIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BroaderTermID {
            get {
                return this.BroaderTermIDField;
            }
            set {
                if ((this.BroaderTermIDField.Equals(value) != true)) {
                    this.BroaderTermIDField = value;
                    this.RaisePropertyChanged("BroaderTermID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DisplayText {
            get {
                return this.DisplayTextField;
            }
            set {
                if ((object.ReferenceEquals(this.DisplayTextField, value) != true)) {
                    this.DisplayTextField = value;
                    this.RaisePropertyChanged("DisplayText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HierarchyCache {
            get {
                return this.HierarchyCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.HierarchyCacheField, value) != true)) {
                    this.HierarchyCacheField = value;
                    this.RaisePropertyChanged("HierarchyCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PropertyID {
            get {
                return this.PropertyIDField;
            }
            set {
                if ((this.PropertyIDField.Equals(value) != true)) {
                    this.PropertyIDField = value;
                    this.RaisePropertyChanged("PropertyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PropertyUri {
            get {
                return this.PropertyUriField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyUriField, value) != true)) {
                    this.PropertyUriField = value;
                    this.RaisePropertyChanged("PropertyUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TermID {
            get {
                return this.TermIDField;
            }
            set {
                if ((this.TermIDField.Equals(value) != true)) {
                    this.TermIDField = value;
                    this.RaisePropertyChanged("TermID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HierarchySection", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class HierarchySection : object, System.ComponentModel.INotifyPropertyChanged {
        
        private DiversityPhone.Service.Event EventField;
        
        private System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.IdentificationUnit> IdentificationUnitsField;
        
        private System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Specimen> SpecimenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DiversityPhone.Service.Event Event {
            get {
                return this.EventField;
            }
            set {
                if ((object.ReferenceEquals(this.EventField, value) != true)) {
                    this.EventField = value;
                    this.RaisePropertyChanged("Event");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.IdentificationUnit> IdentificationUnits {
            get {
                return this.IdentificationUnitsField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificationUnitsField, value) != true)) {
                    this.IdentificationUnitsField = value;
                    this.RaisePropertyChanged("IdentificationUnits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Specimen> Specimen {
            get {
                return this.SpecimenField;
            }
            set {
                if ((object.ReferenceEquals(this.SpecimenField, value) != true)) {
                    this.SpecimenField = value;
                    this.RaisePropertyChanged("Specimen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Event : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AltitudeField;
        
        private System.DateTime CollectionDateField;
        
        private System.DateTime DeterminationDateField;
        
        private int EventIDField;
        
        private string HabitatDescriptionField;
        
        private double LatitudeField;
        
        private string LocalityDescriptionField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private double LongitudeField;
        
        private System.Nullable<int> SeriesIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CollectionDate {
            get {
                return this.CollectionDateField;
            }
            set {
                if ((this.CollectionDateField.Equals(value) != true)) {
                    this.CollectionDateField = value;
                    this.RaisePropertyChanged("CollectionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DeterminationDate {
            get {
                return this.DeterminationDateField;
            }
            set {
                if ((this.DeterminationDateField.Equals(value) != true)) {
                    this.DeterminationDateField = value;
                    this.RaisePropertyChanged("DeterminationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EventID {
            get {
                return this.EventIDField;
            }
            set {
                if ((this.EventIDField.Equals(value) != true)) {
                    this.EventIDField = value;
                    this.RaisePropertyChanged("EventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HabitatDescription {
            get {
                return this.HabitatDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.HabitatDescriptionField, value) != true)) {
                    this.HabitatDescriptionField = value;
                    this.RaisePropertyChanged("HabitatDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LocalityDescription {
            get {
                return this.LocalityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.LocalityDescriptionField, value) != true)) {
                    this.LocalityDescriptionField = value;
                    this.RaisePropertyChanged("LocalityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SeriesID {
            get {
                return this.SeriesIDField;
            }
            set {
                if ((this.SeriesIDField.Equals(value) != true)) {
                    this.SeriesIDField = value;
                    this.RaisePropertyChanged("SeriesID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="IdentificationUnit", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class IdentificationUnit : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double AltitudeField;
        
        private System.DateTime AnalysisDateField;
        
        private string ColonisedSubstratePartField;
        
        private string FamilyCacheField;
        
        private string GenderField;
        
        private string IdentificationUriField;
        
        private string LastIdentificationCacheField;
        
        private double LatitudeField;
        
        private string LifeStageField;
        
        private System.DateTime LogUpdatedWhenField;
        
        private double LongitudeField;
        
        private bool OnlyObservedField;
        
        private string OrderCacheField;
        
        private System.Nullable<int> RelatedUnitIDField;
        
        private string RelationTypeField;
        
        private int SpecimenIDField;
        
        private string TaxonomicGroupField;
        
        private int UnitIDField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Altitude {
            get {
                return this.AltitudeField;
            }
            set {
                if ((this.AltitudeField.Equals(value) != true)) {
                    this.AltitudeField = value;
                    this.RaisePropertyChanged("Altitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime AnalysisDate {
            get {
                return this.AnalysisDateField;
            }
            set {
                if ((this.AnalysisDateField.Equals(value) != true)) {
                    this.AnalysisDateField = value;
                    this.RaisePropertyChanged("AnalysisDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ColonisedSubstratePart {
            get {
                return this.ColonisedSubstratePartField;
            }
            set {
                if ((object.ReferenceEquals(this.ColonisedSubstratePartField, value) != true)) {
                    this.ColonisedSubstratePartField = value;
                    this.RaisePropertyChanged("ColonisedSubstratePart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FamilyCache {
            get {
                return this.FamilyCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.FamilyCacheField, value) != true)) {
                    this.FamilyCacheField = value;
                    this.RaisePropertyChanged("FamilyCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IdentificationUri {
            get {
                return this.IdentificationUriField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentificationUriField, value) != true)) {
                    this.IdentificationUriField = value;
                    this.RaisePropertyChanged("IdentificationUri");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastIdentificationCache {
            get {
                return this.LastIdentificationCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.LastIdentificationCacheField, value) != true)) {
                    this.LastIdentificationCacheField = value;
                    this.RaisePropertyChanged("LastIdentificationCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Latitude {
            get {
                return this.LatitudeField;
            }
            set {
                if ((this.LatitudeField.Equals(value) != true)) {
                    this.LatitudeField = value;
                    this.RaisePropertyChanged("Latitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LifeStage {
            get {
                return this.LifeStageField;
            }
            set {
                if ((object.ReferenceEquals(this.LifeStageField, value) != true)) {
                    this.LifeStageField = value;
                    this.RaisePropertyChanged("LifeStage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Longitude {
            get {
                return this.LongitudeField;
            }
            set {
                if ((this.LongitudeField.Equals(value) != true)) {
                    this.LongitudeField = value;
                    this.RaisePropertyChanged("Longitude");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool OnlyObserved {
            get {
                return this.OnlyObservedField;
            }
            set {
                if ((this.OnlyObservedField.Equals(value) != true)) {
                    this.OnlyObservedField = value;
                    this.RaisePropertyChanged("OnlyObserved");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderCache {
            get {
                return this.OrderCacheField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderCacheField, value) != true)) {
                    this.OrderCacheField = value;
                    this.RaisePropertyChanged("OrderCache");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> RelatedUnitID {
            get {
                return this.RelatedUnitIDField;
            }
            set {
                if ((this.RelatedUnitIDField.Equals(value) != true)) {
                    this.RelatedUnitIDField = value;
                    this.RaisePropertyChanged("RelatedUnitID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RelationType {
            get {
                return this.RelationTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.RelationTypeField, value) != true)) {
                    this.RelationTypeField = value;
                    this.RaisePropertyChanged("RelationType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SpecimenID {
            get {
                return this.SpecimenIDField;
            }
            set {
                if ((this.SpecimenIDField.Equals(value) != true)) {
                    this.SpecimenIDField = value;
                    this.RaisePropertyChanged("SpecimenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxonomicGroup {
            get {
                return this.TaxonomicGroupField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxonomicGroupField, value) != true)) {
                    this.TaxonomicGroupField = value;
                    this.RaisePropertyChanged("TaxonomicGroup");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UnitID {
            get {
                return this.UnitIDField;
            }
            set {
                if ((this.UnitIDField.Equals(value) != true)) {
                    this.UnitIDField = value;
                    this.RaisePropertyChanged("UnitID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Specimen", Namespace="http://schemas.datacontract.org/2004/07/DiversityService.Model")]
    public partial class Specimen : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string AccesionNumberField;
        
        private int CollectionEventIDField;
        
        private int CollectionSpecimenIDField;
        
        private System.DateTime LogUpdatedWhenField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccesionNumber {
            get {
                return this.AccesionNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.AccesionNumberField, value) != true)) {
                    this.AccesionNumberField = value;
                    this.RaisePropertyChanged("AccesionNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionEventID {
            get {
                return this.CollectionEventIDField;
            }
            set {
                if ((this.CollectionEventIDField.Equals(value) != true)) {
                    this.CollectionEventIDField = value;
                    this.RaisePropertyChanged("CollectionEventID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollectionSpecimenID {
            get {
                return this.CollectionSpecimenIDField;
            }
            set {
                if ((this.CollectionSpecimenIDField.Equals(value) != true)) {
                    this.CollectionSpecimenIDField = value;
                    this.RaisePropertyChanged("CollectionSpecimenID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LogUpdatedWhen {
            get {
                return this.LogUpdatedWhenField;
            }
            set {
                if ((this.LogUpdatedWhenField.Equals(value) != true)) {
                    this.LogUpdatedWhenField = value;
                    this.RaisePropertyChanged("LogUpdatedWhen");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Service.IDiversityService")]
    public interface IDiversityService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetProjectsForUser", ReplyAction="http://tempuri.org/IDiversityService/GetProjectsForUserResponse")]
        System.IAsyncResult BeginGetProjectsForUser(DiversityPhone.Service.UserProfile user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project> EndGetProjectsForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetTaxonListsForUser", ReplyAction="http://tempuri.org/IDiversityService/GetTaxonListsForUserResponse")]
        System.IAsyncResult BeginGetTaxonListsForUser(DiversityPhone.Service.UserProfile user, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList> EndGetTaxonListsForUser(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/DownloadTaxonList", ReplyAction="http://tempuri.org/IDiversityService/DownloadTaxonListResponse")]
        System.IAsyncResult BeginDownloadTaxonList(string list, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName> EndDownloadTaxonList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetStandardVocabulary", ReplyAction="http://tempuri.org/IDiversityService/GetStandardVocabularyResponse")]
        System.IAsyncResult BeginGetStandardVocabulary(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term> EndGetStandardVocabulary(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAnalysisResults", ReplyAction="http://tempuri.org/IDiversityService/GetAnalysisResultsResponse")]
        System.IAsyncResult BeginGetAnalysisResults(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> EndGetAnalysisResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAnalysisTaxonomicGroupsResults", ReplyAction="http://tempuri.org/IDiversityService/GetAnalysisTaxonomicGroupsResultsResponse")]
        System.IAsyncResult BeginGetAnalysisTaxonomicGroupsResults(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> EndGetAnalysisTaxonomicGroupsResults(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAnalysesForProject", ReplyAction="http://tempuri.org/IDiversityService/GetAnalysesForProjectResponse")]
        System.IAsyncResult BeginGetAnalysesForProject(DiversityPhone.Service.Project p, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis> EndGetAnalysesForProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAnalysisResultsForProject", ReplyAction="http://tempuri.org/IDiversityService/GetAnalysisResultsForProjectResponse")]
        System.IAsyncResult BeginGetAnalysisResultsForProject(DiversityPhone.Service.Project p, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> EndGetAnalysisResultsForProject(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/GetAvailablePropertyLists", ReplyAction="http://tempuri.org/IDiversityService/GetAvailablePropertyListsResponse")]
        System.IAsyncResult BeginGetAvailablePropertyLists(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<string> EndGetAvailablePropertyLists(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/DownloadPropertyList", ReplyAction="http://tempuri.org/IDiversityService/DownloadPropertyListResponse")]
        System.IAsyncResult BeginDownloadPropertyList(string list, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName> EndDownloadPropertyList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDiversityService/InsertHierarchy", ReplyAction="http://tempuri.org/IDiversityService/InsertHierarchyResponse")]
        System.IAsyncResult BeginInsertHierarchy(DiversityPhone.Service.HierarchySection hierarchy, System.AsyncCallback callback, object asyncState);
        
        DiversityPhone.Service.HierarchySection EndInsertHierarchy(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDiversityServiceChannel : DiversityPhone.Service.IDiversityService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetProjectsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetProjectsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTaxonListsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTaxonListsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadTaxonListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadTaxonListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetStandardVocabularyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetStandardVocabularyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalysisResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysisResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalysisTaxonomicGroupsResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysisTaxonomicGroupsResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalysesForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysesForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAnalysisResultsForProjectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAnalysisResultsForProjectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailablePropertyListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailablePropertyListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<string> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<string>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DownloadPropertyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DownloadPropertyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertHierarchyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertHierarchyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DiversityPhone.Service.HierarchySection Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DiversityPhone.Service.HierarchySection)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DiversityServiceClient : System.ServiceModel.ClientBase<DiversityPhone.Service.IDiversityService>, DiversityPhone.Service.IDiversityService {
        
        private BeginOperationDelegate onBeginGetProjectsForUserDelegate;
        
        private EndOperationDelegate onEndGetProjectsForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetProjectsForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTaxonListsForUserDelegate;
        
        private EndOperationDelegate onEndGetTaxonListsForUserDelegate;
        
        private System.Threading.SendOrPostCallback onGetTaxonListsForUserCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadTaxonListDelegate;
        
        private EndOperationDelegate onEndDownloadTaxonListDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadTaxonListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetStandardVocabularyDelegate;
        
        private EndOperationDelegate onEndGetStandardVocabularyDelegate;
        
        private System.Threading.SendOrPostCallback onGetStandardVocabularyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysisResultsDelegate;
        
        private EndOperationDelegate onEndGetAnalysisResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysisResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysisTaxonomicGroupsResultsDelegate;
        
        private EndOperationDelegate onEndGetAnalysisTaxonomicGroupsResultsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysisTaxonomicGroupsResultsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysesForProjectDelegate;
        
        private EndOperationDelegate onEndGetAnalysesForProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysesForProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAnalysisResultsForProjectDelegate;
        
        private EndOperationDelegate onEndGetAnalysisResultsForProjectDelegate;
        
        private System.Threading.SendOrPostCallback onGetAnalysisResultsForProjectCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailablePropertyListsDelegate;
        
        private EndOperationDelegate onEndGetAvailablePropertyListsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailablePropertyListsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDownloadPropertyListDelegate;
        
        private EndOperationDelegate onEndDownloadPropertyListDelegate;
        
        private System.Threading.SendOrPostCallback onDownloadPropertyListCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertHierarchyDelegate;
        
        private EndOperationDelegate onEndInsertHierarchyDelegate;
        
        private System.Threading.SendOrPostCallback onInsertHierarchyCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DiversityServiceClient() {
        }
        
        public DiversityServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DiversityServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetProjectsForUserCompletedEventArgs> GetProjectsForUserCompleted;
        
        public event System.EventHandler<GetTaxonListsForUserCompletedEventArgs> GetTaxonListsForUserCompleted;
        
        public event System.EventHandler<DownloadTaxonListCompletedEventArgs> DownloadTaxonListCompleted;
        
        public event System.EventHandler<GetStandardVocabularyCompletedEventArgs> GetStandardVocabularyCompleted;
        
        public event System.EventHandler<GetAnalysisResultsCompletedEventArgs> GetAnalysisResultsCompleted;
        
        public event System.EventHandler<GetAnalysisTaxonomicGroupsResultsCompletedEventArgs> GetAnalysisTaxonomicGroupsResultsCompleted;
        
        public event System.EventHandler<GetAnalysesForProjectCompletedEventArgs> GetAnalysesForProjectCompleted;
        
        public event System.EventHandler<GetAnalysisResultsForProjectCompletedEventArgs> GetAnalysisResultsForProjectCompleted;
        
        public event System.EventHandler<GetAvailablePropertyListsCompletedEventArgs> GetAvailablePropertyListsCompleted;
        
        public event System.EventHandler<DownloadPropertyListCompletedEventArgs> DownloadPropertyListCompleted;
        
        public event System.EventHandler<InsertHierarchyCompletedEventArgs> InsertHierarchyCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetProjectsForUser(DiversityPhone.Service.UserProfile user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProjectsForUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project> DiversityPhone.Service.IDiversityService.EndGetProjectsForUser(System.IAsyncResult result) {
            return base.Channel.EndGetProjectsForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetProjectsForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.Service.UserProfile user = ((DiversityPhone.Service.UserProfile)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetProjectsForUser(user, callback, asyncState);
        }
        
        private object[] OnEndGetProjectsForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetProjectsForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetProjectsForUserCompleted(object state) {
            if ((this.GetProjectsForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetProjectsForUserCompleted(this, new GetProjectsForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetProjectsForUserAsync(DiversityPhone.Service.UserProfile user) {
            this.GetProjectsForUserAsync(user, null);
        }
        
        public void GetProjectsForUserAsync(DiversityPhone.Service.UserProfile user, object userState) {
            if ((this.onBeginGetProjectsForUserDelegate == null)) {
                this.onBeginGetProjectsForUserDelegate = new BeginOperationDelegate(this.OnBeginGetProjectsForUser);
            }
            if ((this.onEndGetProjectsForUserDelegate == null)) {
                this.onEndGetProjectsForUserDelegate = new EndOperationDelegate(this.OnEndGetProjectsForUser);
            }
            if ((this.onGetProjectsForUserCompletedDelegate == null)) {
                this.onGetProjectsForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetProjectsForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetProjectsForUserDelegate, new object[] {
                        user}, this.onEndGetProjectsForUserDelegate, this.onGetProjectsForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetTaxonListsForUser(DiversityPhone.Service.UserProfile user, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTaxonListsForUser(user, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList> DiversityPhone.Service.IDiversityService.EndGetTaxonListsForUser(System.IAsyncResult result) {
            return base.Channel.EndGetTaxonListsForUser(result);
        }
        
        private System.IAsyncResult OnBeginGetTaxonListsForUser(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.Service.UserProfile user = ((DiversityPhone.Service.UserProfile)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetTaxonListsForUser(user, callback, asyncState);
        }
        
        private object[] OnEndGetTaxonListsForUser(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetTaxonListsForUser(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTaxonListsForUserCompleted(object state) {
            if ((this.GetTaxonListsForUserCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTaxonListsForUserCompleted(this, new GetTaxonListsForUserCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTaxonListsForUserAsync(DiversityPhone.Service.UserProfile user) {
            this.GetTaxonListsForUserAsync(user, null);
        }
        
        public void GetTaxonListsForUserAsync(DiversityPhone.Service.UserProfile user, object userState) {
            if ((this.onBeginGetTaxonListsForUserDelegate == null)) {
                this.onBeginGetTaxonListsForUserDelegate = new BeginOperationDelegate(this.OnBeginGetTaxonListsForUser);
            }
            if ((this.onEndGetTaxonListsForUserDelegate == null)) {
                this.onEndGetTaxonListsForUserDelegate = new EndOperationDelegate(this.OnEndGetTaxonListsForUser);
            }
            if ((this.onGetTaxonListsForUserCompletedDelegate == null)) {
                this.onGetTaxonListsForUserCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTaxonListsForUserCompleted);
            }
            base.InvokeAsync(this.onBeginGetTaxonListsForUserDelegate, new object[] {
                        user}, this.onEndGetTaxonListsForUserDelegate, this.onGetTaxonListsForUserCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginDownloadTaxonList(string list, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadTaxonList(list, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName> DiversityPhone.Service.IDiversityService.EndDownloadTaxonList(System.IAsyncResult result) {
            return base.Channel.EndDownloadTaxonList(result);
        }
        
        private System.IAsyncResult OnBeginDownloadTaxonList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string list = ((string)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginDownloadTaxonList(list, callback, asyncState);
        }
        
        private object[] OnEndDownloadTaxonList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndDownloadTaxonList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadTaxonListCompleted(object state) {
            if ((this.DownloadTaxonListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadTaxonListCompleted(this, new DownloadTaxonListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadTaxonListAsync(string list) {
            this.DownloadTaxonListAsync(list, null);
        }
        
        public void DownloadTaxonListAsync(string list, object userState) {
            if ((this.onBeginDownloadTaxonListDelegate == null)) {
                this.onBeginDownloadTaxonListDelegate = new BeginOperationDelegate(this.OnBeginDownloadTaxonList);
            }
            if ((this.onEndDownloadTaxonListDelegate == null)) {
                this.onEndDownloadTaxonListDelegate = new EndOperationDelegate(this.OnEndDownloadTaxonList);
            }
            if ((this.onDownloadTaxonListCompletedDelegate == null)) {
                this.onDownloadTaxonListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadTaxonListCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadTaxonListDelegate, new object[] {
                        list}, this.onEndDownloadTaxonListDelegate, this.onDownloadTaxonListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetStandardVocabulary(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetStandardVocabulary(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term> DiversityPhone.Service.IDiversityService.EndGetStandardVocabulary(System.IAsyncResult result) {
            return base.Channel.EndGetStandardVocabulary(result);
        }
        
        private System.IAsyncResult OnBeginGetStandardVocabulary(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetStandardVocabulary(callback, asyncState);
        }
        
        private object[] OnEndGetStandardVocabulary(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetStandardVocabulary(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetStandardVocabularyCompleted(object state) {
            if ((this.GetStandardVocabularyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetStandardVocabularyCompleted(this, new GetStandardVocabularyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetStandardVocabularyAsync() {
            this.GetStandardVocabularyAsync(null);
        }
        
        public void GetStandardVocabularyAsync(object userState) {
            if ((this.onBeginGetStandardVocabularyDelegate == null)) {
                this.onBeginGetStandardVocabularyDelegate = new BeginOperationDelegate(this.OnBeginGetStandardVocabulary);
            }
            if ((this.onEndGetStandardVocabularyDelegate == null)) {
                this.onEndGetStandardVocabularyDelegate = new EndOperationDelegate(this.OnEndGetStandardVocabulary);
            }
            if ((this.onGetStandardVocabularyCompletedDelegate == null)) {
                this.onGetStandardVocabularyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetStandardVocabularyCompleted);
            }
            base.InvokeAsync(this.onBeginGetStandardVocabularyDelegate, null, this.onEndGetStandardVocabularyDelegate, this.onGetStandardVocabularyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetAnalysisResults(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysisResults(analysisKeys, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> DiversityPhone.Service.IDiversityService.EndGetAnalysisResults(System.IAsyncResult result) {
            return base.Channel.EndGetAnalysisResults(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysisResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> analysisKeys = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetAnalysisResults(analysisKeys, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysisResults(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetAnalysisResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalysisResultsCompleted(object state) {
            if ((this.GetAnalysisResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysisResultsCompleted(this, new GetAnalysisResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysisResultsAsync(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys) {
            this.GetAnalysisResultsAsync(analysisKeys, null);
        }
        
        public void GetAnalysisResultsAsync(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, object userState) {
            if ((this.onBeginGetAnalysisResultsDelegate == null)) {
                this.onBeginGetAnalysisResultsDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysisResults);
            }
            if ((this.onEndGetAnalysisResultsDelegate == null)) {
                this.onEndGetAnalysisResultsDelegate = new EndOperationDelegate(this.OnEndGetAnalysisResults);
            }
            if ((this.onGetAnalysisResultsCompletedDelegate == null)) {
                this.onGetAnalysisResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysisResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysisResultsDelegate, new object[] {
                        analysisKeys}, this.onEndGetAnalysisResultsDelegate, this.onGetAnalysisResultsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetAnalysisTaxonomicGroupsResults(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysisTaxonomicGroupsResults(analysisKeys, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> DiversityPhone.Service.IDiversityService.EndGetAnalysisTaxonomicGroupsResults(System.IAsyncResult result) {
            return base.Channel.EndGetAnalysisTaxonomicGroupsResults(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysisTaxonomicGroupsResults(object[] inValues, System.AsyncCallback callback, object asyncState) {
            System.Collections.ObjectModel.ObservableCollection<int> analysisKeys = ((System.Collections.ObjectModel.ObservableCollection<int>)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetAnalysisTaxonomicGroupsResults(analysisKeys, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysisTaxonomicGroupsResults(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetAnalysisTaxonomicGroupsResults(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalysisTaxonomicGroupsResultsCompleted(object state) {
            if ((this.GetAnalysisTaxonomicGroupsResultsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysisTaxonomicGroupsResultsCompleted(this, new GetAnalysisTaxonomicGroupsResultsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysisTaxonomicGroupsResultsAsync(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys) {
            this.GetAnalysisTaxonomicGroupsResultsAsync(analysisKeys, null);
        }
        
        public void GetAnalysisTaxonomicGroupsResultsAsync(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, object userState) {
            if ((this.onBeginGetAnalysisTaxonomicGroupsResultsDelegate == null)) {
                this.onBeginGetAnalysisTaxonomicGroupsResultsDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysisTaxonomicGroupsResults);
            }
            if ((this.onEndGetAnalysisTaxonomicGroupsResultsDelegate == null)) {
                this.onEndGetAnalysisTaxonomicGroupsResultsDelegate = new EndOperationDelegate(this.OnEndGetAnalysisTaxonomicGroupsResults);
            }
            if ((this.onGetAnalysisTaxonomicGroupsResultsCompletedDelegate == null)) {
                this.onGetAnalysisTaxonomicGroupsResultsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysisTaxonomicGroupsResultsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysisTaxonomicGroupsResultsDelegate, new object[] {
                        analysisKeys}, this.onEndGetAnalysisTaxonomicGroupsResultsDelegate, this.onGetAnalysisTaxonomicGroupsResultsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetAnalysesForProject(DiversityPhone.Service.Project p, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysesForProject(p, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis> DiversityPhone.Service.IDiversityService.EndGetAnalysesForProject(System.IAsyncResult result) {
            return base.Channel.EndGetAnalysesForProject(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysesForProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.Service.Project p = ((DiversityPhone.Service.Project)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetAnalysesForProject(p, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysesForProject(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetAnalysesForProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalysesForProjectCompleted(object state) {
            if ((this.GetAnalysesForProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysesForProjectCompleted(this, new GetAnalysesForProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysesForProjectAsync(DiversityPhone.Service.Project p) {
            this.GetAnalysesForProjectAsync(p, null);
        }
        
        public void GetAnalysesForProjectAsync(DiversityPhone.Service.Project p, object userState) {
            if ((this.onBeginGetAnalysesForProjectDelegate == null)) {
                this.onBeginGetAnalysesForProjectDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysesForProject);
            }
            if ((this.onEndGetAnalysesForProjectDelegate == null)) {
                this.onEndGetAnalysesForProjectDelegate = new EndOperationDelegate(this.OnEndGetAnalysesForProject);
            }
            if ((this.onGetAnalysesForProjectCompletedDelegate == null)) {
                this.onGetAnalysesForProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysesForProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysesForProjectDelegate, new object[] {
                        p}, this.onEndGetAnalysesForProjectDelegate, this.onGetAnalysesForProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetAnalysisResultsForProject(DiversityPhone.Service.Project p, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAnalysisResultsForProject(p, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> DiversityPhone.Service.IDiversityService.EndGetAnalysisResultsForProject(System.IAsyncResult result) {
            return base.Channel.EndGetAnalysisResultsForProject(result);
        }
        
        private System.IAsyncResult OnBeginGetAnalysisResultsForProject(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.Service.Project p = ((DiversityPhone.Service.Project)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetAnalysisResultsForProject(p, callback, asyncState);
        }
        
        private object[] OnEndGetAnalysisResultsForProject(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetAnalysisResultsForProject(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAnalysisResultsForProjectCompleted(object state) {
            if ((this.GetAnalysisResultsForProjectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAnalysisResultsForProjectCompleted(this, new GetAnalysisResultsForProjectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAnalysisResultsForProjectAsync(DiversityPhone.Service.Project p) {
            this.GetAnalysisResultsForProjectAsync(p, null);
        }
        
        public void GetAnalysisResultsForProjectAsync(DiversityPhone.Service.Project p, object userState) {
            if ((this.onBeginGetAnalysisResultsForProjectDelegate == null)) {
                this.onBeginGetAnalysisResultsForProjectDelegate = new BeginOperationDelegate(this.OnBeginGetAnalysisResultsForProject);
            }
            if ((this.onEndGetAnalysisResultsForProjectDelegate == null)) {
                this.onEndGetAnalysisResultsForProjectDelegate = new EndOperationDelegate(this.OnEndGetAnalysisResultsForProject);
            }
            if ((this.onGetAnalysisResultsForProjectCompletedDelegate == null)) {
                this.onGetAnalysisResultsForProjectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAnalysisResultsForProjectCompleted);
            }
            base.InvokeAsync(this.onBeginGetAnalysisResultsForProjectDelegate, new object[] {
                        p}, this.onEndGetAnalysisResultsForProjectDelegate, this.onGetAnalysisResultsForProjectCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginGetAvailablePropertyLists(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailablePropertyLists(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<string> DiversityPhone.Service.IDiversityService.EndGetAvailablePropertyLists(System.IAsyncResult result) {
            return base.Channel.EndGetAvailablePropertyLists(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailablePropertyLists(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginGetAvailablePropertyLists(callback, asyncState);
        }
        
        private object[] OnEndGetAvailablePropertyLists(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<string> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndGetAvailablePropertyLists(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailablePropertyListsCompleted(object state) {
            if ((this.GetAvailablePropertyListsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailablePropertyListsCompleted(this, new GetAvailablePropertyListsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailablePropertyListsAsync() {
            this.GetAvailablePropertyListsAsync(null);
        }
        
        public void GetAvailablePropertyListsAsync(object userState) {
            if ((this.onBeginGetAvailablePropertyListsDelegate == null)) {
                this.onBeginGetAvailablePropertyListsDelegate = new BeginOperationDelegate(this.OnBeginGetAvailablePropertyLists);
            }
            if ((this.onEndGetAvailablePropertyListsDelegate == null)) {
                this.onEndGetAvailablePropertyListsDelegate = new EndOperationDelegate(this.OnEndGetAvailablePropertyLists);
            }
            if ((this.onGetAvailablePropertyListsCompletedDelegate == null)) {
                this.onGetAvailablePropertyListsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailablePropertyListsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailablePropertyListsDelegate, null, this.onEndGetAvailablePropertyListsDelegate, this.onGetAvailablePropertyListsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginDownloadPropertyList(string list, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDownloadPropertyList(list, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName> DiversityPhone.Service.IDiversityService.EndDownloadPropertyList(System.IAsyncResult result) {
            return base.Channel.EndDownloadPropertyList(result);
        }
        
        private System.IAsyncResult OnBeginDownloadPropertyList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string list = ((string)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginDownloadPropertyList(list, callback, asyncState);
        }
        
        private object[] OnEndDownloadPropertyList(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName> retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndDownloadPropertyList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDownloadPropertyListCompleted(object state) {
            if ((this.DownloadPropertyListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DownloadPropertyListCompleted(this, new DownloadPropertyListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DownloadPropertyListAsync(string list) {
            this.DownloadPropertyListAsync(list, null);
        }
        
        public void DownloadPropertyListAsync(string list, object userState) {
            if ((this.onBeginDownloadPropertyListDelegate == null)) {
                this.onBeginDownloadPropertyListDelegate = new BeginOperationDelegate(this.OnBeginDownloadPropertyList);
            }
            if ((this.onEndDownloadPropertyListDelegate == null)) {
                this.onEndDownloadPropertyListDelegate = new EndOperationDelegate(this.OnEndDownloadPropertyList);
            }
            if ((this.onDownloadPropertyListCompletedDelegate == null)) {
                this.onDownloadPropertyListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDownloadPropertyListCompleted);
            }
            base.InvokeAsync(this.onBeginDownloadPropertyListDelegate, new object[] {
                        list}, this.onEndDownloadPropertyListDelegate, this.onDownloadPropertyListCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult DiversityPhone.Service.IDiversityService.BeginInsertHierarchy(DiversityPhone.Service.HierarchySection hierarchy, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertHierarchy(hierarchy, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        DiversityPhone.Service.HierarchySection DiversityPhone.Service.IDiversityService.EndInsertHierarchy(System.IAsyncResult result) {
            return base.Channel.EndInsertHierarchy(result);
        }
        
        private System.IAsyncResult OnBeginInsertHierarchy(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DiversityPhone.Service.HierarchySection hierarchy = ((DiversityPhone.Service.HierarchySection)(inValues[0]));
            return ((DiversityPhone.Service.IDiversityService)(this)).BeginInsertHierarchy(hierarchy, callback, asyncState);
        }
        
        private object[] OnEndInsertHierarchy(System.IAsyncResult result) {
            DiversityPhone.Service.HierarchySection retVal = ((DiversityPhone.Service.IDiversityService)(this)).EndInsertHierarchy(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertHierarchyCompleted(object state) {
            if ((this.InsertHierarchyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertHierarchyCompleted(this, new InsertHierarchyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertHierarchyAsync(DiversityPhone.Service.HierarchySection hierarchy) {
            this.InsertHierarchyAsync(hierarchy, null);
        }
        
        public void InsertHierarchyAsync(DiversityPhone.Service.HierarchySection hierarchy, object userState) {
            if ((this.onBeginInsertHierarchyDelegate == null)) {
                this.onBeginInsertHierarchyDelegate = new BeginOperationDelegate(this.OnBeginInsertHierarchy);
            }
            if ((this.onEndInsertHierarchyDelegate == null)) {
                this.onEndInsertHierarchyDelegate = new EndOperationDelegate(this.OnEndInsertHierarchy);
            }
            if ((this.onInsertHierarchyCompletedDelegate == null)) {
                this.onInsertHierarchyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertHierarchyCompleted);
            }
            base.InvokeAsync(this.onBeginInsertHierarchyDelegate, new object[] {
                        hierarchy}, this.onEndInsertHierarchyDelegate, this.onInsertHierarchyCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override DiversityPhone.Service.IDiversityService CreateChannel() {
            return new DiversityServiceClientChannel(this);
        }
        
        private class DiversityServiceClientChannel : ChannelBase<DiversityPhone.Service.IDiversityService>, DiversityPhone.Service.IDiversityService {
            
            public DiversityServiceClientChannel(System.ServiceModel.ClientBase<DiversityPhone.Service.IDiversityService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetProjectsForUser(DiversityPhone.Service.UserProfile user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("GetProjectsForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project> EndGetProjectsForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Project>)(base.EndInvoke("GetProjectsForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetTaxonListsForUser(DiversityPhone.Service.UserProfile user, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = user;
                System.IAsyncResult _result = base.BeginInvoke("GetTaxonListsForUser", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList> EndGetTaxonListsForUser(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TermList>)(base.EndInvoke("GetTaxonListsForUser", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadTaxonList(string list, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = list;
                System.IAsyncResult _result = base.BeginInvoke("DownloadTaxonList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName> EndDownloadTaxonList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.TaxonName>)(base.EndInvoke("DownloadTaxonList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetStandardVocabulary(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetStandardVocabulary", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term> EndGetStandardVocabulary(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Term>)(base.EndInvoke("GetStandardVocabulary", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalysisResults(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = analysisKeys;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalysisResults", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> EndGetAnalysisResults(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult>)(base.EndInvoke("GetAnalysisResults", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalysisTaxonomicGroupsResults(System.Collections.ObjectModel.ObservableCollection<int> analysisKeys, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = analysisKeys;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalysisTaxonomicGroupsResults", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> EndGetAnalysisTaxonomicGroupsResults(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult>)(base.EndInvoke("GetAnalysisTaxonomicGroupsResults", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalysesForProject(DiversityPhone.Service.Project p, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = p;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalysesForProject", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis> EndGetAnalysesForProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.Analysis>)(base.EndInvoke("GetAnalysesForProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAnalysisResultsForProject(DiversityPhone.Service.Project p, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = p;
                System.IAsyncResult _result = base.BeginInvoke("GetAnalysisResultsForProject", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> EndGetAnalysisResultsForProject(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.AnalysisResult>)(base.EndInvoke("GetAnalysisResultsForProject", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailablePropertyLists(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAvailablePropertyLists", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<string> EndGetAvailablePropertyLists(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<string> _result = ((System.Collections.ObjectModel.ObservableCollection<string>)(base.EndInvoke("GetAvailablePropertyLists", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginDownloadPropertyList(string list, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = list;
                System.IAsyncResult _result = base.BeginInvoke("DownloadPropertyList", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName> EndDownloadPropertyList(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName> _result = ((System.Collections.ObjectModel.ObservableCollection<DiversityPhone.Service.PropertyName>)(base.EndInvoke("DownloadPropertyList", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginInsertHierarchy(DiversityPhone.Service.HierarchySection hierarchy, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = hierarchy;
                System.IAsyncResult _result = base.BeginInvoke("InsertHierarchy", _args, callback, asyncState);
                return _result;
            }
            
            public DiversityPhone.Service.HierarchySection EndInsertHierarchy(System.IAsyncResult result) {
                object[] _args = new object[0];
                DiversityPhone.Service.HierarchySection _result = ((DiversityPhone.Service.HierarchySection)(base.EndInvoke("InsertHierarchy", _args, result)));
                return _result;
            }
        }
    }
}
